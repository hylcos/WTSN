///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.20.1.2476 for 8051               02/Mar/2016  12:09:43
// Copyright 2004-2015 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  E:\Projects\WTSN\Components\stack\zdo\ZDProfile.c
//    Command line       =  
//        -f "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg" (-DCPU32MHZ
//        -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6
//        -DMAC_CFG_RX_MAX=3) -f
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg" (-DZIGBEEPRO
//        -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00008000 -DZDAPP_CONFIG_PAN_ID=0x0EEE
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
//        -DREJOIN_POLL_RATE=440
//        E:\Projects\WTSN\Components\stack\zdo\ZDProfile.c -D NWK_AUTO_POLL -D
//        HOLD_AUTO_START -D POWER_SAVING -D NV_INIT -D
//        DEVICE_LOGICAL_TYPE=ZG_DEVICETYPE_ENDDEVICE -lC
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\SensorEB\List\" -lA
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\SensorEB\List\" --diag_suppress Pe001,Pa010,Pe1665 -o
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\SensorEB\Obj\" -e --debug --core=plain --dptr=16,1
//        --data_model=large --code_model=banked
//        --calling_convention=xdata_reentrant --place_constants=data_rom
//        --nr_virtual_regs 16 -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica 2\CC2530DB\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\Source\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\ZMain\TI2530DB\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\hal\include\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\mac\include\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\mac\high_level\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\mt\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\osal\include\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\services\saddr\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\services\sdata\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\stack\af\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\stack\nwk\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\stack\sapi\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\stack\sec\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\stack\sys\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\stack\zdo\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\zmac\" -I
//        "E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\..\..\..\..\..\Components\zmac\f8w\" -Oh
//        --require_prototypes
//    List file          =  
//        E:\Projects\WTSN\Projects\zstack\Project\Practica
//        2\CC2530DB\SensorEB\List\ZDProfile.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDProfile

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V14
        EXTERN ?V15
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?US_SHR
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC `??ZDO_RegisterForZDOMsg::?relay`
        FUNCTION `??ZDO_RegisterForZDOMsg::?relay`,0203H
        PUBLIC `??ZDO_RemoveRegisteredCB::?relay`
        FUNCTION `??ZDO_RemoveRegisteredCB::?relay`,0203H
        PUBLIC `??ZDO_SendMsgCBs::?relay`
        FUNCTION `??ZDO_SendMsgCBs::?relay`,0203H
        PUBLIC `??ZDP_BindUnbindReq::?relay`
        FUNCTION `??ZDP_BindUnbindReq::?relay`,0203H
        PUBLIC `??ZDP_DeviceAnnce::?relay`
        FUNCTION `??ZDP_DeviceAnnce::?relay`,0203H
        PUBLIC `??ZDP_EPRsp::?relay`
        FUNCTION `??ZDP_EPRsp::?relay`,0203H
        PUBLIC `??ZDP_EndDeviceBindReq::?relay`
        FUNCTION `??ZDP_EndDeviceBindReq::?relay`,0203H
        PUBLIC `??ZDP_EndDeviceTimeoutReq::?relay`
        FUNCTION `??ZDP_EndDeviceTimeoutReq::?relay`,0203H
        PUBLIC `??ZDP_GenericRsp::?relay`
        FUNCTION `??ZDP_GenericRsp::?relay`,0203H
        PUBLIC `??ZDP_IEEEAddrReq::?relay`
        FUNCTION `??ZDP_IEEEAddrReq::?relay`,0203H
        PUBLIC `??ZDP_IncomingData::?relay`
        FUNCTION `??ZDP_IncomingData::?relay`,0203H
        PUBLIC `??ZDP_MatchDescReq::?relay`
        FUNCTION `??ZDP_MatchDescReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtBindRsp::?relay`
        FUNCTION `??ZDP_MgmtBindRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtDirectJoinReq::?relay`
        FUNCTION `??ZDP_MgmtDirectJoinReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtLeaveReq::?relay`
        FUNCTION `??ZDP_MgmtLeaveReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtLqiRsp::?relay`
        FUNCTION `??ZDP_MgmtLqiRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkDiscReq::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkDiscRsp::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkUpdateNotify::?relay`
        FUNCTION `??ZDP_MgmtNwkUpdateNotify::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkUpdateReq::?relay`
        FUNCTION `??ZDP_MgmtNwkUpdateReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtPermitJoinReq::?relay`
        FUNCTION `??ZDP_MgmtPermitJoinReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtRtgRsp::?relay`
        FUNCTION `??ZDP_MgmtRtgRsp::?relay`,0203H
        PUBLIC `??ZDP_NWKAddrOfInterestReq::?relay`
        FUNCTION `??ZDP_NWKAddrOfInterestReq::?relay`,0203H
        PUBLIC `??ZDP_NodeDescMsg::?relay`
        FUNCTION `??ZDP_NodeDescMsg::?relay`,0203H
        PUBLIC `??ZDP_NwkAddrReq::?relay`
        FUNCTION `??ZDP_NwkAddrReq::?relay`,0203H
        PUBLIC `??ZDP_PowerDescMsg::?relay`
        FUNCTION `??ZDP_PowerDescMsg::?relay`,0203H
        PUBLIC `??ZDP_SendData::?relay`
        FUNCTION `??ZDP_SendData::?relay`,0203H
        PUBLIC `??ZDP_ServerDiscReq::?relay`
        FUNCTION `??ZDP_ServerDiscReq::?relay`,0203H
        PUBLIC `??ZDP_ServerDiscRsp::?relay`
        FUNCTION `??ZDP_ServerDiscRsp::?relay`,0203H
        PUBLIC `??ZDP_SimpleDescMsg::?relay`
        FUNCTION `??ZDP_SimpleDescMsg::?relay`,0203H
        PUBLIC `??ZDP_SimpleDescReq::?relay`
        FUNCTION `??ZDP_SimpleDescReq::?relay`,0203H
        PUBLIC `??ZDP_UserDescRsp::?relay`
        FUNCTION `??ZDP_UserDescRsp::?relay`,0203H
        PUBLIC `??ZDP_UserDescSet::?relay`
        FUNCTION `??ZDP_UserDescSet::?relay`,0203H
        FUNCTION `??fillAndSend::?relay`,0203H
        PUBLIC `??zdpProcessAddrReq::?relay`
        FUNCTION `??zdpProcessAddrReq::?relay`,0203H
        PUBLIC ZDO_RegisterForZDOMsg
        FUNCTION ZDO_RegisterForZDOMsg,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_RemoveRegisteredCB
        FUNCTION ZDO_RemoveRegisteredCB,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_SendMsgCBs
        FUNCTION ZDO_SendMsgCBs,0a1203H
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 27, STACK
        PUBLIC ZDP_AF_ENDPOINT
        PUBLIC ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDP_DeviceAnnce
        FUNCTION ZDP_DeviceAnnce,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0a1203H
        ARGFRAME XSTACK, 7, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDP_EndDeviceBindReq
        FUNCTION ZDP_EndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 9, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDP_EndDeviceTimeoutReq
        FUNCTION ZDP_EndDeviceTimeoutReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC ZDP_IEEEAddrReq
        FUNCTION ZDP_IEEEAddrReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC ZDP_IncomingData
        FUNCTION ZDP_IncomingData,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC ZDP_MatchDescReq
        FUNCTION ZDP_MatchDescReq,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtDirectJoinReq
        FUNCTION ZDP_MgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLeaveReq
        FUNCTION ZDP_MgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 43, STACK
        PUBLIC ZDP_MgmtNwkDiscReq
        FUNCTION ZDP_MgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDP_MgmtNwkDiscRsp
        FUNCTION ZDP_MgmtNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtNwkUpdateNotify
        FUNCTION ZDP_MgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 12, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtNwkUpdateReq
        FUNCTION ZDP_MgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 6, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDP_MgmtPermitJoinReq
        FUNCTION ZDP_MgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_NWKAddrOfInterestReq
        FUNCTION ZDP_NWKAddrOfInterestReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 34, STACK
        PUBLIC ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 44, STACK
        PUBLIC ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 34, STACK
        PUBLIC ZDP_SendData
        FUNCTION ZDP_SendData,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC ZDP_ServerDiscReq
        FUNCTION ZDP_ServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 39, STACK
        PUBLIC ZDP_SimpleDescReq
        FUNCTION ZDP_SimpleDescReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC ZDP_TransID
        PUBLIC ZDP_TxOptions
        PUBLIC ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_UserDescSet
        FUNCTION ZDP_UserDescSet,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        FUNCTION fillAndSend,0a1203H
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC zdoMsgCBs
        PUBLIC zdpMsgProcs
        PUBLIC zdpProcessAddrReq
        FUNCTION zdpProcessAddrReq,0a1603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
AF_DataRequest      SYMBOL "AF_DataRequest"
`??AF_DataRequest::?relay` SYMBOL "?relay", AF_DataRequest
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
`??NLME_GetExtAddr::?relay` SYMBOL "?relay", NLME_GetExtAddr
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
`??NLME_GetShortAddr::?relay` SYMBOL "?relay", NLME_GetShortAddr
ZDApp_InMsgCB       SYMBOL "ZDApp_InMsgCB"
`??ZDApp_InMsgCB::?relay` SYMBOL "?relay", ZDApp_InMsgCB
`?<Name ZDO_ProcessActiveEPR 8>` SYMBOL "ZDO_ProcessActiveEPReq"
`??ZDO_ProcessActiveEPReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessActiveEPR 8>`
`?<Name ZDO_ProcessMatchDesc 10>` SYMBOL "ZDO_ProcessMatchDescReq"
`??ZDO_ProcessMatchDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMatchDesc 10>`
`?<Name ZDO_ProcessNodeDescR 12>` SYMBOL "ZDO_ProcessNodeDescReq"
`??ZDO_ProcessNodeDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessNodeDescR 12>`
`?<Name ZDO_ProcessPowerDesc 14>` SYMBOL "ZDO_ProcessPowerDescReq"
`??ZDO_ProcessPowerDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessPowerDesc 14>`
`?<Name ZDO_ProcessSimpleDes 16>` SYMBOL "ZDO_ProcessSimpleDescReq"
`??ZDO_ProcessSimpleDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessSimpleDes 16>`
osal_buffer_uint32  SYMBOL "osal_buffer_uint32"
`??osal_buffer_uint32::?relay` SYMBOL "?relay", osal_buffer_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
`??osal_msg_allocate::?relay` SYMBOL "?relay", osal_msg_allocate
osal_msg_send       SYMBOL "osal_msg_send"
`??osal_msg_send::?relay` SYMBOL "?relay", osal_msg_send
sAddrExtCmp         SYMBOL "sAddrExtCmp"
`??sAddrExtCmp::?relay` SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
`??sAddrExtCpy::?relay` SYMBOL "?relay", sAddrExtCpy
ZDO_RegisterForZDOMsg SYMBOL "ZDO_RegisterForZDOMsg"
`??ZDO_RegisterForZDOMsg::?relay` SYMBOL "?relay", ZDO_RegisterForZDOMsg
ZDO_RemoveRegisteredCB SYMBOL "ZDO_RemoveRegisteredCB"
`??ZDO_RemoveRegisteredCB::?relay` SYMBOL "?relay", ZDO_RemoveRegisteredCB
ZDO_SendMsgCBs      SYMBOL "ZDO_SendMsgCBs"
`??ZDO_SendMsgCBs::?relay` SYMBOL "?relay", ZDO_SendMsgCBs
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
`??ZDP_BindUnbindReq::?relay` SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_DeviceAnnce     SYMBOL "ZDP_DeviceAnnce"
`??ZDP_DeviceAnnce::?relay` SYMBOL "?relay", ZDP_DeviceAnnce
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
`??ZDP_EPRsp::?relay` SYMBOL "?relay", ZDP_EPRsp
ZDP_EndDeviceBindReq SYMBOL "ZDP_EndDeviceBindReq"
`??ZDP_EndDeviceBindReq::?relay` SYMBOL "?relay", ZDP_EndDeviceBindReq
ZDP_EndDeviceTimeoutReq SYMBOL "ZDP_EndDeviceTimeoutReq"
`??ZDP_EndDeviceTimeoutReq::?relay` SYMBOL "?relay", ZDP_EndDeviceTimeoutReq
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
`??ZDP_GenericRsp::?relay` SYMBOL "?relay", ZDP_GenericRsp
ZDP_IEEEAddrReq     SYMBOL "ZDP_IEEEAddrReq"
`??ZDP_IEEEAddrReq::?relay` SYMBOL "?relay", ZDP_IEEEAddrReq
ZDP_IncomingData    SYMBOL "ZDP_IncomingData"
`??ZDP_IncomingData::?relay` SYMBOL "?relay", ZDP_IncomingData
ZDP_MatchDescReq    SYMBOL "ZDP_MatchDescReq"
`??ZDP_MatchDescReq::?relay` SYMBOL "?relay", ZDP_MatchDescReq
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
`??ZDP_MgmtBindRsp::?relay` SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtDirectJoinReq SYMBOL "ZDP_MgmtDirectJoinReq"
`??ZDP_MgmtDirectJoinReq::?relay` SYMBOL "?relay", ZDP_MgmtDirectJoinReq
ZDP_MgmtLeaveReq    SYMBOL "ZDP_MgmtLeaveReq"
`??ZDP_MgmtLeaveReq::?relay` SYMBOL "?relay", ZDP_MgmtLeaveReq
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
`??ZDP_MgmtLqiRsp::?relay` SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtNwkDiscReq  SYMBOL "ZDP_MgmtNwkDiscReq"
`??ZDP_MgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscReq
ZDP_MgmtNwkDiscRsp  SYMBOL "ZDP_MgmtNwkDiscRsp"
`??ZDP_MgmtNwkDiscRsp::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscRsp
ZDP_MgmtNwkUpdateNotify SYMBOL "ZDP_MgmtNwkUpdateNotify"
`??ZDP_MgmtNwkUpdateNotify::?relay` SYMBOL "?relay", ZDP_MgmtNwkUpdateNotify
ZDP_MgmtNwkUpdateReq SYMBOL "ZDP_MgmtNwkUpdateReq"
`??ZDP_MgmtNwkUpdateReq::?relay` SYMBOL "?relay", ZDP_MgmtNwkUpdateReq
ZDP_MgmtPermitJoinReq SYMBOL "ZDP_MgmtPermitJoinReq"
`??ZDP_MgmtPermitJoinReq::?relay` SYMBOL "?relay", ZDP_MgmtPermitJoinReq
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
`??ZDP_MgmtRtgRsp::?relay` SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NWKAddrOfInterestReq SYMBOL "ZDP_NWKAddrOfInterestReq"
`??ZDP_NWKAddrOfInterestReq::?relay` SYMBOL "?relay", ZDP_NWKAddrOfInterestReq
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
`??ZDP_NodeDescMsg::?relay` SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
`??ZDP_NwkAddrReq::?relay` SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
`??ZDP_PowerDescMsg::?relay` SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
`??ZDP_SendData::?relay` SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscReq   SYMBOL "ZDP_ServerDiscReq"
`??ZDP_ServerDiscReq::?relay` SYMBOL "?relay", ZDP_ServerDiscReq
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
`??ZDP_ServerDiscRsp::?relay` SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
`??ZDP_SimpleDescMsg::?relay` SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_SimpleDescReq   SYMBOL "ZDP_SimpleDescReq"
`??ZDP_SimpleDescReq::?relay` SYMBOL "?relay", ZDP_SimpleDescReq
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
`??ZDP_UserDescRsp::?relay` SYMBOL "?relay", ZDP_UserDescRsp
ZDP_UserDescSet     SYMBOL "ZDP_UserDescSet"
`??ZDP_UserDescSet::?relay` SYMBOL "?relay", ZDP_UserDescSet
zdpProcessAddrReq   SYMBOL "zdpProcessAddrReq"
`??zdpProcessAddrReq::?relay` SYMBOL "?relay", zdpProcessAddrReq

        EXTERN `??AF_DataRequest::?relay`
        FUNCTION `??AF_DataRequest::?relay`,00H
        EXTERN `??NLME_GetExtAddr::?relay`
        FUNCTION `??NLME_GetExtAddr::?relay`,00H
        EXTERN `??NLME_GetShortAddr::?relay`
        FUNCTION `??NLME_GetShortAddr::?relay`,00H
        EXTERN `??ZDApp_InMsgCB::?relay`
        FUNCTION `??ZDApp_InMsgCB::?relay`,00H
        EXTERN `??ZDO_ProcessActiveEPReq::?relay`
        FUNCTION `??ZDO_ProcessActiveEPReq::?relay`,00H
        EXTERN `??ZDO_ProcessMatchDescReq::?relay`
        FUNCTION `??ZDO_ProcessMatchDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessNodeDescReq::?relay`
        FUNCTION `??ZDO_ProcessNodeDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessPowerDescReq::?relay`
        FUNCTION `??ZDO_ProcessPowerDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessSimpleDescReq::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescReq::?relay`,00H
        EXTERN `??osal_buffer_uint32::?relay`
        FUNCTION `??osal_buffer_uint32::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_msg_allocate::?relay`
        FUNCTION `??osal_msg_allocate::?relay`,00H
        EXTERN `??osal_msg_send::?relay`
        FUNCTION `??osal_msg_send::?relay`,00H
        EXTERN `??sAddrExtCmp::?relay`
        FUNCTION `??sAddrExtCmp::?relay`,00H
        EXTERN `??sAddrExtCpy::?relay`
        FUNCTION `??sAddrExtCpy::?relay`,00H
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 44, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDApp_InMsgCB
        FUNCTION ZDApp_InMsgCB,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_epDesc
        EXTERN osal_buffer_uint32
        FUNCTION osal_buffer_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN saveExtAddr

// E:\Projects\WTSN\Components\stack\zdo\ZDProfile.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDProfile.c
//    3   Revised:        $Date: 2013-10-02 15:57:50 -0700 (Wed, 02 Oct 2013) $
//    4   Revision:       $Revision: 35529 $
//    5 
//    6   Description:    This is the Zigbee Device Profile.
//    7 
//    8 
//    9   Copyright 2004-2013 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComDef.h"
//   44 #include "OSAL.h"
//   45 #include "AF.h"
//   46 #include "NLMEDE.h"
//   47 #include "nwk_util.h"
//   48 #include "APS.h"
//   49 
//   50 #include "AddrMgr.h"
//   51 #include "ZDConfig.h"
//   52 #include "ZDProfile.h"
//   53 #include "ZDObject.h"
//   54 #include "ZDNwkMgr.h"
//   55 
//   56 #if defined( LCD_SUPPORTED )
//   57   #include "OnBoard.h"
//   58 #endif
//   59 
//   60 #include "nwk_util.h"
//   61 
//   62 #if defined( MT_ZDO_FUNC )
//   63   #include "MT_ZDO.h"
//   64 #endif
//   65 
//   66 /*********************************************************************
//   67  * MACROS
//   68  */
//   69 
//   70 #define ZADDR_TO_AFADDR( pZADDR, AFADDR ) {                            \ 
//   71   (AFADDR).endPoint = ZDP_AF_ENDPOINT;                                 \ 
//   72   (AFADDR).addrMode = (afAddrMode_t)(pZADDR)->addrMode;                \ 
//   73   (AFADDR).addr.shortAddr = (pZADDR)->addr.shortAddr;                  \ 
//   74 }
//   75 
//   76 #define FillAndSendBuffer( TRANSSEQ, ADDR, ID, LEN, BUF ) {     \ 
//   77   afStatus_t stat;                                    \ 
//   78   ZDP_TmpBuf = (BUF)+1;                               \ 
//   79   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   80   osal_mem_free( (BUF) );                             \ 
//   81   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//   82   return stat;                                        \ 
//   83 }
//   84 
//   85 #define FillAndSendTxOptions( TRANSSEQ, ADDR, ID, LEN, TxO ) {  \ 
//   86   afStatus_t stat;                                    \ 
//   87   ZDP_TxOptions = (TxO);                              \ 
//   88   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   89   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//   90   return stat;                                        \ 
//   91 }
//   92 
//   93 #define FillAndSendBufferTxOptions( TRANSSEQ, ADDR, ID, LEN, BUF, TxO ) { \ 
//   94   afStatus_t stat;                                    \ 
//   95   ZDP_TmpBuf = (BUF)+1;                               \ 
//   96   ZDP_TxOptions = (TxO);                              \ 
//   97   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   98   osal_mem_free( (BUF) );                             \ 
//   99   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//  100   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//  101   return stat;                                        \ 
//  102 }
//  103 
//  104 /*********************************************************************
//  105  * CONSTANTS
//  106  */
//  107 
//  108 #define ZDP_BUF_SZ          80
//  109 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  110 CONST byte ZDP_AF_ENDPOINT = 0;
ZDP_AF_ENDPOINT:
        DB 0
//  111 
//  112 // Routing table options
//  113 #define ZP_RTG_RECORD       0x04       // Routing table indication that a route record is needed
//  114 #define ZP_MTO_ROUTE_RC     0x08       // Concentrator with routing cache
//  115 #define ZP_MTO_ROUTE_NRC    0x10       // Concentrator with limited cache
//  116 
//  117 
//  118 /*********************************************************************
//  119  * TYPEDEFS
//  120  */
//  121 typedef struct
//  122 {
//  123   void *next;
//  124   uint8 taskID;
//  125   uint16 clusterID;
//  126 } ZDO_MsgCB_t;
//  127 
//  128 
//  129 /*********************************************************************
//  130  * GLOBAL VARIABLES
//  131  */
//  132 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  133 byte ZDP_TransID = 0;
ZDP_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  134 
//  135 /*********************************************************************
//  136  * EXTERNAL VARIABLES
//  137  */
//  138 
//  139 extern endPointDesc_t ZDApp_epDesc;
//  140 
//  141 /*********************************************************************
//  142  * EXTERNAL FUNCTIONS
//  143  */
//  144 
//  145 /*********************************************************************
//  146  * LOCAL FUNCTIONS
//  147  */
//  148 
//  149 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len );
//  150 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg );
//  151 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg );
//  152 
//  153 /*********************************************************************
//  154  * LOCAL VARIABLES
//  155  */
//  156 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  157 static uint8  ZDP_Buf[ ZDP_BUF_SZ ];
ZDP_Buf:
        DS 80
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//  158 static uint8 *ZDP_TmpBuf = ZDP_Buf+1;
ZDP_TmpBuf:
        DATA16
        DS 2
        REQUIRE `?<Initializer for ZDP_TmpBuf>`
        REQUIRE __INIT_XDATA_I
//  159 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  160 byte ZDP_TxOptions = AF_TX_OPTIONS_NONE;
ZDP_TxOptions:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  161 ZDO_MsgCB_t *zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
zdoMsgCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  162 
//  163 /*********************************************************************
//  164  * ZDO Message Processing table
//  165  */
//  166 
//  167 typedef void (*pfnZDPMsgProcessor)( zdoIncomingMsg_t *inMsg );
//  168 
//  169 typedef struct
//  170 {
//  171   uint16                clusterID;
//  172   pfnZDPMsgProcessor    pFn;
//  173 } zdpMsgProcItem_t;
//  174 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  175 CONST zdpMsgProcItem_t zdpMsgProcs[] =
zdpMsgProcs:
        DATA16
        DW 1
        DW `??zdpProcessAddrReq::?relay`
        DW 2
        DW `??ZDO_ProcessNodeDescReq::?relay`
        DW 3
        DW `??ZDO_ProcessPowerDescReq::?relay`
        DW 4
        DW `??ZDO_ProcessSimpleDescReq::?relay`
        DW 5
        DW `??ZDO_ProcessActiveEPReq::?relay`
        DW 6
        DW `??ZDO_ProcessMatchDescReq::?relay`
        DW 65535
        DW 0H
//  176 {
//  177 #if ( RFD_RCVC_ALWAYS_ON==TRUE ) || ( ZG_BUILD_RTR_TYPE )
//  178   // These aren't processed by sleeping end devices.
//  179   { NWK_addr_req,           zdpProcessAddrReq },
//  180   { Device_annce,           ZDO_ProcessDeviceAnnce },
//  181 #endif
//  182   { IEEE_addr_req,          zdpProcessAddrReq },
//  183   { Node_Desc_req,          ZDO_ProcessNodeDescReq },
//  184   { Power_Desc_req,         ZDO_ProcessPowerDescReq },
//  185   { Simple_Desc_req,        ZDO_ProcessSimpleDescReq },
//  186   { Active_EP_req,          ZDO_ProcessActiveEPReq },
//  187   { Match_Desc_req,         ZDO_ProcessMatchDescReq },
//  188 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
//  189   { Mgmt_NWK_Disc_req,      ZDO_ProcessMgmtNwkDiscReq },
//  190 #endif
//  191 #if defined ( ZDO_MGMT_LQI_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  192   { Mgmt_Lqi_req,           ZDO_ProcessMgmtLqiReq },
//  193 #endif
//  194 #if defined ( ZDO_MGMT_RTG_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  195   { Mgmt_Rtg_req,           ZDO_ProcessMgmtRtgReq },
//  196 #endif
//  197 #if defined ( ZDO_MGMT_BIND_RESPONSE ) && defined ( REFLECTOR )
//  198   { Mgmt_Bind_req,          ZDO_ProcessMgmtBindReq },
//  199 #endif
//  200 #if defined ( ZDO_MGMT_JOINDIRECT_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  201   { Mgmt_Direct_Join_req,   ZDO_ProcessMgmtDirectJoinReq },
//  202 #endif
//  203 #if defined ( ZDO_MGMT_LEAVE_RESPONSE )
//  204   { Mgmt_Leave_req,         ZDO_ProcessMgmtLeaveReq },
//  205 #endif
//  206 #if defined ( ZDO_MGMT_PERMIT_JOIN_RESPONSE )  && ( ZG_BUILD_RTR_TYPE )
//  207   { Mgmt_Permit_Join_req,   ZDO_ProcessMgmtPermitJoinReq },
//  208 #endif
//  209 #if defined ( ZDO_USERDESC_RESPONSE )
//  210   { User_Desc_req,          ZDO_ProcessUserDescReq },
//  211 #endif
//  212 #if defined ( ZDO_USERDESCSET_RESPONSE )
//  213   { User_Desc_set,          ZDO_ProcessUserDescSet },
//  214 #endif
//  215 #if defined ( ZDO_SERVERDISC_RESPONSE )
//  216   { Server_Discovery_req,   ZDO_ProcessServerDiscReq },
//  217 #endif
//  218 #if defined ( ZIGBEE_CHILD_AGING )
//  219 #if defined ( ZDO_ENDDEVICETIMEOUT_REQUEST )
//  220   { End_Device_Timeout_req, ZDO_ProcessEndDeviceTimeoutReq },
//  221 #endif
//  222 #endif // ZIGBEE_CHILD_AGING
//  223   {0xFFFF, NULL} // Last
//  224 };
//  225 
//  226 /*********************************************************************
//  227  * @fn          fillAndSend
//  228  *
//  229  * @brief       Combined to reduce space
//  230  *
//  231  * @param
//  232  * @param
//  233  *
//  234  * @return      afStatus_t
//  235  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  236 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len )
fillAndSend:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function fillAndSend
        CODE
//  237 {
        FUNCALL fillAndSend, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL fillAndSend, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     ?V4,R1
//  238   afAddrType_t afAddr;
//  239 
//  240   osal_memset( &afAddr, 0, sizeof(afAddrType_t) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xc
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
//  241   ZADDR_TO_AFADDR( addr, afAddr );
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_0:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
//  242 
//  243   *(ZDP_TmpBuf-1) = *transSeq;
??CrossCallReturnLabel_19:
        LCALL   ?Subroutine81 & 0xFFFF
//  244 
//  245   return AF_DataRequest( &afAddr, &ZDApp_epDesc, clusterID,
//  246                            (uint16)(len+1), (uint8*)(ZDP_TmpBuf-1),
//  247                            transSeq, ZDP_TxOptions,  AF_DEFAULT_RADIUS );
??CrossCallReturnLabel_133:
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V5,#0x1e
        MOV     R0,#?V5
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     A,?V4
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_122:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     A,#0x21
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        LJMP    ??Subroutine118_0 & 0xFFFF
//  248 
//  249 }
          CFI EndBlock cfiBlock0
//  250 
//  251 /*********************************************************************
//  252  * @fn          ZDP_SendData
//  253  *
//  254  * @brief       This builds and send a request message that has
//  255  *              NWKAddrOfInterest as its only parameter.
//  256  *
//  257  * @param       dstAddr - destination address
//  258  * @param       cmd - clusterID
//  259  * @param       dataLen - number of bytes of data
//  260  * @param       data - pointer to the data
//  261  * @param       SecurityEnable - Security Options
//  262  *
//  263  * @return      afStatus_t
//  264  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  265 afStatus_t ZDP_SendData( uint8 *TransSeq, zAddrType_t *dstAddr, uint16 cmd,
ZDP_SendData:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ZDP_SendData
        CODE
//  266                         byte len, uint8 *buf, byte SecurityEnable )
//  267 {
        FUNCALL ZDP_SendData, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_SendData, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     ?V1,R1
//  268   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ??Subroutine129_0 & 0xFFFF
//  269   byte cnt = len;
??CrossCallReturnLabel_252:
        MOV     A,R1
        JZ      ??ZDP_SendData_0
        MOV     ?V0,A
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine150_0 & 0xFFFF
//  270 
//  271   while ( cnt-- )
//  272   {
//  273     *pBuf++ = *buf++;
??CrossCallReturnLabel_312:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine70 & 0xFFFF
//  274   }
??CrossCallReturnLabel_112:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        DEC     ?V0
        MOV     A,?V0
        JNZ     ??CrossCallReturnLabel_312
//  275 
//  276   FillAndSendTxOptions( TransSeq, dstAddr, cmd, len, ((SecurityEnable) ? AF_EN_SECURITY : 0) );
??ZDP_SendData_0:
        MOV     A,#0x1f
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPTR,#ZDP_TxOptions
        JZ      ??ZDP_SendData_1
        MOV     A,#0x40
        SJMP    ??ZDP_SendData_2
??ZDP_SendData_1:
        CLR     A
??ZDP_SendData_2:
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_218:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_1:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_20:
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     ?V5,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     DPL,?V4
        MOV     DPH,?V5
        MOVX    @DPTR,A
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V6,#0x1e
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,?V1
        ADD     A,#0x1
        MOV     ?V2,A
        CLR     A
        ADDC    A,#0x0
        MOV     ?V3,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,#0x22
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_193:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        MOV     R1,A
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        LJMP    ?Subroutine1 & 0xFFFF
//  277 }
          CFI EndBlock cfiBlock1

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond2 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond3 Using cfiCommon0
          CFI (cfiCond3) Function ZDP_SendData
          CFI (cfiCond3) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond3) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond3) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond3) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond3) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond3) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond3) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond3) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond3) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond3) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond3) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond3) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond3) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond3) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond3) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond3) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond3) CFA_SP SP+-2
          CFI (cfiCond3) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker4 Using cfiCommon1
          CFI (cfiPicker4) NoFunction
          CFI (cfiPicker4) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_131:
        RET
          CFI (cfiCond2) CFA_SP SP+0
          CFI (cfiCond3) CFA_SP SP+0
          CFI (cfiPicker4) CFA_SP SP+0
          CFI EndBlock cfiCond2
          CFI EndBlock cfiCond3
          CFI EndBlock cfiPicker4

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond5 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function ZDP_SendData
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_20
          CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond6) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond6) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond6) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond6) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond6) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond6) CFA_SP SP+-4
          CFI (cfiCond6) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function ZDP_NodeDescMsg
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_9
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond7) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+-4
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond8 Using cfiCommon0
          CFI (cfiCond8) Function ZDP_PowerDescMsg
          CFI (cfiCond8) Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_10
          CFI (cfiCond8) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond8) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond8) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond8) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond8) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond8) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond8) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond8) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond8) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond8) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond8) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond8) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond8) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond8) CFA_SP SP+-4
          CFI (cfiCond8) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker9 Using cfiCommon1
          CFI (cfiPicker9) NoFunction
          CFI (cfiPicker9) Picker
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_178:
        LCALL   ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_168:
        RET
          CFI (cfiCond5) CFA_SP SP+-2
          CFI (cfiCond6) CFA_SP SP+-2
          CFI (cfiCond7) CFA_SP SP+-2
          CFI (cfiCond8) CFA_SP SP+-2
          CFI (cfiPicker9) CFA_SP SP+0
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiCond8
          CFI EndBlock cfiPicker9

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond10 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function ZDP_SendData
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_20
          CFI (cfiCond11) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond11) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond11) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond11) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond11) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond11) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond11) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond11) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond11) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond11) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond11) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond11) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond11) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond11) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond11) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond11) CFA_SP SP+-6
          CFI (cfiCond11) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function ZDP_NodeDescMsg
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_9
          CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond12) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond12) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond12) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond12) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond12) CFA_SP SP+-6
          CFI (cfiCond12) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond13 Using cfiCommon0
          CFI (cfiCond13) Function ZDP_PowerDescMsg
          CFI (cfiCond13) Conditional ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_10
          CFI (cfiCond13) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond13) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond13) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond13) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond13) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond13) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond13) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond13) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond13) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond13) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond13) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond13) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond13) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond13) CFA_SP SP+-6
          CFI (cfiCond13) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond14 Using cfiCommon0
          CFI (cfiCond14) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond14) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_11
          CFI (cfiCond14) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond14) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond14) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond14) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond14) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond14) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond14) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond14) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond14) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond14) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond14) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond14) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond14) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond14) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond14) CFA_SP SP+-6
          CFI (cfiCond14) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function ZDP_SimpleDescReq
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_12
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond15) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+-6
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ZDP_MatchDescReq
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_15
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-6
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function ZDP_SimpleDescMsg
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_16
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond17) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond17) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+-6
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker18 Using cfiCommon1
          CFI (cfiPicker18) NoFunction
          CFI (cfiPicker18) Picker
        LCALL   ??Subroutine151_0 & 0xFFFF
??CrossCallReturnLabel_333:
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        ADD     A,#-0x1
        RET
          CFI (cfiCond10) CFA_SP SP+-4
          CFI (cfiCond11) CFA_SP SP+-4
          CFI (cfiCond12) CFA_SP SP+-4
          CFI (cfiCond13) CFA_SP SP+-4
          CFI (cfiCond14) CFA_SP SP+-4
          CFI (cfiCond15) CFA_SP SP+-4
          CFI (cfiCond16) CFA_SP SP+-4
          CFI (cfiCond17) CFA_SP SP+-4
          CFI (cfiPicker18) CFA_SP SP+0
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiCond13
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiPicker18
//  278 
//  279 /*********************************************************************
//  280  * @fn          ZDP_NWKAddrOfInterestReq
//  281  *
//  282  * @brief       This builds and send a request message that has
//  283  *              NWKAddrOfInterest as its only parameter.
//  284  *
//  285  * @param       dstAddr - destination address
//  286  * @param       nwkAddr - 16 bit address
//  287  * @param       SecurityEnable - Security Options
//  288  *
//  289  * @return      afStatus_t
//  290  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  291 afStatus_t ZDP_NWKAddrOfInterestReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_NWKAddrOfInterestReq:
          CFI Block cfiBlock19 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
        CODE
//  292                                      byte cmd, byte SecurityEnable )
//  293 {
        FUNCALL ZDP_NWKAddrOfInterestReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NWKAddrOfInterestReq, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V2,R1
//  294   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  295 
//  296   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL   ?Subroutine28 & 0xFFFF
//  297   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_40:
        LCALL   ??Subroutine125_0 & 0xFFFF
//  298 
//  299   return fillAndSend( &ZDP_TransID, dstAddr, cmd, 2 );
??CrossCallReturnLabel_219:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_3:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_11:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V4,#ZDP_TransID & 0xff
        MOV     ?V5,#(ZDP_TransID >> 8) & 0xff
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V0,#0x3
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     ?V0,?V2
        LJMP    ?Subroutine0 & 0xFFFF
//  300 }
          CFI EndBlock cfiBlock19
//  301 
//  302 /*********************************************************************
//  303  * Address Requests
//  304  */
//  305 
//  306 /*********************************************************************
//  307  * @fn          ZDP_NwkAddrReq
//  308  *
//  309  * @brief       This builds and send a NWK_addr_req message.  This
//  310  *              function sends a broadcast message looking for a 16
//  311  *              bit address with a 64 bit address as bait.
//  312  *
//  313  * @param       IEEEAddress - looking for this device
//  314  * @param       SecurityEnable - Security Options
//  315  *
//  316  * @return      afStatus_t
//  317  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  318 afStatus_t ZDP_NwkAddrReq( uint8 *IEEEAddress, byte ReqType,
ZDP_NwkAddrReq:
          CFI Block cfiBlock20 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
        CODE
//  319                            byte StartIndex, byte SecurityEnable )
//  320 {
        FUNCALL ZDP_NwkAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 44, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 44, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 21
        MOV     A,#-0x15
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R1
        MOV     ?V1,R4
//  321   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V3,A
//  322   byte len = Z_EXTADDR_LEN + 1 + 1;  // IEEEAddress + ReqType + StartIndex.
//  323   zAddrType_t dstAddr;
//  324 
//  325   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  326 
//  327   if ( osal_ExtAddrEqual( saveExtAddr, IEEEAddress ) == FALSE )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,#saveExtAddr & 0xff
        MOV     R3,#(saveExtAddr >> 8) & 0xff
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JNZ     ??ZDP_NwkAddrReq_0
//  328   {
//  329     dstAddr.addrMode = AddrBroadcast;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0xf
        LCALL   ??Subroutine121_0 & 0xFFFF
//  330     dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  331   }
??CrossCallReturnLabel_203:
        MOV     A,#-0x3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        SJMP    ??ZDP_NwkAddrReq_1
//  332   else
//  333   {
//  334     dstAddr.addrMode = Addr16Bit;
??ZDP_NwkAddrReq_0:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  335     dstAddr.addr.shortAddr = ZDAppNwkAddr.addr.shortAddr;
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?Subroutine63 & 0xFFFF
//  336   }
??CrossCallReturnLabel_100:
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDP_NwkAddrReq_1:
        MOVX    @DPTR,A
//  337 
//  338   pBuf = osal_cpyExtAddr( pBuf, IEEEAddress );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V2
        MOV     R3,?V3
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,R2
        MOV     DPH,R3
//  339 
//  340   *pBuf++ = ReqType;
        MOV     A,?V0
        MOVX    @DPTR,A
//  341   *pBuf++ = StartIndex;
        INC     DPTR
        MOV     A,?V1
        LCALL   ?Subroutine100 & 0xFFFF
//  342 
//  343   return fillAndSend( &ZDP_TransID, &dstAddr, NWK_addr_req, len );
??CrossCallReturnLabel_224:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ??Subroutine121_0 & 0xFFFF
??CrossCallReturnLabel_204:
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_313:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_184:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     ?V4,#ZDP_TransID & 0xff
        MOV     ?V5,#(ZDP_TransID >> 8) & 0xff
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     ?V2,#0xb
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        CLR     A
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 44)
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_200:
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     A,#0x15
        SJMP    ??Subroutine119_0
//  344 }
          CFI EndBlock cfiBlock20

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond21 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_184
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond22) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond22) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+-2
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker23 Using cfiCommon1
          CFI (cfiPicker23) NoFunction
          CFI (cfiPicker23) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiPicker23
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine117_0:
          CFI Block cfiCond24 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function ZDP_NwkAddrReq
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond25) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond25) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond25) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond25) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond25) CFA_SP SP+-2
          CFI (cfiCond25) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond26 Using cfiCommon0
          CFI (cfiCond26) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond26) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond26) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond26) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond26) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond26) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond26) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond26) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond26) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond26) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond26) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond26) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond26) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond26) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond26) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond26) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond26) CFA_SP SP+-2
          CFI (cfiCond26) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker27 Using cfiCommon1
          CFI (cfiPicker27) NoFunction
          CFI (cfiPicker27) Picker
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_190:
        MOV     DPTR,#ZDP_TransID
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_188:
        ; Setup parameters for call to function AF_DataRequest
        ; Setup parameters for call to function AF_DataRequest
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V4,#0x1e
        MOV     R0,#?V4
        RET
          CFI (cfiCond24) CFA_SP SP+0
          CFI (cfiCond25) CFA_SP SP+0
          CFI (cfiCond26) CFA_SP SP+0
          CFI (cfiPicker27) CFA_SP SP+0
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiCond26
          CFI EndBlock cfiPicker27

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock28 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 33)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
          CFI EndBlock cfiBlock28
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine118_0:
          CFI Block cfiBlock29 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_199:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,#0xc
          CFI EndBlock cfiBlock29
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine119_0:
          CFI Block cfiBlock30 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 35)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Valid
          CFI EndBlock cfiBlock30
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine120_0:
          CFI Block cfiBlock31 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock31
//  345 
//  346 /*********************************************************************
//  347  * @fn          ZDP_IEEEAddrReq
//  348  *
//  349  * @brief       This builds and send a IEEE_addr_req message.  This
//  350  *              function sends a unicast message looking for a 64
//  351  *              bit IEEE address with a 16 bit address as bait.
//  352  *
//  353  * @param       ReqType - ZDP_IEEEADDR_REQTYPE_SINGLE or
//  354  *                        ZDP_IEEEADDR_REQTYPE_EXTENDED
//  355  * @param       SecurityEnable - Security Options
//  356  *
//  357  * @return      afStatus_t
//  358  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  359 afStatus_t ZDP_IEEEAddrReq( uint16 shortAddr, byte ReqType,
ZDP_IEEEAddrReq:
          CFI Block cfiBlock32 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
        CODE
//  360                             byte StartIndex, byte SecurityEnable )
//  361 {
        FUNCALL ZDP_IEEEAddrReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_IEEEAddrReq, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R1
//  362   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ??Subroutine149_0 & 0xFFFF
//  363   byte len = 2 + 1 + 1;  // shortAddr + ReqType + StartIndex.
//  364   zAddrType_t dstAddr;
//  365 
//  366   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  367 
//  368   dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
//  369   dstAddr.addr.shortAddr = shortAddr;
//  370 
//  371   *pBuf++ = LO_UINT16( shortAddr );
??CrossCallReturnLabel_323:
        MOV     A,R6
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
//  372   *pBuf++ = HI_UINT16( shortAddr );
        MOV     A,R7
        LCALL   ?Subroutine41 & 0xFFFF
//  373 
//  374   *pBuf++ = ReqType;
??CrossCallReturnLabel_227:
        MOV     A,?V0
        LCALL   ??Subroutine126_0 & 0xFFFF
//  375   *pBuf++ = StartIndex;
??CrossCallReturnLabel_229:
        LCALL   ?Subroutine12 & 0xFFFF
//  376 
//  377   return fillAndSend( &ZDP_TransID, &dstAddr, IEEE_addr_req, len );
??CrossCallReturnLabel_216:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_205:
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_183:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V4,#ZDP_TransID & 0xff
        MOV     ?V5,#(ZDP_TransID >> 8) & 0xff
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V2,#0x5
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     ?V2,#0x1
          CFI EndBlock cfiBlock32
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
//  378 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock33 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 33)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        LJMP    ??Subroutine118_0 & 0xFFFF
          CFI EndBlock cfiBlock33

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond34 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_205
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function ZDP_EndDeviceTimeoutReq
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+-2
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker36 Using cfiCommon1
          CFI (cfiPicker36) NoFunction
          CFI (cfiPicker36) Picker
        MOV     A,#0x2
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiPicker36
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine121_0:
          CFI Block cfiCond37 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_203
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond38 Using cfiCommon0
          CFI (cfiCond38) Function ZDP_NwkAddrReq
          CFI (cfiCond38) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond38) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond38) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond38) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond38) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond38) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond38) CFA_SP SP+-2
          CFI (cfiCond38) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function ZDP_IEEEAddrReq
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-2
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function ZDP_EndDeviceTimeoutReq
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-2
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker41 Using cfiCommon1
          CFI (cfiPicker41) NoFunction
          CFI (cfiPicker41) Picker
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
          CFI (cfiCond37) CFA_SP SP+0
          CFI (cfiCond38) CFA_SP SP+0
          CFI (cfiCond39) CFA_SP SP+0
          CFI (cfiCond40) CFA_SP SP+0
          CFI (cfiPicker41) CFA_SP SP+0
          CFI EndBlock cfiCond37
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiPicker41
//  379 
//  380 /*********************************************************************
//  381  * @fn          ZDP_MatchDescReq
//  382  *
//  383  * @brief       This builds and send a Match_Desc_req message.  This
//  384  *              function sends a broadcast or unicast message
//  385  *              requesting the list of endpoint/interfaces that
//  386  *              match profile ID and cluster IDs.
//  387  *
//  388  * @param       dstAddr - destination address
//  389  * @param       nwkAddr - network address of interest
//  390  * @param       ProfileID - Profile ID
//  391  * @param       NumInClusters - number of input clusters
//  392  * @param       InClusterList - input cluster ID list
//  393  * @param       NumOutClusters - number of output clusters
//  394  * @param       OutClusterList - output cluster ID list
//  395  * @param       SecurityEnable - Security Options
//  396  *
//  397  * @return      afStatus_t
//  398  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  399 afStatus_t ZDP_MatchDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_MatchDescReq:
          CFI Block cfiBlock42 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
        CODE
//  400                                 uint16 ProfileID,
//  401                                 byte NumInClusters, cId_t *InClusterList,
//  402                                 byte NumOutClusters, cId_t *OutClusterList,
//  403                                 byte SecurityEnable )
//  404 {
        FUNCALL ZDP_MatchDescReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MatchDescReq, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0,R2
        MOV     ?V1,R3
        LCALL   ?Subroutine64 & 0xFFFF
//  405   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_310:
        MOV     A,#0x1f
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V6,A
//  406   // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  407   byte i, len = 2 + 2 + 1 + 1;  // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  408 
//  409   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  410 
//  411   len += (NumInClusters + NumOutClusters) * sizeof(uint16);
        MOV     A,R6
        ADD     A,?V6
        CLR     C
        RLC     A
        ADD     A,#0x6
        MOV     ?V3,A
//  412 
//  413   if ( len >= ZDP_BUF_SZ-1 )
        CLR     C
        SUBB    A,#0x4f
        JC      ??ZDP_MatchDescReq_0
//  414   {
//  415     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_MatchDescReq_1 & 0xFFFF
//  416   }
//  417 
//  418   // The spec changed in Zigbee 2007 (2.4.3.1.7.1) to not allow sending
//  419   // this command to 0xFFFF.  So, here we will filter this and replace
//  420   // with 0xFFFD to only send to devices with RX ON.  This includes the
//  421   // network address of interest.
//  422   if ( ((dstAddr->addrMode == AddrBroadcast) || (dstAddr->addrMode == Addr16Bit))
//  423       && (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVALL) )
??ZDP_MatchDescReq_0:
        MOV     A,R2
        ADD     A,#0x8
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_125:
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,#0xf
        XRL     A,R2
        JZ      ??ZDP_MatchDescReq_2
        MOV     A,#0x2
        XRL     A,R2
        JNZ     ??ZDP_MatchDescReq_3
??ZDP_MatchDescReq_2:
        MOV     DPL,?V0
        MOV     DPH,R3
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDP_MatchDescReq_4
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
??ZDP_MatchDescReq_4:
        JNZ     ??ZDP_MatchDescReq_3
//  424   {
//  425     dstAddr->addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV     DPL,?V0
        MOV     DPH,R3
        MOV     A,#-0x3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
//  426   }
//  427   if ( nwkAddr == NWK_BROADCAST_SHORTADDR_DEVALL )
??ZDP_MatchDescReq_3:
        MOV     A,#-0x1
        XRL     A,R4
        JNZ     ??ZDP_MatchDescReq_5
        MOV     A,#-0x1
        XRL     A,R5
??ZDP_MatchDescReq_5:
        JNZ     ??ZDP_MatchDescReq_6
//  428   {
//  429     nwkAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV     R4,#-0x3
        MOV     R5,#-0x1
//  430   }
//  431 
//  432   *pBuf++ = LO_UINT16( nwkAddr );   // NWKAddrOfInterest
??ZDP_MatchDescReq_6:
        MOV     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
//  433   *pBuf++ = HI_UINT16( nwkAddr );
        MOV     A,R5
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine68 & 0xFFFF
//  434 
//  435   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
??CrossCallReturnLabel_109:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
//  436   *pBuf++ = HI_UINT16( ProfileID );
        MOV     A,R3
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
//  437 
//  438   *pBuf++ = NumInClusters; // Input cluster list
        MOV     A,R6
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#0x5
        MOV     R0,A
        JNC     ??ZDP_MatchDescReq_7
        INC     R1
//  439   if ( NumInClusters )
??ZDP_MatchDescReq_7:
        MOV     A,R6
        JZ      ??ZDP_MatchDescReq_8
//  440   {
//  441     for (i=0; i<NumInClusters; ++i)  {
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_248:
        MOV     A,R6
        MOV     R7,A
//  442       *pBuf++ = LO_UINT16( InClusterList[i] );
??ZDP_MatchDescReq_9:
        LCALL   ?Subroutine23 & 0xFFFF
//  443       *pBuf++ = HI_UINT16( InClusterList[i] );
//  444     }
??CrossCallReturnLabel_31:
        JNC     ??ZDP_MatchDescReq_10
        INC     R1
??ZDP_MatchDescReq_10:
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        JNC     ??ZDP_MatchDescReq_11
        INC     R3
??ZDP_MatchDescReq_11:
        DEC     R7
        MOV     A,R7
        JNZ     ??ZDP_MatchDescReq_9
//  445   }
//  446 
//  447   *pBuf++ = NumOutClusters; // Output cluster list
??ZDP_MatchDescReq_8:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,?V6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
//  448   if ( NumOutClusters )
        JZ      ??ZDP_MatchDescReq_12
//  449   {
//  450     for (i=0; i<NumOutClusters; ++i)  {
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_249:
        MOV     ?V2,?V6
//  451       *pBuf++ = LO_UINT16( OutClusterList[i] );
??ZDP_MatchDescReq_13:
        LCALL   ?Subroutine23 & 0xFFFF
//  452       *pBuf++ = HI_UINT16( OutClusterList[i] );
//  453     }
??CrossCallReturnLabel_32:
        JNC     ??ZDP_MatchDescReq_14
        INC     R1
??ZDP_MatchDescReq_14:
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        JNC     ??ZDP_MatchDescReq_15
        INC     R3
??ZDP_MatchDescReq_15:
        DEC     ?V2
        MOV     A,?V2
        JNZ     ??ZDP_MatchDescReq_13
//  454   }
//  455 
//  456   return fillAndSend( &ZDP_TransID, dstAddr, Match_Desc_req, len );
??ZDP_MatchDescReq_12:
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xc
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_45:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_15:
        MOV     DPTR,#ZDP_TransID
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_96:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V4,#ZDP_TransID & 0xff
        MOV     ?V5,#(ZDP_TransID >> 8) & 0xff
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,?V3
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_123:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0,#0x6
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_194:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
??ZDP_MatchDescReq_1:
        LJMP    ?Subroutine1 & 0xFFFF
//  457 }
          CFI EndBlock cfiBlock42

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond43 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_122
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function ZDP_MatchDescReq
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_123
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond44) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond44) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+-2
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function ZDP_SimpleDescMsg
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond45) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-2
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker46 Using cfiCommon1
          CFI (cfiPicker46) NoFunction
          CFI (cfiPicker46) Picker
        ADD     A,#0x1
        MOV     ?V0,A
        CLR     A
        ADDC    A,#0x0
        MOV     ?V1,A
        MOV     R0,#?V0
        RET
          CFI (cfiCond43) CFA_SP SP+0
          CFI (cfiCond44) CFA_SP SP+0
          CFI (cfiCond45) CFA_SP SP+0
          CFI (cfiPicker46) CFA_SP SP+0
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiPicker46

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond47 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function ZDP_MatchDescReq
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond48) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond48) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+-2
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker49 Using cfiCommon1
          CFI (cfiPicker49) NoFunction
          CFI (cfiPicker49) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine142_0 & 0xFFFF
??CrossCallReturnLabel_281:
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_283:
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        RET
          CFI (cfiCond47) CFA_SP SP+0
          CFI (cfiCond48) CFA_SP SP+0
          CFI (cfiPicker49) CFA_SP SP+0
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiPicker49
//  458 
//  459 /*********************************************************************
//  460  * @fn          ZDP_SimpleDescReq
//  461  *
//  462  * @brief       This builds and send a NWK_Simple_Desc_req
//  463  *              message.  This function sends unicast message to the
//  464  *              destination device.
//  465  *
//  466  * @param       dstAddr - destination address
//  467  * @param       nwkAddr - 16 bit address
//  468  * @param       epIntf - endpoint/interface
//  469  * @param       SecurityEnable - Security Options
//  470  *
//  471  * @return      afStatus_t
//  472  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  473 afStatus_t ZDP_SimpleDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_SimpleDescReq:
          CFI Block cfiBlock50 Using cfiCommon0
          CFI Function ZDP_SimpleDescReq
        CODE
//  474                                     byte endPoint, byte SecurityEnable )
//  475 
//  476 {
        FUNCALL ZDP_SimpleDescReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_SimpleDescReq, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  477   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  478 
//  479   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL   ?Subroutine28 & 0xFFFF
//  480   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_41:
        LCALL   ?Subroutine25 & 0xFFFF
//  481   ZDP_TmpBuf[2] = endPoint;
??CrossCallReturnLabel_35:
        LCALL   ??Subroutine125_0 & 0xFFFF
//  482 
//  483   return fillAndSend( &ZDP_TransID, dstAddr, Simple_Desc_req, 3 );
??CrossCallReturnLabel_220:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_4:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_12:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V4,#ZDP_TransID & 0xff
        MOV     ?V5,#(ZDP_TransID >> 8) & 0xff
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V0,#0x4
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        LJMP    ?Subroutine0 & 0xFFFF
//  484 }
          CFI EndBlock cfiBlock50

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond51 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function ZDP_SimpleDescReq
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond52) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond52) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+-2
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker53 Using cfiCommon1
          CFI (cfiPicker53) NoFunction
          CFI (cfiPicker53) Picker
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_174:
        MOV     A,R4
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_135:
        MOV     A,R5
        RET
          CFI (cfiCond51) CFA_SP SP+0
          CFI (cfiCond52) CFA_SP SP+0
          CFI (cfiPicker53) CFA_SP SP+0
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiPicker53

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond54 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function ZDP_SimpleDescReq
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-2
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker56 Using cfiCommon1
          CFI (cfiPicker56) NoFunction
          CFI (cfiPicker56) Picker
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_182:
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_129:
        MOV     DPTR,#ZDP_TransID
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_152:
        ; Setup parameters for call to function AF_DataRequest
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V3,#0x1e
        MOV     R0,#?V3
        RET
          CFI (cfiCond54) CFA_SP SP+0
          CFI (cfiCond55) CFA_SP SP+0
          CFI (cfiPicker56) CFA_SP SP+0
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiPicker56
//  485 
//  486 /*********************************************************************
//  487  * @fn          ZDP_UserDescSet
//  488  *
//  489  * @brief       This builds and send a User_Desc_set message to set
//  490  *              the user descriptor.  This function sends unicast
//  491  *              message to the destination device.
//  492  *
//  493  * @param       dstAddr - destination address
//  494  * @param       nwkAddr - 16 bit address
//  495  * @param       UserDescriptor - user descriptor
//  496  * @param       SecurityEnable - Security Options
//  497  *
//  498  * @return      afStatus_t
//  499  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  500 afStatus_t ZDP_UserDescSet( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_UserDescSet:
          CFI Block cfiBlock57 Using cfiCommon0
          CFI Function ZDP_UserDescSet
        CODE
//  501                           UserDescriptorFormat_t *UserDescriptor,
//  502                           byte SecurityEnable )
//  503 {
        FUNCALL ZDP_UserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  504   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ??Subroutine149_0 & 0xFFFF
??CrossCallReturnLabel_324:
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine54 & 0xFFFF
//  505   byte len = (UserDescriptor->len < AF_MAX_USER_DESCRIPTOR_LEN) ?
//  506               UserDescriptor->len : AF_MAX_USER_DESCRIPTOR_LEN;
??CrossCallReturnLabel_85:
        MOV     R2,A
        CLR     C
        SUBB    A,#0x10
        JNC     ??ZDP_UserDescSet_0
        MOV     ?V2,R2
        SJMP    ??ZDP_UserDescSet_1
??ZDP_UserDescSet_0:
        MOV     ?V2,#0x10
//  507   byte addrLen = 2;
//  508 
//  509   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  510 
//  511   *pBuf++ = LO_UINT16( nwkAddr );
??ZDP_UserDescSet_1:
        MOV     A,R4
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    @DPTR,A
//  512   *pBuf++ = HI_UINT16( nwkAddr );
        MOV     A,R5
        LCALL   ?Subroutine45 & 0xFFFF
//  513 
//  514   *pBuf++ = len;
??CrossCallReturnLabel_73:
        MOV     A,?V2
        LCALL   ?Subroutine21 & 0xFFFF
//  515   addrLen = 3;
//  516 
//  517   pBuf = osal_memcpy( pBuf, UserDescriptor->desc, len );
??CrossCallReturnLabel_27:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R4,?V2
        MOV     R5,#0x0
        MOV     A,?V0
        ADD     A,#0x3
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
//  518   osal_memset( pBuf, AF_USER_DESCRIPTOR_FILL, AF_MAX_USER_DESCRIPTOR_LEN-len );
        ; Setup parameters for call to function osal_memset
        MOV     R0,?V2
        MOV     A,#0x10
        CLR     C
        SUBB    A,R0
        MOV     R4,A
        SUBB    A,0xE0 /* A   */
        MOV     R5,A
        MOV     R1,#0x20
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
//  519 
//  520   return fillAndSend( &ZDP_TransID, dstAddr, User_Desc_set, (AF_MAX_USER_DESCRIPTOR_LEN + addrLen) );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x14
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R1,#0x13
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        SJMP    ??Subroutine122_0
//  521 }
          CFI EndBlock cfiBlock57

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock58 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0xc
          CFI EndBlock cfiBlock58
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine122_0:
          CFI Block cfiBlock59 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Valid
          CFI EndBlock cfiBlock59
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine123_0:
          CFI Block cfiBlock60 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock60
//  522 
//  523 /*********************************************************************
//  524  * @fn          ZDP_ServerDiscReq
//  525  *
//  526  * @brief       Build and send a Server_Discovery_req request message.
//  527  *
//  528  * @param       serverMask - 16-bit bit-mask of server services being sought.
//  529  * @param       SecurityEnable - Security Options
//  530  *
//  531  * @return      afStatus_t
//  532  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  533 afStatus_t ZDP_ServerDiscReq( uint16 serverMask, byte SecurityEnable )
ZDP_ServerDiscReq:
          CFI Block cfiBlock61 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
        CODE
//  534 {
        FUNCALL ZDP_ServerDiscReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ServerDiscReq, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        LCALL   ?Subroutine64 & 0xFFFF
//  535   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_311:
        MOV     DPL,R0
        MOV     DPH,R1
//  536   zAddrType_t dstAddr;
//  537 
//  538   dstAddr.addrMode = AddrBroadcast;
//  539   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  540 
//  541   *pBuf++ = LO_UINT16( serverMask );
        MOV     A,R2
        MOVX    @DPTR,A
//  542   *pBuf = HI_UINT16( serverMask );
        MOV     A,R3
        INC     DPTR
        MOVX    @DPTR,A
//  543 
//  544   FillAndSendTxOptions( &ZDP_TransID, &dstAddr, Server_Discovery_req, 2,
//  545              ((SecurityEnable) ? AF_EN_SECURITY : AF_TX_OPTIONS_NONE) );
        MOV     A,R6
        MOV     DPTR,#ZDP_TxOptions
        JZ      ??ZDP_ServerDiscReq_0
        MOV     A,#0x40
        SJMP    ??ZDP_ServerDiscReq_1
??ZDP_ServerDiscReq_0:
        CLR     A
??ZDP_ServerDiscReq_1:
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_221:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_207:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V2,#ZDP_TransID & 0xff
        MOV     ?V3,#(ZDP_TransID >> 8) & 0xff
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0,#0x3
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V0,#0x15
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_195:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R1
        MOV     R1,A
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        LJMP    ??Subroutine137_0 & 0xFFFF
//  546 }
          CFI EndBlock cfiBlock61

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond62 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_193
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+-2
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function ZDP_SimpleDescReq
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-2
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function fillAndSend
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond65) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+-2
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond66 Using cfiCommon0
          CFI (cfiCond66) Function ZDP_IEEEAddrReq
          CFI (cfiCond66) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond66) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond66) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond66) CFA_SP SP+-2
          CFI (cfiCond66) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond67) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond67) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond67) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond67) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond67) CFA_SP SP+-2
          CFI (cfiCond67) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function ZDP_MatchDescReq
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond69 Using cfiCommon0
          CFI (cfiCond69) Function ZDP_ServerDiscReq
          CFI (cfiCond69) Conditional ??CrossCallReturnLabel_195
          CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond69) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond69) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond69) CFA_SP SP+-2
          CFI (cfiCond69) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond70 Using cfiCommon0
          CFI (cfiCond70) Function ZDP_NodeDescMsg
          CFI (cfiCond70) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond70) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond70) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond70) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond70) CFA_SP SP+-2
          CFI (cfiCond70) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function ZDP_PowerDescMsg
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+-2
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function ZDP_SimpleDescMsg
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond72) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond72) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond72) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond72) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond72) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond72) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+-2
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond73 Using cfiCommon0
          CFI (cfiCond73) Function ZDP_DeviceAnnce
          CFI (cfiCond73) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond73) CFA_SP SP+-2
          CFI (cfiCond73) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function ZDP_EndDeviceTimeoutReq
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+-2
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker75 Using cfiCommon1
          CFI (cfiPicker75) NoFunction
          CFI (cfiPicker75) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_202:
        MOV     A,#0x9
        RET
          CFI (cfiCond62) CFA_SP SP+0
          CFI (cfiCond63) CFA_SP SP+0
          CFI (cfiCond64) CFA_SP SP+0
          CFI (cfiCond65) CFA_SP SP+0
          CFI (cfiCond66) CFA_SP SP+0
          CFI (cfiCond67) CFA_SP SP+0
          CFI (cfiCond68) CFA_SP SP+0
          CFI (cfiCond69) CFA_SP SP+0
          CFI (cfiCond70) CFA_SP SP+0
          CFI (cfiCond71) CFA_SP SP+0
          CFI (cfiCond72) CFA_SP SP+0
          CFI (cfiCond73) CFA_SP SP+0
          CFI (cfiCond74) CFA_SP SP+0
          CFI (cfiPicker75) CFA_SP SP+0
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiCond69
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiPicker75

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond76 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_200
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 44)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function ZDP_SendData
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_193
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+-4
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_199
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-4
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ZDP_SimpleDescReq
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_199
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-4
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function fillAndSend
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_199
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+-4
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function ZDP_IEEEAddrReq
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_199
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond81) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond81) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+-4
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_199
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-4
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ZDP_MatchDescReq
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_194
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond83) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond83) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-4
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function ZDP_ServerDiscReq
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_195
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-4
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond85 Using cfiCommon0
          CFI (cfiCond85) Function ZDP_NodeDescMsg
          CFI (cfiCond85) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_198
          CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond85) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond85) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond85) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond85) CFA_SP SP+-4
          CFI (cfiCond85) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function ZDP_PowerDescMsg
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_198
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_SP SP+-4
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function ZDP_SimpleDescMsg
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_196
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond87) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond87) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond87) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+-4
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function ZDP_DeviceAnnce
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_197
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+-4
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function ZDP_EndDeviceTimeoutReq
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_197
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+-4
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function ZDP_ServerDiscRsp
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_90
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+-4
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function ZDP_GenericRsp
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_91
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-4
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function ZDP_MgmtLqiRsp
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_92
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond92) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond92) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond92) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond92) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond92) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond92) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+-4
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiPicker93 Using cfiCommon1
          CFI (cfiPicker93) NoFunction
          CFI (cfiPicker93) Picker
        MOV     DPTR,#ZDP_TxOptions
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R4,#ZDApp_epDesc & 0xff
        MOV     R5,#(ZDApp_epDesc >> 8) & 0xff
        RET
          CFI (cfiCond76) CFA_SP SP+0
          CFI (cfiCond77) CFA_SP SP+-2
          CFI (cfiCond78) CFA_SP SP+-2
          CFI (cfiCond79) CFA_SP SP+-2
          CFI (cfiCond80) CFA_SP SP+-2
          CFI (cfiCond81) CFA_SP SP+-2
          CFI (cfiCond82) CFA_SP SP+-2
          CFI (cfiCond83) CFA_SP SP+-2
          CFI (cfiCond84) CFA_SP SP+-2
          CFI (cfiCond85) CFA_SP SP+-2
          CFI (cfiCond86) CFA_SP SP+-2
          CFI (cfiCond87) CFA_SP SP+-2
          CFI (cfiCond88) CFA_SP SP+-2
          CFI (cfiCond89) CFA_SP SP+-2
          CFI (cfiCond90) CFA_SP SP+-2
          CFI (cfiCond91) CFA_SP SP+-2
          CFI (cfiCond92) CFA_SP SP+-2
          CFI (cfiPicker93) CFA_SP SP+0
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiPicker93
//  547 
//  548 /*********************************************************************
//  549  * @fn          ZDP_DeviceAnnce
//  550  *
//  551  * @brief       This builds and send a Device_Annce message.  This
//  552  *              function sends a broadcast message.
//  553  *
//  554  * @param       nwkAddr - 16 bit address of the device
//  555  * @param       IEEEAddr - 64 bit address of the device
//  556  * @param       capabilities - device capabilities.  This field is only
//  557  *                 sent for v1.1 networks.
//  558  * @param       SecurityEnable - Security Options
//  559  *
//  560  * @return      afStatus_t
//  561  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond94 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_207
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond95 Using cfiCommon0
          CFI (cfiCond95) Function ZDP_DeviceAnnce
          CFI (cfiCond95) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond95) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond95) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond95) CFA_SP SP+-2
          CFI (cfiCond95) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker96 Using cfiCommon1
          CFI (cfiPicker96) NoFunction
          CFI (cfiPicker96) Picker
        MOV     A,#0xf
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
          CFI EndBlock cfiCond94
          CFI EndBlock cfiCond95
          CFI EndBlock cfiPicker96
        REQUIRE ??Subroutine124_0
        ; // Fall through to label ??Subroutine124_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine124_0:
          CFI Block cfiCond97 Using cfiCommon0
          CFI Function ZDP_EndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_208
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function ZDP_ServerDiscReq
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+-2
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond99 Using cfiCommon0
          CFI (cfiCond99) Function ZDP_DeviceAnnce
          CFI (cfiCond99) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond99) CFA_SP SP+-2
          CFI (cfiCond99) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker100 Using cfiCommon1
          CFI (cfiPicker100) NoFunction
          CFI (cfiPicker100) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_213:
        MOV     DPTR,#ZDP_TransID
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_210:
        RET
          CFI (cfiCond97) CFA_SP SP+0
          CFI (cfiCond98) CFA_SP SP+0
          CFI (cfiCond99) CFA_SP SP+0
          CFI (cfiPicker100) CFA_SP SP+0
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiCond99
          CFI EndBlock cfiPicker100

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond101 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_207
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function ZDP_DeviceAnnce
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_209
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+-4
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond103 Using cfiCommon0
          CFI (cfiCond103) Function ZDP_EndDeviceTimeoutReq
          CFI (cfiCond103) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_208
          CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond103) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond103) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond103) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond103) CFA_SP SP+-4
          CFI (cfiCond103) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function ZDP_MgmtLqiRsp
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond104) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond104) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond104) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond104) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond104) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond104) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond104) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond104) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond104) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond104) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond104) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond104) CFA_SP SP+-2
          CFI (cfiCond104) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker105 Using cfiCommon1
          CFI (cfiPicker105) NoFunction
          CFI (cfiPicker105) Picker
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_215:
        ; Setup parameters for call to function AF_DataRequest
        ; Setup parameters for call to function AF_DataRequest
        ; Setup parameters for call to function AF_DataRequest
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V2,#0x1e
        MOV     R0,#?V2
        RET
          CFI (cfiCond101) CFA_SP SP+-2
          CFI (cfiCond102) CFA_SP SP+-2
          CFI (cfiCond103) CFA_SP SP+-2
          CFI (cfiCond104) CFA_SP SP+0
          CFI (cfiPicker105) CFA_SP SP+0
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiPicker105

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  562 afStatus_t ZDP_DeviceAnnce( uint16 nwkAddr, uint8 *IEEEAddr,
ZDP_DeviceAnnce:
          CFI Block cfiBlock106 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
        CODE
//  563                               byte capabilities, byte SecurityEnable )
//  564 {
        FUNCALL ZDP_DeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_DeviceAnnce, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_DeviceAnnce, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R1
        MOV     R6,A
//  565   zAddrType_t dstAddr;
//  566   uint8 len;
//  567 
//  568   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  569 
//  570   dstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
//  571   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  572 
//  573   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL   ??Subroutine140_0 & 0xFFFF
??CrossCallReturnLabel_277:
        MOV     A,R2
        LCALL   ?Subroutine31 & 0xFFFF
//  574   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_47:
        MOV     A,R3
        MOVX    @DPTR,A
//  575   osal_cpyExtAddr( &ZDP_TmpBuf[2], IEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        ADD     A,#0x2
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  576   len = 2 + Z_EXTADDR_LEN;
//  577 
//  578   ZDP_TmpBuf[10] = capabilities;
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_334:
        XCH     A,R0
        ADD     A,#0xa
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOV     A,R6
        LCALL   ??Subroutine125_0 & 0xFFFF
//  579   len++;
//  580 
//  581   return fillAndSend( &ZDP_TransID, &dstAddr, Device_annce, len );
??CrossCallReturnLabel_222:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_209:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V2,#ZDP_TransID & 0xff
        MOV     ?V3,#(ZDP_TransID >> 8) & 0xff
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0,#0xc
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V0,#0x13
        LJMP    ?Subroutine2 & 0xFFFF
//  582 }
          CFI EndBlock cfiBlock106

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond107 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_216
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+-2
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker109 Using cfiCommon1
          CFI (cfiPicker109) NoFunction
          CFI (cfiPicker109) Picker
        INC     DPTR
        MOV     A,R4
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiPicker109
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine125_0:
          CFI Block cfiCond110 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_218
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+-2
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function ZDP_SimpleDescReq
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-2
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDP_ServerDiscReq
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_221
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-2
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function ZDP_DeviceAnnce
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+-2
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function ZDP_EndDeviceTimeoutReq
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+-2
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function ZDP_IEEEAddrReq
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-2
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+-2
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker118 Using cfiCommon1
          CFI (cfiPicker118) NoFunction
          CFI (cfiPicker118) Picker
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_225:
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        RET
          CFI (cfiCond110) CFA_SP SP+0
          CFI (cfiCond111) CFA_SP SP+0
          CFI (cfiCond112) CFA_SP SP+0
          CFI (cfiCond113) CFA_SP SP+0
          CFI (cfiCond114) CFA_SP SP+0
          CFI (cfiCond115) CFA_SP SP+0
          CFI (cfiCond116) CFA_SP SP+0
          CFI (cfiCond117) CFA_SP SP+0
          CFI (cfiPicker118) CFA_SP SP+0
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiPicker118

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond119 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_224
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function ZDP_IEEEAddrReq
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_216
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-4
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond121 Using cfiCommon0
          CFI (cfiCond121) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond121) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_217
          CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond121) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond121) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond121) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond121) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond121) CFA_SP SP+-4
          CFI (cfiCond121) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function ZDP_SendData
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_218
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond122) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond122) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond122) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+-4
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_219
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond123) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+-4
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function ZDP_SimpleDescReq
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_220
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+-4
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ZDP_ServerDiscReq
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_221
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+-4
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function ZDP_DeviceAnnce
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_222
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-4
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function ZDP_EndDeviceTimeoutReq
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_223
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-4
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function ZDP_ServerDiscRsp
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_71
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+-4
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function ZDP_MgmtLqiRsp
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_72
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond129) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond129) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond129) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond129) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond129) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond129) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+-4
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker130 Using cfiCommon1
          CFI (cfiPicker130) NoFunction
          CFI (cfiPicker130) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xc
        MOV     R5,#0x0
        MOV     R1,#0x0
        RET
          CFI (cfiCond119) CFA_SP SP+0
          CFI (cfiCond120) CFA_SP SP+-2
          CFI (cfiCond121) CFA_SP SP+-2
          CFI (cfiCond122) CFA_SP SP+-2
          CFI (cfiCond123) CFA_SP SP+-2
          CFI (cfiCond124) CFA_SP SP+-2
          CFI (cfiCond125) CFA_SP SP+-2
          CFI (cfiCond126) CFA_SP SP+-2
          CFI (cfiCond127) CFA_SP SP+-2
          CFI (cfiCond128) CFA_SP SP+-2
          CFI (cfiCond129) CFA_SP SP+-2
          CFI (cfiPicker130) CFA_SP SP+0
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiPicker130
//  583 
//  584 #if defined ( ZIGBEE_CHILD_AGING )
//  585 /*********************************************************************
//  586  * @fn          ZDP_EndDeviceTimeoutReq
//  587  *
//  588  * @brief       This builds and send an End_Device_Timeout_req message.
//  589  *
//  590  * @param       parentAddr - destination address
//  591  * @param       reqTimeout - Timeout value the device is requesting
//  592  * @param       SecurityEnable - Security Options
//  593  *
//  594  * @return      afStatus_t
//  595  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  596 afStatus_t ZDP_EndDeviceTimeoutReq( uint16 parentAddr, uint16 reqTimeout,
ZDP_EndDeviceTimeoutReq:
          CFI Block cfiBlock131 Using cfiCommon0
          CFI Function ZDP_EndDeviceTimeoutReq
        CODE
//  597                                     uint8 SecurityEnable )
//  598 {
        FUNCALL ZDP_EndDeviceTimeoutReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceTimeoutReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceTimeoutReq, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  599   uint8 *pBuf = ZDP_TmpBuf;
//  600   uint8 len = Z_EXTADDR_LEN + 2;  // Device_IEEEAddress + reqTimeout.
//  601   zAddrType_t dstAddr;
//  602 
//  603   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  604 
//  605   dstAddr.addrMode = Addr16Bit;
//  606   dstAddr.addr.shortAddr = parentAddr;
//  607 
//  608   pBuf = osal_cpyExtAddr( pBuf, saveExtAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#saveExtAddr & 0xff
        MOV     R5,#(saveExtAddr >> 8) & 0xff
        LCALL   ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_253:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,R2
        MOV     DPH,R3
//  609 
//  610   *pBuf++ = LO_UINT16( reqTimeout );
        MOV     A,R6
        MOVX    @DPTR,A
//  611   *pBuf++ = HI_UINT16( reqTimeout );
        MOV     A,R7
        INC     DPTR
        LCALL   ??Subroutine125_0 & 0xFFFF
//  612 
//  613   return fillAndSend( &ZDP_TransID, &dstAddr, End_Device_Timeout_req, len );
??CrossCallReturnLabel_223:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_206:
        MOV     A,?V0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V1
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_208:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V2,#ZDP_TransID & 0xff
        MOV     ?V3,#(ZDP_TransID >> 8) & 0xff
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0,#0xb
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V0,#0x1f
        LJMP    ?Subroutine2 & 0xFFFF
//  614 }
          CFI EndBlock cfiBlock131
//  615 #endif // ZIGBEE_CHILD_AGING
//  616 
//  617 /*********************************************************************
//  618  * Address Responses
//  619  */
//  620 
//  621 /*********************************************************************
//  622  * @fn      zdpProcessAddrReq
//  623  *
//  624  * @brief   Process an incoming NWK_addr_req or IEEE_addr_req message and then
//  625  *          build and send a corresponding NWK_addr_rsp or IEEE_addr_rsp msg.
//  626  *
//  627  * @param   inMsg - incoming message
//  628  *
//  629  * @return  none
//  630  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  631 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg )
zdpProcessAddrReq:
          CFI Block cfiBlock132 Using cfiCommon0
          CFI Function zdpProcessAddrReq
        CODE
//  632 {
        FUNCALL zdpProcessAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        MOV     ?V0,R2
        MOV     ?V1,R3
//  633   associated_devices_t *pAssoc;
//  634   uint8 reqType;
//  635   uint16 aoi = INVALID_NODE_ADDR;
        MOV     R6,#-0x2
        MOV     R7,#-0x1
//  636   uint8 *ieee = NULL;
        MOV     ?V2,#0x0
        MOV     ?V3,#0x0
//  637 
//  638   reqType = inMsg->asdu[(inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 ) ];
        MOV     A,R2
        ADD     A,#0xc
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_126:
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_110:
        ORL     A,R3
        JNZ     ??zdpProcessAddrReq_0
        MOV     R4,#0x8
        SJMP    ??zdpProcessAddrReq_1
??zdpProcessAddrReq_0:
        MOV     R4,#0x2
??zdpProcessAddrReq_1:
        MOV     A,?V0
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        MOV     DPH,A
        LCALL   ??Subroutine148_0 & 0xFFFF
??CrossCallReturnLabel_307:
        ADD     A,R4
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V6,A
//  639 
//  640   if ( inMsg->clusterID == NWK_addr_req )
        MOV     A,R2
        ORL     A,R3
        JNZ     ??zdpProcessAddrReq_2
//  641 
//  642   {
//  643     ieee = inMsg->asdu;
        MOV     ?V2,R0
        MOV     ?V3,R1
//  644 
//  645     if ( osal_ExtAddrEqual( saveExtAddr, ieee ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     R2,#saveExtAddr & 0xff
        MOV     R3,#(saveExtAddr >> 8) & 0xff
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??zdpProcessAddrReq_3
//  646     {
//  647       aoi = ZDAppNwkAddr.addr.shortAddr;
        LCALL   ?Subroutine61 & 0xFFFF
//  648     }
//  649     // Handle response for sleeping end devices
//  650     else if ( (ZSTACK_ROUTER_BUILD)
//  651       && (((pAssoc = AssocGetWithExt( ieee )) != NULL)
//  652              && (pAssoc->nodeRelation == CHILD_RFD)) )
//  653     {
//  654       aoi = pAssoc->shortAddr;
//  655       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
//  656         reqType = 0xFF; // Force Invalid
//  657     }
//  658   }
??CrossCallReturnLabel_288:
        SJMP    ??zdpProcessAddrReq_4
//  659   else  // if ( inMsg->clusterID == IEEE_addr_req )
//  660   {
//  661     aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
??zdpProcessAddrReq_2:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R2
        ADD     A,R0
        MOV     R6,A
        CLR     A
        ADDC    A,R1
        MOV     R7,A
//  662 
//  663     if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??zdpProcessAddrReq_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??zdpProcessAddrReq_5:
        JNZ     ??zdpProcessAddrReq_3
//  664     {
//  665       ieee = saveExtAddr;
        MOV     ?V2,#saveExtAddr & 0xff
        MOV     ?V3,#(saveExtAddr >> 8) & 0xff
//  666     }
//  667     else if ( (ZSTACK_ROUTER_BUILD)
//  668       && (((pAssoc = AssocGetWithShort( aoi )) != NULL)
//  669              && (pAssoc->nodeRelation == CHILD_RFD)) )
//  670     {
//  671       AddrMgrEntry_t addrEntry;
//  672       addrEntry.user = ADDRMGR_USER_DEFAULT;
//  673       addrEntry.index = pAssoc->addrIdx;
//  674       if ( AddrMgrEntryGet( &addrEntry ) )
//  675       {
//  676         ieee = addrEntry.extAddr;
//  677       }
//  678 
//  679       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
//  680         reqType = 0xFF; // Force Invalid
//  681     }
//  682   }
//  683 
//  684   if ( ((aoi != INVALID_NODE_ADDR) && (ieee != NULL)) || (inMsg->wasBroadcast == FALSE) )
??zdpProcessAddrReq_4:
        MOV     A,#-0x2
        XRL     A,R6
        JNZ     ??zdpProcessAddrReq_6
        MOV     A,#-0x1
        XRL     A,R7
??zdpProcessAddrReq_6:
        JZ      ??zdpProcessAddrReq_3
        MOV     A,?V2
        ORL     A,?V3
        JNZ     ??zdpProcessAddrReq_7
??zdpProcessAddrReq_3:
        MOV     A,?V0
        ADD     A,#0xb
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        MOV     DPH,A
        MOVX    A,@DPTR
        JZ      $+5
        LJMP    ??zdpProcessAddrReq_8 & 0xFFFF
//  685   {
//  686     uint8 stat;
//  687     uint8 *pBuf = ZDP_TmpBuf;
??zdpProcessAddrReq_7:
        LCALL   ??Subroutine129_0 & 0xFFFF
//  688     // Status + IEEE-Addr + Nwk-Addr.
//  689     uint8 len = 1 + Z_EXTADDR_LEN + 2;
//  690 
//  691     // If aoi and iee are both setup, we found results
//  692     if ( (aoi != INVALID_NODE_ADDR) && (ieee != NULL) )
??CrossCallReturnLabel_254:
        MOV     A,#-0x2
        XRL     A,R6
        JNZ     ??zdpProcessAddrReq_9
        MOV     A,#-0x1
        XRL     A,R7
??zdpProcessAddrReq_9:
        JZ      ??zdpProcessAddrReq_10
        MOV     A,?V2
        ORL     A,?V3
        JZ      ??zdpProcessAddrReq_10
//  693     {
//  694       stat = ((reqType == ZDP_ADDR_REQTYPE_SINGLE) || (reqType == ZDP_ADDR_REQTYPE_EXTENDED))
//  695                     ? ZDP_SUCCESS : ZDP_INVALID_REQTYPE;
        MOV     A,?V6
        JZ      ??zdpProcessAddrReq_11
        MOV     A,#0x1
        XRL     A,?V6
        JNZ     ??zdpProcessAddrReq_12
??zdpProcessAddrReq_11:
        MOV     R0,#0x0
        SJMP    ??zdpProcessAddrReq_13
??zdpProcessAddrReq_12:
        MOV     R0,#-0x80
        SJMP    ??zdpProcessAddrReq_13
//  696     }
//  697     else
//  698     {
//  699       // not found and the req was unicast to this device
//  700       stat = ZDP_DEVICE_NOT_FOUND;
??zdpProcessAddrReq_10:
        MOV     R0,#-0x7f
//  701 
//  702       // Fill in the missing field with this device's address
//  703       if ( inMsg->clusterID == NWK_addr_req )
        MOV     DPL,?V4
        MOV     DPH,?V5
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R4
        ORL     A,R5
        JNZ     ??zdpProcessAddrReq_14
//  704       {
//  705         aoi = ZDAppNwkAddr.addr.shortAddr;
        LCALL   ?Subroutine61 & 0xFFFF
//  706       }
??CrossCallReturnLabel_289:
        SJMP    ??zdpProcessAddrReq_13
//  707       else
//  708       {
//  709         ieee = saveExtAddr;
??zdpProcessAddrReq_14:
        MOV     ?V2,#saveExtAddr & 0xff
        MOV     ?V3,#(saveExtAddr >> 8) & 0xff
//  710       }
//  711     }
//  712 
//  713     *pBuf++ = stat;
??zdpProcessAddrReq_13:
        MOV     A,R0
        LCALL   ??Subroutine132_0 & 0xFFFF
//  714 
//  715     pBuf = osal_cpyExtAddr( pBuf, ieee );
??CrossCallReturnLabel_263:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V2
        MOV     R5,?V3
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,R2
        MOV     DPH,R3
//  716 
//  717     *pBuf++ = LO_UINT16( aoi );
        MOV     A,R6
        MOVX    @DPTR,A
//  718     *pBuf++ = HI_UINT16( aoi );
        MOV     A,R7
        INC     DPTR
        MOVX    @DPTR,A
//  719 
//  720     if ( ZSTACK_ROUTER_BUILD )
//  721     {
//  722       if ( (reqType == ZDP_ADDR_REQTYPE_EXTENDED) && (aoi == ZDAppNwkAddr.addr.shortAddr)
//  723            && (stat == ZDP_SUCCESS) )
//  724       {
//  725         uint8  cnt = 0;
//  726         uint16 *list = AssocMakeList( &cnt );
//  727 
//  728         if ( list != NULL )
//  729         {
//  730           byte idx = inMsg->asdu[(((inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 )) + 1)];
//  731           uint16 *pList = list + idx;
//  732 
//  733           // NumAssocDev field is only present on success.
//  734           if ( cnt > idx )
//  735           {
//  736             cnt -= idx;
//  737             len += (cnt * sizeof( uint16 ));
//  738           }
//  739           else
//  740           {
//  741             cnt = 0;
//  742           }
//  743           *pBuf++ = cnt;
//  744           len++;
//  745 
//  746           // StartIndex field is only present if NumAssocDev field is non-zero.
//  747           *pBuf++ = idx;
//  748           len++;
//  749 
//  750           while ( cnt != 0 )
//  751           {
//  752             *pBuf++ = LO_UINT16( *pList );
//  753             *pBuf++ = HI_UINT16( *pList );
//  754             pList++;
//  755             cnt--;
//  756           }
//  757 
//  758           osal_mem_free( (uint8 *)list );
//  759         }
//  760         else
//  761         {
//  762           // NumAssocDev field is only present on success.
//  763           *pBuf++ = 0;
//  764           len++;
//  765         }
//  766       }
//  767     }
//  768 
//  769     ZDP_TxOptions = AF_MSG_ACK_REQUEST;
        MOV     DPTR,#ZDP_TxOptions
        MOV     A,#0x10
        LCALL   ?Subroutine30 & 0xFFFF
//  770     fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), (cId_t)(inMsg->clusterID | ZDO_RESPONSE_BIT), len );
??CrossCallReturnLabel_44:
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,#0x80
        MOV     ?V3,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R1,#0xb
        MOV     A,?V0
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V1
        MOV     R5,A
        MOV     A,?V0
        ADD     A,#0xf
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
//  771     ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
//  772   }
//  773 }
??zdpProcessAddrReq_8:
        LJMP    ??Subroutine123_0 & 0xFFFF
          CFI EndBlock cfiBlock132

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond133 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function zdpProcessAddrReq
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+-2
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker135 Using cfiCommon1
          CFI (cfiPicker135) NoFunction
          CFI (cfiPicker135) Picker
        MOV     ?V4,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V5,A
        MOV     DPL,?V4
        MOV     DPH,A
        RET
          CFI (cfiCond133) CFA_SP SP+0
          CFI (cfiCond134) CFA_SP SP+0
          CFI (cfiPicker135) CFA_SP SP+0
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiPicker135

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond136 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_109
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function zdpProcessAddrReq
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_110
          CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond137) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond137) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond137) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond137) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond137) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond137) CFA_SP SP+-2
          CFI (cfiCond137) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond138) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+-2
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker139 Using cfiCommon1
          CFI (cfiPicker139) NoFunction
          CFI (cfiPicker139) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R2
        RET
          CFI (cfiCond136) CFA_SP SP+0
          CFI (cfiCond137) CFA_SP SP+0
          CFI (cfiCond138) CFA_SP SP+0
          CFI (cfiPicker139) CFA_SP SP+0
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiPicker139

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond140 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_45
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function zdpProcessAddrReq
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+-2
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function ZDP_MgmtLqiRsp
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-2
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker143 Using cfiCommon1
          CFI (cfiPicker143) NoFunction
          CFI (cfiPicker143) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     DPL,?V4
        MOV     DPH,?V5
        MOVX    A,@DPTR
        RET
          CFI (cfiCond140) CFA_SP SP+0
          CFI (cfiCond141) CFA_SP SP+0
          CFI (cfiCond142) CFA_SP SP+0
          CFI (cfiPicker143) CFA_SP SP+0
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiPicker143
//  774 
//  775 /*********************************************************************
//  776  * @fn          ZDP_NodeDescMsg
//  777  *
//  778  * @brief       Builds and sends a Node Descriptor message, unicast to the
//  779  *              specified device.
//  780  *
//  781  * @param       inMsg - incoming message
//  782  * @param       nwkAddr - 16 bit network address for device
//  783  * @param       pNodeDesc - pointer to the node descriptor
//  784  *
//  785  * @return      afStatus_t
//  786  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  787 afStatus_t ZDP_NodeDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_NodeDescMsg:
          CFI Block cfiBlock144 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
        CODE
//  788                            uint16 nwkAddr, NodeDescriptorFormat_t *pNodeDesc )
//  789 {
        FUNCALL ZDP_NodeDescMsg, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NodeDescMsg, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
//  790   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine29 & 0xFFFF
//  791   byte len;
//  792 
//  793   len = 1 + 2 + 13;  // Status + nwkAddr + Node descriptor
//  794 
//  795   *pBuf++ = ZDP_SUCCESS;
//  796 
//  797   *pBuf++ = LO_UINT16( nwkAddr );
//  798   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_42:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine54 & 0xFFFF
//  799 
//  800   *pBuf++ = (byte)((pNodeDesc->ComplexDescAvail << 3) |
//  801                      (pNodeDesc->UserDescAvail << 4) |
//  802                      (pNodeDesc->LogicalType & 0x07));
??CrossCallReturnLabel_86:
        ANL     A,#0x1f
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine115 & 0xFFFF
//  803 
//  804   *pBuf++ = (byte)((pNodeDesc->FrequencyBand << 3) | (pNodeDesc->APSFlags & 0x07));
??CrossCallReturnLabel_241:
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_117:
        LCALL   ?Subroutine41 & 0xFFFF
//  805   *pBuf++ = pNodeDesc->CapabilityFlags;
??CrossCallReturnLabel_228:
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_170:
        LCALL   ?Subroutine40 & 0xFFFF
//  806   *pBuf++ = pNodeDesc->ManufacturerCode[0];
??CrossCallReturnLabel_230:
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_119:
        LCALL   ?Subroutine40 & 0xFFFF
//  807   *pBuf++ = pNodeDesc->ManufacturerCode[1];
??CrossCallReturnLabel_231:
        INC     DPTR
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_171:
        LCALL   ?Subroutine39 & 0xFFFF
//  808   *pBuf++ = pNodeDesc->MaxBufferSize;
??CrossCallReturnLabel_62:
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_120:
        LCALL   ?Subroutine39 & 0xFFFF
//  809   *pBuf++ = pNodeDesc->MaxInTransferSize[0];
??CrossCallReturnLabel_63:
        INC     DPTR
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_88:
        LCALL   ?Subroutine33 & 0xFFFF
//  810   *pBuf++ = pNodeDesc->MaxInTransferSize[1];
??CrossCallReturnLabel_51:
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_89:
        INC     DPTR
        MOVX    @DPTR,A
//  811 
//  812   *pBuf++ = LO_UINT16( pNodeDesc->ServerMask );
        MOV     A,R0
        ADD     A,#0x8
        MOV     R4,A
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     A,R6
        ADD     A,#0xb
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,?V0
        LCALL   ??Subroutine131_0 & 0xFFFF
//  813   *pBuf++ = HI_UINT16( pNodeDesc->ServerMask );
??CrossCallReturnLabel_261:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine33 & 0xFFFF
//  814   *pBuf++ = pNodeDesc->MaxOutTransferSize[0];
??CrossCallReturnLabel_52:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0xd
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  815   *pBuf++ = pNodeDesc->MaxOutTransferSize[1];
        MOV     A,R0
        ADD     A,#0xb
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0xe
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  816   *pBuf = pNodeDesc->DescriptorCapability;
        MOV     A,R0
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0xf
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine17 & 0xFFFF
//  817 
//  818   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Node_Desc_rsp, len );
??CrossCallReturnLabel_17:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_5:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_9:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0,#0x11
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V0,#0x2
          CFI EndBlock cfiBlock144
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
//  819 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock145 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 32)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_198:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,#0xc
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     R7,#0x5
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock145

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond146 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_88
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function ZDP_NodeDescMsg
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-2
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker148 Using cfiCommon1
          CFI (cfiPicker148) NoFunction
          CFI (cfiPicker148) Picker
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_154:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond146) CFA_SP SP+0
          CFI (cfiCond147) CFA_SP SP+0
          CFI (cfiPicker148) CFA_SP SP+0
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiPicker148

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond149 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function ZDP_NodeDescMsg
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-2
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function ZDP_PowerDescMsg
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-2
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker152 Using cfiCommon1
          CFI (cfiPicker152) NoFunction
          CFI (cfiPicker152) Picker
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_327:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI (cfiCond149) CFA_SP SP+0
          CFI (cfiCond150) CFA_SP SP+0
          CFI (cfiCond151) CFA_SP SP+0
          CFI (cfiPicker152) CFA_SP SP+0
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiPicker152

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond153 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function ZDP_NodeDescMsg
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond154) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond154) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond154) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond154) CFA_SP SP+-2
          CFI (cfiCond154) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker155 Using cfiCommon1
          CFI (cfiPicker155) NoFunction
          CFI (cfiPicker155) Picker
        INC     DPTR
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiPicker155
        REQUIRE ??Subroutine126_0
        ; // Fall through to label ??Subroutine126_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine126_0:
          CFI Block cfiCond156 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_229
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function ZDP_IEEEAddrReq
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond157) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond157) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond157) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond157) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond157) CFA_SP SP+-2
          CFI (cfiCond157) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function ZDP_NodeDescMsg
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+-2
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker159 Using cfiCommon1
          CFI (cfiPicker159) NoFunction
          CFI (cfiPicker159) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_233:
        INC     DPTR
        RET
          CFI (cfiCond156) CFA_SP SP+0
          CFI (cfiCond157) CFA_SP SP+0
          CFI (cfiCond158) CFA_SP SP+0
          CFI (cfiPicker159) CFA_SP SP+0
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiPicker159

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond160 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_230
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function ZDP_NodeDescMsg
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+-2
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker162 Using cfiCommon1
          CFI (cfiPicker162) NoFunction
          CFI (cfiPicker162) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiPicker162
        REQUIRE ??Subroutine127_0
        ; // Fall through to label ??Subroutine127_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine127_0:
          CFI Block cfiCond163 Using cfiCommon0
          CFI Function ZDO_RegisterForZDOMsg
          CFI Conditional ??CrossCallReturnLabel_232
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function ZDP_NodeDescMsg
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+-2
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ZDP_NodeDescMsg
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+-2
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker166 Using cfiCommon1
          CFI (cfiPicker166) NoFunction
          CFI (cfiPicker166) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_234:
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond163) CFA_SP SP+0
          CFI (cfiCond164) CFA_SP SP+0
          CFI (cfiCond165) CFA_SP SP+0
          CFI (cfiPicker166) CFA_SP SP+0
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiPicker166

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond167 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function ZDP_NodeDescMsg
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+-2
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker169 Using cfiCommon1
          CFI (cfiPicker169) NoFunction
          CFI (cfiPicker169) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_158:
        RET
          CFI (cfiCond167) CFA_SP SP+0
          CFI (cfiCond168) CFA_SP SP+0
          CFI (cfiPicker169) CFA_SP SP+0
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiPicker169

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond170 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_158, ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function ZDP_NodeDescMsg
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_158, ??CrossCallReturnLabel_63
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-4
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function ZDP_NodeDescMsg
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_51
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-4
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDP_NodeDescMsg
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_52
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-4
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker174 Using cfiCommon1
          CFI (cfiPicker174) NoFunction
          CFI (cfiPicker174) Picker
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_242:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond170) CFA_SP SP+-2
          CFI (cfiCond171) CFA_SP SP+-2
          CFI (cfiCond172) CFA_SP SP+-2
          CFI (cfiCond173) CFA_SP SP+-2
          CFI (cfiPicker174) CFA_SP SP+0
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiPicker174

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond175 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_51
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function ZDP_NodeDescMsg
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-2
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker177 Using cfiCommon1
          CFI (cfiPicker177) NoFunction
          CFI (cfiPicker177) Picker
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_159:
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond175) CFA_SP SP+0
          CFI (cfiCond176) CFA_SP SP+0
          CFI (cfiPicker177) CFA_SP SP+0
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiPicker177

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiCond178 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function ZDP_SendData
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+-2
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-2
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ZDP_SimpleDescReq
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_4
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+-2
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function ZDP_NodeDescMsg
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+-2
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function ZDP_PowerDescMsg
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+-2
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function ZDP_ServerDiscRsp
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+-2
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function ZDP_GenericRsp
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-2
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_8
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+-2
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker187 Using cfiCommon1
          CFI (cfiPicker187) NoFunction
          CFI (cfiPicker187) Picker
        CLR     A
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_162:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI (cfiCond178) CFA_SP SP+0
          CFI (cfiCond179) CFA_SP SP+0
          CFI (cfiCond180) CFA_SP SP+0
          CFI (cfiCond181) CFA_SP SP+0
          CFI (cfiCond182) CFA_SP SP+0
          CFI (cfiCond183) CFA_SP SP+0
          CFI (cfiCond184) CFA_SP SP+0
          CFI (cfiCond185) CFA_SP SP+0
          CFI (cfiCond186) CFA_SP SP+0
          CFI (cfiPicker187) CFA_SP SP+0
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiPicker187
//  820 
//  821 /*********************************************************************
//  822  * @fn          ZDP_PowerDescMsg
//  823  *
//  824  * @brief       Builds and sends a Power Descriptor message, unicast to the
//  825  *              specified device.
//  826  *
//  827  * @param       inMsg - incoming message (request)
//  828  * @param       nwkAddr - 16 bit network address for device
//  829  * @param       pPowerDesc - pointer to the node descriptor
//  830  *
//  831  * @return      afStatus_t
//  832  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  833 afStatus_t ZDP_PowerDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_PowerDescMsg:
          CFI Block cfiBlock188 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
        CODE
//  834                      uint16 nwkAddr, NodePowerDescriptorFormat_t *pPowerDesc )
//  835 {
        FUNCALL ZDP_PowerDescMsg, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_PowerDescMsg, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
//  836   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_308:
        MOV     R6,A
        MOV     A,R1
        LCALL   ?Subroutine29 & 0xFFFF
//  837   byte len = 1 + 2 + 2;  // Status + nwkAddr + Node Power descriptor.
//  838 
//  839   *pBuf++ = ZDP_SUCCESS;
//  840 
//  841   *pBuf++ = LO_UINT16( nwkAddr );
//  842   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_43:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine54 & 0xFFFF
//  843 
//  844   *pBuf++ = (byte)((pPowerDesc->AvailablePowerSources << 4)
//  845                     | (pPowerDesc->PowerMode & 0x0F));
??CrossCallReturnLabel_87:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ?Subroutine42 & 0xFFFF
//  846   *pBuf++ = (byte)((pPowerDesc->CurrentPowerSourceLevel << 4)
//  847                     | (pPowerDesc->CurrentPowerSource & 0x0F));
??CrossCallReturnLabel_238:
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        ANL     A,#0xf
        MOV     R1,A
        MOV     A,#0xc
        MOV     R0,#?V0
        LCALL   ?US_SHR
        MOV     A,?V0
        SWAP    A
        ORL     A,R1
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine17 & 0xFFFF
//  848 
//  849   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Power_Desc_rsp, len );
??CrossCallReturnLabel_18:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_6:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_10:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0,#0x6
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V0,#0x3
        LJMP    ?Subroutine3 & 0xFFFF
//  850 }
          CFI EndBlock cfiBlock188

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond189 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
          CFI Conditional ??CrossCallReturnLabel_238
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function ZDP_UserDescRsp
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond190) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond190) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond190) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond190) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond190) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond190) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+-2
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker191 Using cfiCommon1
          CFI (cfiPicker191) NoFunction
          CFI (cfiPicker191) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiPicker191
        REQUIRE ??Subroutine128_0
        ; // Fall through to label ??Subroutine128_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine128_0:
          CFI Block cfiCond192 Using cfiCommon0
          CFI Function ZDP_IncomingData
          CFI Conditional ??CrossCallReturnLabel_240
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function ZDP_PowerDescMsg
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+-2
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function ZDP_UserDescRsp
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+-2
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker195 Using cfiCommon1
          CFI (cfiPicker195) NoFunction
          CFI (cfiPicker195) Picker
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_243:
        MOVX    A,@DPTR
        RET
          CFI (cfiCond192) CFA_SP SP+0
          CFI (cfiCond193) CFA_SP SP+0
          CFI (cfiCond194) CFA_SP SP+0
          CFI (cfiPicker195) CFA_SP SP+0
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiPicker195

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond196 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_241
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function ZDP_NodeDescMsg
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_158, ??CrossCallReturnLabel_62
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-6
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ZDP_NodeDescMsg
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_158, ??CrossCallReturnLabel_63
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond198) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+-6
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ZDP_NodeDescMsg
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_51
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+-6
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function ZDP_NodeDescMsg
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_52
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-6
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function ZDP_PowerDescMsg
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_238
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-4
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function ZDP_UserDescRsp
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_239
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond202) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond202) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond202) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+-4
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ZDP_IncomingData
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_240
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-4
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function ZDP_IEEEAddrReq
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_227
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+-6
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function ZDP_NodeDescMsg
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_228
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-6
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function ZDP_IEEEAddrReq
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_229
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond206) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-6
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ZDP_NodeDescMsg
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_230
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-6
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function ZDP_NodeDescMsg
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_231
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+-6
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_232
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-6
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDP_SimpleDescMsg
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_29
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-6
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function ZDP_SimpleDescMsg
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_30
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+-6
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function ZDP_UserDescSet
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_27
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+-6
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function ZDP_UserDescRsp
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_28
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-6
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function ZDP_MgmtLqiRsp
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_53
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond214) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond214) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond214) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond214) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond214) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond214) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond214) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond214) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-6
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function ZDP_MgmtBindRsp
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_54
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond215) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond215) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond215) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-6
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-2
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker217 Using cfiCommon1
          CFI (cfiPicker217) NoFunction
          CFI (cfiPicker217) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI (cfiCond196) CFA_SP SP+0
          CFI (cfiCond197) CFA_SP SP+-4
          CFI (cfiCond198) CFA_SP SP+-4
          CFI (cfiCond199) CFA_SP SP+-4
          CFI (cfiCond200) CFA_SP SP+-4
          CFI (cfiCond201) CFA_SP SP+-2
          CFI (cfiCond202) CFA_SP SP+-2
          CFI (cfiCond203) CFA_SP SP+-2
          CFI (cfiCond204) CFA_SP SP+-4
          CFI (cfiCond205) CFA_SP SP+-4
          CFI (cfiCond206) CFA_SP SP+-4
          CFI (cfiCond207) CFA_SP SP+-4
          CFI (cfiCond208) CFA_SP SP+-4
          CFI (cfiCond209) CFA_SP SP+-4
          CFI (cfiCond210) CFA_SP SP+-4
          CFI (cfiCond211) CFA_SP SP+-4
          CFI (cfiCond212) CFA_SP SP+-4
          CFI (cfiCond213) CFA_SP SP+-4
          CFI (cfiCond214) CFA_SP SP+-4
          CFI (cfiCond215) CFA_SP SP+-4
          CFI (cfiCond216) CFA_SP SP+0
          CFI (cfiPicker217) CFA_SP SP+0
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiPicker217

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond218 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ZDP_PowerDescMsg
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-2
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker220 Using cfiCommon1
          CFI (cfiPicker220) NoFunction
          CFI (cfiPicker220) Picker
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        CLR     A
        MOVX    @DPTR,A
        MOV     A,R4
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R5
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,#0x19
        RET
          CFI (cfiCond218) CFA_SP SP+0
          CFI (cfiCond219) CFA_SP SP+0
          CFI (cfiPicker220) CFA_SP SP+0
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiPicker220

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond221 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_17
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDP_PowerDescMsg
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-2
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker223 Using cfiCommon1
          CFI (cfiPicker223) NoFunction
          CFI (cfiPicker223) Picker
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_164:
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     A,R2
        ADD     A,#0xf
        MOV     ?V0,A
        CLR     A
        ADDC    A,R3
        MOV     ?V1,A
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xc
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        RET
          CFI (cfiCond221) CFA_SP SP+0
          CFI (cfiCond222) CFA_SP SP+0
          CFI (cfiPicker223) CFA_SP SP+0
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiPicker223

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond224 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_9
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ZDP_PowerDescMsg
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-2
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker226 Using cfiCommon1
          CFI (cfiPicker226) NoFunction
          CFI (cfiPicker226) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_132:
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_134:
        ; Setup parameters for call to function AF_DataRequest
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V4,#0x1e
        MOV     R0,#?V4
        RET
          CFI (cfiCond224) CFA_SP SP+0
          CFI (cfiCond225) CFA_SP SP+0
          CFI (cfiPicker226) CFA_SP SP+0
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiPicker226

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond227 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_133
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function ZDP_NodeDescMsg
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_9
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-4
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function ZDP_PowerDescMsg
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_10
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-4
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker230 Using cfiCommon1
          CFI (cfiPicker230) NoFunction
          CFI (cfiPicker230) Picker
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     ?V3,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_191:
        RET
          CFI (cfiCond227) CFA_SP SP+0
          CFI (cfiCond228) CFA_SP SP+-2
          CFI (cfiCond229) CFA_SP SP+-2
          CFI (cfiPicker230) CFA_SP SP+0
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiPicker230
//  851 
//  852 /*********************************************************************
//  853  * @fn          ZDP_SimpleDescMsg
//  854  *
//  855  * @brief       Builds and sends a Simple Descriptor message, unicast to the
//  856  *              specified device.
//  857  *
//  858  * @param       inMsg - incoming message (request)
//  859  * @param       Status - message status (ZDP_SUCCESS or other)
//  860  * @param       pSimpleDesc - pointer to the node descriptor
//  861  *
//  862  * @return      afStatus_t
//  863  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  864 afStatus_t ZDP_SimpleDescMsg( zdoIncomingMsg_t *inMsg, byte Status,
ZDP_SimpleDescMsg:
          CFI Block cfiBlock231 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
        CODE
//  865                               SimpleDescriptionFormat_t *pSimpleDesc )
//  866 {
        FUNCALL ZDP_SimpleDescMsg, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_SimpleDescMsg, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R1
        MOV     R7,A
//  867   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ??Subroutine129_0 & 0xFFFF
//  868   uint8 i, len;
//  869 
//  870   if ( Status == ZDP_SUCCESS && pSimpleDesc )
??CrossCallReturnLabel_255:
        MOV     A,R7
        JNZ     ??ZDP_SimpleDescMsg_0
        MOV     A,R4
        ORL     A,R5
        JZ      ??ZDP_SimpleDescMsg_0
//  871   {
//  872     // Status + NWKAddrOfInterest + desc length + empty simple descriptor.
//  873     len = 1 + 2 + 1 + 8;
//  874     len += (pSimpleDesc->AppNumInClusters + pSimpleDesc->AppNumOutClusters) * sizeof ( uint16 );
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,R0
        CLR     C
        RLC     A
        ADD     A,#0xc
        MOV     R6,A
//  875   }
//  876   else
//  877   {
//  878     len = 1 + 2 + 1; // Status + desc length
//  879   }
//  880   if ( len >= ZDP_BUF_SZ-1 )
        CLR     C
        SUBB    A,#0x4f
        JC      ??ZDP_SimpleDescMsg_1
//  881   {
//  882     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_SimpleDescMsg_2 & 0xFFFF
//  883   }
??ZDP_SimpleDescMsg_0:
        MOV     R6,#0x4
//  884 
//  885   *pBuf++ = Status;
??ZDP_SimpleDescMsg_1:
        MOV     A,R7
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
//  886 
//  887   *pBuf++ = LO_UINT16( ZDAppNwkAddr.addr.shortAddr );
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_266:
        MOVX    @DPTR,A
//  888   *pBuf++ = HI_UINT16( ZDAppNwkAddr.addr.shortAddr );
        MOV     DPTR,#ZDAppNwkAddr + 1
        LCALL   ?Subroutine58 & 0xFFFF
//  889 
//  890   if ( len > 4 )
??CrossCallReturnLabel_93:
        MOV     A,R2
        ADD     A,#0x3
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOV     A,R6
        CLR     C
        SUBB    A,#0x5
        JNC     $+5
        LJMP    ??ZDP_SimpleDescMsg_3 & 0xFFFF
//  891   {
//  892     *pBuf++ = len - 4;   // Simple descriptor length
        MOV     A,#-0x4
        ADD     A,R6
        MOVX    @DPTR,A
//  893 
//  894     *pBuf++ = pSimpleDesc->EndPoint;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_267:
        INC     DPTR
        LCALL   ?Subroutine46 & 0xFFFF
//  895     *pBuf++ = LO_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_259:
        MOV     R0,DPL
        MOV     R1,DPH
        LCALL   ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_294:
        LCALL   ?Subroutine22 & 0xFFFF
//  896     *pBuf++ = HI_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_29:
        MOVX    @DPTR,A
//  897     *pBuf++ = LO_UINT16( pSimpleDesc->AppDeviceId );
        MOV     A,R4
        ADD     A,#0x3
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_269:
        INC     DPTR
        LCALL   ?Subroutine22 & 0xFFFF
//  898     *pBuf++ = HI_UINT16( pSimpleDesc->AppDeviceId );
??CrossCallReturnLabel_30:
        LCALL   ?Subroutine46 & 0xFFFF
//  899 
//  900     *pBuf++ = (byte)(pSimpleDesc->AppDevVer & 0x0F);
??CrossCallReturnLabel_260:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
//  901 
//  902     *pBuf++ = pSimpleDesc->AppNumInClusters;
        MOV     A,R4
        ADD     A,#0x6
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_127:
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_105:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0xb
        MOV     R2,A
        JNC     ??ZDP_SimpleDescMsg_4
        INC     R3
//  903     if ( pSimpleDesc->AppNumInClusters )
??ZDP_SimpleDescMsg_4:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        JZ      ??ZDP_SimpleDescMsg_5
//  904     {
//  905       for (i=0; i<pSimpleDesc->AppNumInClusters; ++i)
        MOV     ?V4,#0x0
        MOV     A,R4
        ADD     A,#0x7
        INC     R0
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     ?V6,R0
        MOV     ?V7,R1
        SJMP    ??ZDP_SimpleDescMsg_6
//  906       {
//  907         *pBuf++ = LO_UINT16( pSimpleDesc->pAppInClusterList[i] );
??ZDP_SimpleDescMsg_7:
        MOV     R0,?V4
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPL,?V6
        MOV     DPH,?V7
        LCALL   ?Subroutine53 & 0xFFFF
//  908         *pBuf++ = HI_UINT16( pSimpleDesc->pAppInClusterList[i] );
??CrossCallReturnLabel_83:
        MOV     DPL,?V6
        MOV     DPH,?V7
        LCALL   ?Subroutine52 & 0xFFFF
//  909       }
??CrossCallReturnLabel_81:
        JNC     ??ZDP_SimpleDescMsg_8
        INC     R3
??ZDP_SimpleDescMsg_8:
        INC     ?V4
??ZDP_SimpleDescMsg_6:
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,?V4
        CLR     C
        SUBB    A,R0
        JC      ??ZDP_SimpleDescMsg_7
//  910     }
//  911 
//  912     *pBuf++ = pSimpleDesc->AppNumOutClusters;
??ZDP_SimpleDescMsg_5:
        MOV     A,R4
        ADD     A,#0x9
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_128:
        LCALL   ?Subroutine35 & 0xFFFF
//  913     if ( pSimpleDesc->AppNumOutClusters )
??CrossCallReturnLabel_264:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        JZ      ??ZDP_SimpleDescMsg_9
//  914     {
//  915       for (i=0; i<pSimpleDesc->AppNumOutClusters; ++i)
        MOV     ?V4,#0x0
        MOV     A,R4
        ADD     A,#0xa
        INC     R0
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
??ZDP_SimpleDescMsg_10:
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,?V4
        CLR     C
        SUBB    A,R0
        JNC     ??ZDP_SimpleDescMsg_9
//  916       {
//  917         *pBuf++ = LO_UINT16( pSimpleDesc->pAppOutClusterList[i] );
        MOV     R0,?V4
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine53 & 0xFFFF
//  918         *pBuf++ = HI_UINT16( pSimpleDesc->pAppOutClusterList[i] );
??CrossCallReturnLabel_84:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine52 & 0xFFFF
//  919       }
??CrossCallReturnLabel_82:
        JNC     ??ZDP_SimpleDescMsg_11
        INC     R3
??ZDP_SimpleDescMsg_11:
        INC     ?V4
        SJMP    ??ZDP_SimpleDescMsg_10
//  920     }
//  921   }
//  922 
//  923   else
//  924   {
//  925     *pBuf = 0; // Description Length = 0;
??ZDP_SimpleDescMsg_3:
        CLR     A
        MOVX    @DPTR,A
//  926   }
//  927 
//  928   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Simple_Desc_rsp, len );
??ZDP_SimpleDescMsg_9:
        MOV     A,?V2
        ADD     A,#0x2
        MOV     ?V0,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V1,A
        MOV     A,?V2
        ADD     A,#0xf
        MOV     ?V2,A
        JNC     ??ZDP_SimpleDescMsg_12
        INC     ?V3
??ZDP_SimpleDescMsg_12:
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xc
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_56:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_16:
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_97:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     A,R6
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_124:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     ?V0,#0x4
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_196:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 30)
??ZDP_SimpleDescMsg_2:
        MOV     A,#0xc
        LJMP    ??Subroutine134_0 & 0xFFFF
//  929 }
          CFI EndBlock cfiBlock231

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond232 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_127
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function ZDP_SimpleDescMsg
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+-2
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker234 Using cfiCommon1
          CFI (cfiPicker234) NoFunction
          CFI (cfiPicker234) Picker
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     DPL,R0
        RET
          CFI (cfiCond232) CFA_SP SP+0
          CFI (cfiCond233) CFA_SP SP+0
          CFI (cfiPicker234) CFA_SP SP+0
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiPicker234

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond235 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_246
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function ZDP_MgmtLeaveReq
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+-2
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker237 Using cfiCommon1
          CFI (cfiPicker237) NoFunction
          CFI (cfiPicker237) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R1
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiPicker237
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        REQUIRE ??Subroutine129_0
        ; // Fall through to label ??Subroutine129_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine129_0:
          CFI Block cfiCond238 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_252
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function ZDP_EndDeviceTimeoutReq
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-2
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function zdpProcessAddrReq
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-2
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function ZDP_SimpleDescMsg
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+-2
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function ZDP_BindUnbindReq
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond242) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond242) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond242) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond242) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond242) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond242) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond242) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond242) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond242) CFA_SP SP+-2
          CFI (cfiCond242) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-2
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+-2
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+-2
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function ZDP_MgmtLeaveReq
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+-2
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker247 Using cfiCommon1
          CFI (cfiPicker247) NoFunction
          CFI (cfiPicker247) Picker
        MOV     DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiPicker247
        REQUIRE ??Subroutine130_0
        ; // Fall through to label ??Subroutine130_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine130_0:
          CFI Block cfiCond248 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_248
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function ZDP_MatchDescReq
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond249) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+-2
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond250 Using cfiCommon0
          CFI (cfiCond250) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond250) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond250) CFA_SP SP+-2
          CFI (cfiCond250) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDO_SendMsgCBs
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-2
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDP_SendData
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-2
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ZDP_EndDeviceTimeoutReq
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-2
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function zdpProcessAddrReq
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-2
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ZDP_SimpleDescMsg
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-2
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function ZDP_BindUnbindReq
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond256) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond256) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond256) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond256) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond256) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-2
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-2
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-2
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+-2
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function ZDP_MgmtLeaveReq
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+-2
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker261 Using cfiCommon1
          CFI (cfiPicker261) NoFunction
          CFI (cfiPicker261) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
          CFI (cfiCond248) CFA_SP SP+0
          CFI (cfiCond249) CFA_SP SP+0
          CFI (cfiCond250) CFA_SP SP+0
          CFI (cfiCond251) CFA_SP SP+0
          CFI (cfiCond252) CFA_SP SP+0
          CFI (cfiCond253) CFA_SP SP+0
          CFI (cfiCond254) CFA_SP SP+0
          CFI (cfiCond255) CFA_SP SP+0
          CFI (cfiCond256) CFA_SP SP+0
          CFI (cfiCond257) CFA_SP SP+0
          CFI (cfiCond258) CFA_SP SP+0
          CFI (cfiCond259) CFA_SP SP+0
          CFI (cfiCond260) CFA_SP SP+0
          CFI (cfiPicker261) CFA_SP SP+0
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiPicker261

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond262 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond263 Using cfiCommon0
          CFI (cfiCond263) Function ZDP_SimpleDescMsg
          CFI (cfiCond263) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond263) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond263) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond263) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond263) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond263) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond263) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond263) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond263) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond263) CFA_SP SP+-2
          CFI (cfiCond263) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker264 Using cfiCommon1
          CFI (cfiPicker264) NoFunction
          CFI (cfiPicker264) Picker
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_153:
        ; Setup parameters for call to function AF_DataRequest
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V4,#0x1e
        MOV     R0,#?V4
        RET
          CFI (cfiCond262) CFA_SP SP+0
          CFI (cfiCond263) CFA_SP SP+0
          CFI (cfiPicker264) CFA_SP SP+0
          CFI EndBlock cfiCond262
          CFI EndBlock cfiCond263
          CFI EndBlock cfiPicker264

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond265 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function ZDP_SimpleDescReq
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_12
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-4
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function ZDP_MatchDescReq
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_96
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond267) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+-4
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function ZDP_SimpleDescMsg
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_97
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-4
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker269 Using cfiCommon1
          CFI (cfiPicker269) NoFunction
          CFI (cfiPicker269) Picker
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_214:
        RET
          CFI (cfiCond265) CFA_SP SP+-2
          CFI (cfiCond266) CFA_SP SP+-2
          CFI (cfiCond267) CFA_SP SP+-2
          CFI (cfiCond268) CFA_SP SP+-2
          CFI (cfiPicker269) CFA_SP SP+0
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiPicker269

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond270 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_207
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function ZDP_DeviceAnnce
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_209
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+-6
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function ZDP_EndDeviceTimeoutReq
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_208
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-6
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function ZDP_MgmtLqiRsp
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_211
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+-4
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_11
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-6
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function ZDP_SimpleDescReq
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_12
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-6
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond276 Using cfiCommon0
          CFI (cfiCond276) Function ZDP_MatchDescReq
          CFI (cfiCond276) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_96
          CFI (cfiCond276) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond276) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond276) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond276) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond276) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond276) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond276) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond276) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond276) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond276) CFA_SP SP+-6
          CFI (cfiCond276) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function ZDP_SimpleDescMsg
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_97
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond277) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond277) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond277) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond277) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_SP SP+-6
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker278 Using cfiCommon1
          CFI (cfiPicker278) NoFunction
          CFI (cfiPicker278) Picker
        MOVX    A,@DPTR
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    @DPTR,A
        RET
          CFI (cfiCond270) CFA_SP SP+-4
          CFI (cfiCond271) CFA_SP SP+-4
          CFI (cfiCond272) CFA_SP SP+-4
          CFI (cfiCond273) CFA_SP SP+-2
          CFI (cfiCond274) CFA_SP SP+-4
          CFI (cfiCond275) CFA_SP SP+-4
          CFI (cfiCond276) CFA_SP SP+-4
          CFI (cfiCond277) CFA_SP SP+-4
          CFI (cfiPicker278) CFA_SP SP+0
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiPicker278

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond279 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function ZDP_SimpleDescMsg
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond280) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+-2
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker281 Using cfiCommon1
          CFI (cfiPicker281) NoFunction
          CFI (cfiPicker281) Picker
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_139:
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_150:
        RET
          CFI (cfiCond279) CFA_SP SP+0
          CFI (cfiCond280) CFA_SP SP+0
          CFI (cfiPicker281) CFA_SP SP+0
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiPicker281

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond282 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ZDP_SimpleDescMsg
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond283) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond283) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond283) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond283) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond283) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+-2
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker284 Using cfiCommon1
          CFI (cfiPicker284) NoFunction
          CFI (cfiPicker284) Picker
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_138:
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_146:
        MOV     R2,A
        RET
          CFI (cfiCond282) CFA_SP SP+0
          CFI (cfiCond283) CFA_SP SP+0
          CFI (cfiPicker284) CFA_SP SP+0
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiPicker284

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond285 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function ZDP_SimpleDescMsg
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_84
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-4
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function ZDP_SimpleDescMsg
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_81
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-4
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function ZDP_SimpleDescMsg
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_82
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-4
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker289 Using cfiCommon1
          CFI (cfiPicker289) NoFunction
          CFI (cfiPicker289) Picker
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     ?V5,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,?V5
        MOV     DPH,A
        RET
          CFI (cfiCond285) CFA_SP SP+-2
          CFI (cfiCond286) CFA_SP SP+-2
          CFI (cfiCond287) CFA_SP SP+-2
          CFI (cfiCond288) CFA_SP SP+-2
          CFI (cfiPicker289) CFA_SP SP+0
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiPicker289

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond290 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_259
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function ZDP_SimpleDescMsg
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-2
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker292 Using cfiCommon1
          CFI (cfiPicker292) NoFunction
          CFI (cfiPicker292) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiPicker292
        REQUIRE ??Subroutine131_0
        ; // Fall through to label ??Subroutine131_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine131_0:
          CFI Block cfiCond293 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_261
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function ZDP_SimpleDescMsg
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond294) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond294) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond294) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond294) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-2
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function ZDP_SimpleDescMsg
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond295) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond295) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond295) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond295) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-2
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker296 Using cfiCommon1
          CFI (cfiPicker296) NoFunction
          CFI (cfiPicker296) Picker
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        RET
          CFI (cfiCond293) CFA_SP SP+0
          CFI (cfiCond294) CFA_SP SP+0
          CFI (cfiCond295) CFA_SP SP+0
          CFI (cfiPicker296) CFA_SP SP+0
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiPicker296

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond297 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_264
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ZDP_MgmtBindRsp
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond298) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond298) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond298) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-2
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker299 Using cfiCommon1
          CFI (cfiPicker299) NoFunction
          CFI (cfiPicker299) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiPicker299
        REQUIRE ??Subroutine132_0
        ; // Fall through to label ??Subroutine132_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine132_0:
          CFI Block cfiCond300 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_263
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function ZDP_SimpleDescMsg
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond301) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond301) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond301) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond301) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond301) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-2
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function ZDP_MgmtBindRsp
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond302) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond302) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-2
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker303 Using cfiCommon1
          CFI (cfiPicker303) NoFunction
          CFI (cfiPicker303) Picker
        MOV     DPL,R2
        MOV     DPH,R3
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiPicker303
        REQUIRE ??Subroutine133_0
        ; // Fall through to label ??Subroutine133_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine133_0:
          CFI Block cfiCond304 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_262
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function zdpProcessAddrReq
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-2
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function ZDP_SimpleDescMsg
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond306) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-2
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function ZDP_MgmtBindRsp
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond307) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-2
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker308 Using cfiCommon1
          CFI (cfiPicker308) NoFunction
          CFI (cfiPicker308) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        RET
          CFI (cfiCond304) CFA_SP SP+0
          CFI (cfiCond305) CFA_SP SP+0
          CFI (cfiCond306) CFA_SP SP+0
          CFI (cfiCond307) CFA_SP SP+0
          CFI (cfiPicker308) CFA_SP SP+0
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiPicker308

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond309 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_29
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function ZDP_SimpleDescMsg
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond310) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-2
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker311 Using cfiCommon1
          CFI (cfiPicker311) NoFunction
          CFI (cfiPicker311) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_235:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_147:
        INC     DPTR
        RET
          CFI (cfiCond309) CFA_SP SP+0
          CFI (cfiCond310) CFA_SP SP+0
          CFI (cfiPicker311) CFA_SP SP+0
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiPicker311

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond312 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function ZDP_NodeDescMsg
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_228
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-4
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function ZDP_IEEEAddrReq
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_229
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+-4
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function ZDP_NodeDescMsg
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_230
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-4
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function ZDP_NodeDescMsg
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_231
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+-4
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_232
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+-4
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function ZDP_SimpleDescMsg
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_29
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-4
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function ZDP_SimpleDescMsg
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_30
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond319) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond319) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond319) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond319) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond319) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-4
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function ZDP_UserDescSet
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_27
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond320) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond320) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond320) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+-4
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function ZDP_UserDescRsp
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_28
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond321) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond321) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond321) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond321) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond321) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+-4
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function ZDP_MgmtLqiRsp
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_53
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond322) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond322) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond322) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond322) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond322) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond322) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond322) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond322) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond322) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+-4
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond323 Using cfiCommon0
          CFI (cfiCond323) Function ZDP_MgmtBindRsp
          CFI (cfiCond323) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_54
          CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond323) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond323) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond323) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond323) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond323) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond323) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond323) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond323) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond323) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond323) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond323) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond323) CFA_SP SP+-4
          CFI (cfiCond323) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker324 Using cfiCommon1
          CFI (cfiPicker324) NoFunction
          CFI (cfiPicker324) Picker
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_244:
        INC     DPTR
        RET
          CFI (cfiCond312) CFA_SP SP+-2
          CFI (cfiCond313) CFA_SP SP+-2
          CFI (cfiCond314) CFA_SP SP+-2
          CFI (cfiCond315) CFA_SP SP+-2
          CFI (cfiCond316) CFA_SP SP+-2
          CFI (cfiCond317) CFA_SP SP+-2
          CFI (cfiCond318) CFA_SP SP+-2
          CFI (cfiCond319) CFA_SP SP+-2
          CFI (cfiCond320) CFA_SP SP+-2
          CFI (cfiCond321) CFA_SP SP+-2
          CFI (cfiCond322) CFA_SP SP+-2
          CFI (cfiCond323) CFA_SP SP+-2
          CFI (cfiPicker324) CFA_SP SP+0
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiCond323
          CFI EndBlock cfiPicker324

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond325 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function ZDP_SimpleDescMsg
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_16
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond326) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond326) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond326) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-2
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker327 Using cfiCommon1
          CFI (cfiPicker327) NoFunction
          CFI (cfiPicker327) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_130:
        RET
          CFI (cfiCond325) CFA_SP SP+0
          CFI (cfiCond326) CFA_SP SP+0
          CFI (cfiPicker327) CFA_SP SP+0
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiPicker327

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond328 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond329 Using cfiCommon0
          CFI (cfiCond329) Function ZDP_SimpleDescReq
          CFI (cfiCond329) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_12
          CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond329) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond329) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond329) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond329) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond329) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond329) CFA_SP SP+-4
          CFI (cfiCond329) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function ZDP_MatchDescReq
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_15
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond330) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond330) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+-4
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function ZDP_SimpleDescMsg
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_16
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond331) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond331) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond331) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-4
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker332 Using cfiCommon1
          CFI (cfiPicker332) NoFunction
          CFI (cfiPicker332) Picker
        LCALL   ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_169:
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     ?V1,A
        RET
          CFI (cfiCond328) CFA_SP SP+-2
          CFI (cfiCond329) CFA_SP SP+-2
          CFI (cfiCond330) CFA_SP SP+-2
          CFI (cfiCond331) CFA_SP SP+-2
          CFI (cfiPicker332) CFA_SP SP+0
          CFI EndBlock cfiCond328
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiPicker332

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock333 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
          CFI EndBlock cfiBlock333
        REQUIRE ??Subroutine134_0
        ; // Fall through to label ??Subroutine134_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine134_0:
          CFI Block cfiBlock334 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 30)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Valid
          CFI EndBlock cfiBlock334
        REQUIRE ??Subroutine135_0
        ; // Fall through to label ??Subroutine135_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine135_0:
          CFI Block cfiBlock335 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock335
//  930 
//  931 /*********************************************************************
//  932  * @fn          ZDP_EPRsp
//  933  *
//  934  * @brief       This builds and send an endpoint list. Used in
//  935  *              Active_EP_rsp and Match_Desc_Rsp
//  936  *              message.  This function sends unicast message to the
//  937  *              requesting device.
//  938  *
//  939  * @param       MsgType - either Active_EP_rsp or Match_Desc_Rsp
//  940  * @param       dstAddr - destination address
//  941  * @param       Status - message status (ZDP_SUCCESS or other)
//  942  * @param       nwkAddr - Device's short address that this response describes
//  943  * @param       Count - number of endpoint/interfaces in list
//  944  * @param       pEPIntfList - Array of Endpoint/Interfaces
//  945  * @param       SecurityEnable - Security Options
//  946  *
//  947  * @return      afStatus_t
//  948  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  949 afStatus_t ZDP_EPRsp( uint16 MsgType, byte TransSeq, zAddrType_t *dstAddr,
ZDP_EPRsp:
          CFI Block cfiBlock336 Using cfiCommon0
          CFI Function ZDP_EPRsp
        CODE
//  950                         byte Status, uint16 nwkAddr, byte Count,
//  951                         uint8 *pEPList,
//  952                         byte SecurityEnable )
//  953 {
        FUNCALL ZDP_EPRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EPRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  954   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_309:
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
//  955   byte len = 1 + 2 + 1;  // Status + nwkAddr + endpoint/interface count.
        MOV     ?V0,#0x4
//  956   byte txOptions;
//  957 
//  958   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  959 
//  960   if ( MsgType == Match_Desc_rsp )
        MOV     A,#0x6
        XRL     A,?V2
        JNZ     ??ZDP_EPRsp_0
        MOV     A,#-0x80
        XRL     A,?V3
??ZDP_EPRsp_0:
        JNZ     ??ZDP_EPRsp_1
//  961     txOptions = AF_MSG_ACK_REQUEST;
        MOV     ?V1,#0x10
        SJMP    ??ZDP_EPRsp_2
//  962   else
//  963     txOptions = 0;
??ZDP_EPRsp_1:
        MOV     ?V1,#0x0
//  964 
//  965     *pBuf++ = Status;
??ZDP_EPRsp_2:
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_113:
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
//  966   *pBuf++ = LO_UINT16( nwkAddr );
//  967   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_23:
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
//  968 
//  969   *pBuf++ = Count;   // Endpoint/Interface count
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
//  970 
//  971   if ( Count )
        JZ      ??ZDP_EPRsp_3
//  972   {
//  973     len += Count;
        MOV     A,#0x4
        ADD     A,R4
        MOV     ?V0,A
//  974     osal_memcpy( pBuf, pEPList, Count );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine62 & 0xFFFF
//  975   }
??CrossCallReturnLabel_98:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     R5,#0x0
        MOV     A,R2
        ADD     A,#0x4
        MOV     R2,A
        JNC     ??ZDP_EPRsp_4
        INC     R3
??ZDP_EPRsp_4:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
//  976 
//  977   FillAndSendTxOptions( &TransSeq, dstAddr, MsgType, len, txOptions );
??ZDP_EPRsp_3:
        MOV     A,?V1
        MOV     DPTR,#ZDP_TxOptions
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R1,?V0
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R1,A
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        INC     A
        LJMP    ??Subroutine122_0 & 0xFFFF
//  978 }
          CFI EndBlock cfiBlock336

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond337 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_112
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function ZDP_EPRsp
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function ZDP_BindUnbindReq
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+-2
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker340 Using cfiCommon1
          CFI (cfiPicker340) NoFunction
          CFI (cfiPicker340) Picker
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_151:
        RET
          CFI (cfiCond337) CFA_SP SP+0
          CFI (cfiCond338) CFA_SP SP+0
          CFI (cfiCond339) CFA_SP SP+0
          CFI (cfiPicker340) CFA_SP SP+0
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiPicker340

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond341 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function ZDP_SimpleDescMsg
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_84
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-4
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function ZDP_SendData
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_112
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+-4
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function ZDP_EPRsp
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_113
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+-4
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function ZDP_BindUnbindReq
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_114
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond345) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond345) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond345) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond345) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond345) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-4
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDP_MgmtRtgRsp
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_33
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-4
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function ZDP_MgmtBindRsp
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_34
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond347) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond347) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond347) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+-4
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker348 Using cfiCommon1
          CFI (cfiPicker348) NoFunction
          CFI (cfiPicker348) Picker
        LCALL   ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_296:
        MOVX    @DPTR,A
        RET
          CFI (cfiCond341) CFA_SP SP+-2
          CFI (cfiCond342) CFA_SP SP+-2
          CFI (cfiCond343) CFA_SP SP+-2
          CFI (cfiCond344) CFA_SP SP+-2
          CFI (cfiCond345) CFA_SP SP+-2
          CFI (cfiCond346) CFA_SP SP+-2
          CFI (cfiCond347) CFA_SP SP+-2
          CFI (cfiPicker348) CFA_SP SP+0
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiPicker348
//  979 
//  980 /*********************************************************************
//  981  * @fn          ZDP_UserDescRsp
//  982  *
//  983  * @brief       Build and send the User Decriptor Response.
//  984  *
//  985  *
//  986  * @param       dstAddr - destination address
//  987  * @param       nwkAddrOfInterest -
//  988  * @param       userDesc -
//  989  * @param       SecurityEnable - Security Options
//  990  *
//  991  * @return      ZStatus_t
//  992  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  993 ZStatus_t ZDP_UserDescRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_UserDescRsp:
          CFI Block cfiBlock349 Using cfiCommon0
          CFI Function ZDP_UserDescRsp
        CODE
//  994                 uint16 nwkAddrOfInterest, UserDescriptorFormat_t *userDesc,
//  995                 byte SecurityEnable )
//  996 {
        FUNCALL ZDP_UserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LCALL   ?Subroutine32 & 0xFFFF
//  997   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_49:
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_314:
        MOV     ?V8,R0
        MOV     ?V9,R1
//  998   byte len = 1 + 2 + 1;  // Status + nwkAddr + descriptor length.
//  999 
// 1000   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1001 
// 1002   len += userDesc->len;
        MOV     DPL,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,#0x4
        MOV     ?V2,A
// 1003 
// 1004   *pBuf++ = ZSUCCESS;
        MOV     DPL,?V0
        MOV     DPH,?V1
        CLR     A
        MOVX    @DPTR,A
// 1005 
// 1006   *pBuf++ = LO_UINT16( nwkAddrOfInterest );
        MOV     A,R4
        INC     DPTR
        MOVX    @DPTR,A
// 1007   *pBuf++ = HI_UINT16( nwkAddrOfInterest );
        MOV     A,R5
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine42 & 0xFFFF
// 1008 
// 1009   *pBuf++ = userDesc->len;
??CrossCallReturnLabel_239:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine21 & 0xFFFF
// 1010   osal_memcpy( pBuf, userDesc->desc, userDesc->len );
??CrossCallReturnLabel_28:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,?V0
        ADD     A,#0x4
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1011 
// 1012   return (ZStatus_t)fillAndSend( &TransSeq, dstAddr, User_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x11
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,?V2
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LJMP    ?Subroutine4 & 0xFFFF
// 1013 }
          CFI EndBlock cfiBlock349

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond350 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDP_UserDescRsp
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-2
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker352 Using cfiCommon1
          CFI (cfiPicker352) NoFunction
          CFI (cfiPicker352) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_236:
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        RET
          CFI (cfiCond350) CFA_SP SP+0
          CFI (cfiCond351) CFA_SP SP+0
          CFI (cfiPicker352) CFA_SP SP+0
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiPicker352
// 1014 
// 1015 /*********************************************************************
// 1016  * @fn          ZDP_ServerDiscRsp
// 1017  *
// 1018  * @brief       Build and send the Server_Discovery_rsp response.
// 1019  *
// 1020  * @param       transID - Transaction sequence number of request.
// 1021  * @param       dstAddr - Network Destination Address.
// 1022  * @param       status - Status of response to request.
// 1023  * @param       aoi - Network Address of Interest of request.
// 1024  * @param       serverMask - Bit map of service(s) being sought.
// 1025  * @param       SecurityEnable - Security Options
// 1026  *
// 1027  * @return      ZStatus_t
// 1028  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1029 ZStatus_t ZDP_ServerDiscRsp( byte transID, zAddrType_t *dstAddr, byte status,
ZDP_ServerDiscRsp:
          CFI Block cfiBlock353 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
        CODE
// 1030                            uint16 aoi, uint16 serverMask, byte SecurityEnable )
// 1031 {
        FUNCALL ZDP_ServerDiscRsp, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ServerDiscRsp, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 13
        MOV     A,#-0xd
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        LCALL   ?Subroutine32 & 0xFFFF
// 1032   const byte len = 1  + 2;  // status + aoi + mask.
// 1033   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_50:
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
// 1034   ZStatus_t stat;
// 1035 
// 1036   // Intentionally unreferenced parameters
// 1037   (void)aoi;
// 1038   (void)SecurityEnable;
// 1039 
// 1040   *pBuf++ = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R4
        MOVX    @DPTR,A
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
// 1041 
// 1042   *pBuf++ = LO_UINT16( serverMask );
// 1043   *pBuf++ = HI_UINT16( serverMask );
// 1044 
// 1045   ZDP_TxOptions = AF_MSG_ACK_REQUEST;
??CrossCallReturnLabel_24:
        MOV     DPTR,#ZDP_TxOptions
        MOV     A,#0x10
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_71:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_2:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_57:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_13:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V2,#0x4
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V2,#0x15
        MOV     ?V3,#-0x80
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_90:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        MOV     R1,A
// 1046   stat = fillAndSend( &transID, dstAddr, Server_Discovery_rsp, len );
// 1047   ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
// 1048 
// 1049   return ( stat );
          CFI EndBlock cfiBlock353
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 1050 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock354 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0xd
        LJMP    ??Subroutine119_0 & 0xFFFF
          CFI EndBlock cfiBlock354

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond355 Using cfiCommon0
          CFI Function ZDP_UserDescRsp
          CFI Conditional ??CrossCallReturnLabel_49
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDP_ServerDiscRsp
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-2
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker357 Using cfiCommon1
          CFI (cfiPicker357) NoFunction
          CFI (cfiPicker357) Picker
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_325:
        RET
          CFI (cfiCond355) CFA_SP SP+0
          CFI (cfiCond356) CFA_SP SP+0
          CFI (cfiPicker357) CFA_SP SP+0
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiPicker357
// 1051 
// 1052 /*********************************************************************
// 1053  * @fn          ZDP_GenericRsp
// 1054  *
// 1055  * @brief       Sends a response message with only the parameter status
// 1056  *              byte and the addr of interest for data.
// 1057  *              This function sends unicast message to the
// 1058  *              requesting device.
// 1059  *
// 1060  * @param       dstAddr - destination address
// 1061  * @param       status  - generic status for response
// 1062  * @param       aoi     - address of interest
// 1063  * @param       dstAddr - destination address
// 1064  * @param       rspId   - response cluster ID
// 1065  * @param       SecurityEnable - Security Options
// 1066  *
// 1067  * @return      afStatus_t
// 1068  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1069 afStatus_t ZDP_GenericRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_GenericRsp:
          CFI Block cfiBlock358 Using cfiCommon0
          CFI Function ZDP_GenericRsp
        CODE
// 1070                      byte status, uint16 aoi, uint16 rspID, byte SecurityEnable )
// 1071 {
        FUNCALL ZDP_GenericRsp, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_GenericRsp, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 13
        MOV     A,#-0xd
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        LCALL   ?Subroutine60 & 0xFFFF
// 1072   uint8 len;
// 1073 
// 1074   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1075 
// 1076   ZDP_TmpBuf[0] = status;
??CrossCallReturnLabel_274:
        MOV     A,R4
        MOVX    @DPTR,A
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine150_0 & 0xFFFF
// 1077   ZDP_TmpBuf[1] = LO_UINT16( aoi );
??CrossCallReturnLabel_315:
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R2
        INC     DPTR
        MOV     A,R0
        LCALL   ?Subroutine25 & 0xFFFF
// 1078   ZDP_TmpBuf[2] = HI_UINT16( aoi );
??CrossCallReturnLabel_36:
        LCALL   ?Subroutine31 & 0xFFFF
// 1079 
// 1080   // Length byte
// 1081   ZDP_TmpBuf[3] = 0;
??CrossCallReturnLabel_48:
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 1082   len = 4;
// 1083 
// 1084   return fillAndSend( &TransSeq, dstAddr, rspID, len );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xc
        MOV     R5,A
        MOV     R1,A
        INC     A
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_7:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_58:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_14:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V2,#0x5
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,#0x24
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_91:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        LJMP    ?Subroutine7 & 0xFFFF
// 1085 }
          CFI EndBlock cfiBlock358

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond359 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_90
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDP_GenericRsp
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond360) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-2
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function ZDP_MgmtLqiRsp
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond361) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond361) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond361) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond361) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond361) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond361) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond361) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-2
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 43)
          CFI Block cfiPicker362 Using cfiCommon1
          CFI (cfiPicker362) NoFunction
          CFI (cfiPicker362) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_201:
        MOV     A,#0xa
        RET
          CFI (cfiCond359) CFA_SP SP+0
          CFI (cfiCond360) CFA_SP SP+0
          CFI (cfiCond361) CFA_SP SP+0
          CFI (cfiPicker362) CFA_SP SP+0
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiPicker362

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond363 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function ZDP_GenericRsp
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+-2
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker365 Using cfiCommon1
          CFI (cfiPicker365) NoFunction
          CFI (cfiPicker365) Picker
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_179:
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_326:
        MOV     A,#0x1
        RET
          CFI (cfiCond363) CFA_SP SP+0
          CFI (cfiCond364) CFA_SP SP+0
          CFI (cfiPicker365) CFA_SP SP+0
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiPicker365

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond366 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function ZDP_SendData
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_20
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-6
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function ZDP_NodeDescMsg
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_9
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-6
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function ZDP_PowerDescMsg
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_10
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-6
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_11
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+-4
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function ZDP_SimpleDescReq
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_12
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-4
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function ZDP_ServerDiscRsp
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_57
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-4
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function ZDP_GenericRsp
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_58
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-4
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-2
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function fillAndSend
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_0
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-6
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function ZDP_SendData
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_1
          CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond376) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond376) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond376) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond376) CFA_SP SP+-6
          CFI (cfiCond376) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_3
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-6
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function ZDP_SimpleDescReq
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_4
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-6
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function ZDP_NodeDescMsg
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_5
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-6
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ZDP_PowerDescMsg
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_6
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-6
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function ZDP_ServerDiscRsp
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_2
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+-6
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function ZDP_GenericRsp
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_7
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+-6
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_8
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-6
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_79
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-6
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_80
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-6
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker386 Using cfiCommon1
          CFI (cfiPicker386) NoFunction
          CFI (cfiPicker386) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI (cfiCond366) CFA_SP SP+-4
          CFI (cfiCond367) CFA_SP SP+-4
          CFI (cfiCond368) CFA_SP SP+-4
          CFI (cfiCond369) CFA_SP SP+-4
          CFI (cfiCond370) CFA_SP SP+-2
          CFI (cfiCond371) CFA_SP SP+-2
          CFI (cfiCond372) CFA_SP SP+-2
          CFI (cfiCond373) CFA_SP SP+-2
          CFI (cfiCond374) CFA_SP SP+0
          CFI (cfiCond375) CFA_SP SP+-4
          CFI (cfiCond376) CFA_SP SP+-4
          CFI (cfiCond377) CFA_SP SP+-4
          CFI (cfiCond378) CFA_SP SP+-4
          CFI (cfiCond379) CFA_SP SP+-4
          CFI (cfiCond380) CFA_SP SP+-4
          CFI (cfiCond381) CFA_SP SP+-4
          CFI (cfiCond382) CFA_SP SP+-4
          CFI (cfiCond383) CFA_SP SP+-4
          CFI (cfiCond384) CFA_SP SP+-4
          CFI (cfiCond385) CFA_SP SP+-4
          CFI (cfiPicker386) CFA_SP SP+0
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiPicker386

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond387 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_47
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function ZDP_GenericRsp
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+-2
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker389 Using cfiCommon1
          CFI (cfiPicker389) NoFunction
          CFI (cfiPicker389) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_136:
        RET
          CFI (cfiCond387) CFA_SP SP+0
          CFI (cfiCond388) CFA_SP SP+0
          CFI (cfiPicker389) CFA_SP SP+0
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiPicker389

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond390 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function ZDP_SimpleDescReq
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_41
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond391) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond391) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+-4
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function ZDP_DeviceAnnce
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_47
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+-4
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function ZDP_GenericRsp
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_48
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+-4
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function ZDP_SimpleDescReq
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_35
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond394) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond394) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-4
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function ZDP_GenericRsp
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_36
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond395) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+-4
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker396 Using cfiCommon1
          CFI (cfiPicker396) NoFunction
          CFI (cfiPicker396) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_175:
        INC     DPTR
        RET
          CFI (cfiCond390) CFA_SP SP+-2
          CFI (cfiCond391) CFA_SP SP+-2
          CFI (cfiCond392) CFA_SP SP+-2
          CFI (cfiCond393) CFA_SP SP+-2
          CFI (cfiCond394) CFA_SP SP+-2
          CFI (cfiCond395) CFA_SP SP+-2
          CFI (cfiPicker396) CFA_SP SP+0
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiPicker396

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond397 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_174, ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDP_SimpleDescReq
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_174, ??CrossCallReturnLabel_41
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-4
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_40
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-6
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function ZDP_SimpleDescReq
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_41
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond400) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-6
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function ZDP_DeviceAnnce
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_47
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+-6
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function ZDP_GenericRsp
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_48
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-6
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function ZDP_SimpleDescReq
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_35
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-6
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function ZDP_GenericRsp
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_36
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+-6
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker405 Using cfiCommon1
          CFI (cfiPicker405) NoFunction
          CFI (cfiPicker405) Picker
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_336:
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI (cfiCond397) CFA_SP SP+-2
          CFI (cfiCond398) CFA_SP SP+-2
          CFI (cfiCond399) CFA_SP SP+-4
          CFI (cfiCond400) CFA_SP SP+-4
          CFI (cfiCond401) CFA_SP SP+-4
          CFI (cfiCond402) CFA_SP SP+-4
          CFI (cfiCond403) CFA_SP SP+-4
          CFI (cfiCond404) CFA_SP SP+-4
          CFI (cfiPicker405) CFA_SP SP+0
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiPicker405

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond406 Using cfiCommon0
          CFI Function ZDP_SimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function ZDP_GenericRsp
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+-2
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker408 Using cfiCommon1
          CFI (cfiPicker408) NoFunction
          CFI (cfiPicker408) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_137:
        INC     DPTR
        MOV     A,R1
        RET
          CFI (cfiCond406) CFA_SP SP+0
          CFI (cfiCond407) CFA_SP SP+0
          CFI (cfiPicker408) CFA_SP SP+0
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiPicker408

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond409 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_13
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function ZDP_GenericRsp
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-2
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker411 Using cfiCommon1
          CFI (cfiPicker411) NoFunction
          CFI (cfiPicker411) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_189:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_186:
        ; Setup parameters for call to function AF_DataRequest
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V1,#0x1e
        MOV     R0,#?V1
        RET
          CFI (cfiCond409) CFA_SP SP+0
          CFI (cfiCond410) CFA_SP SP+0
          CFI (cfiPicker411) CFA_SP SP+0
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiPicker411

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond412 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_184
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_185
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-4
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function ZDP_IEEEAddrReq
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_190, ??CrossCallReturnLabel_183
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond414) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+-4
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function ZDP_ServerDiscRsp
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_13
          CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond415) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond415) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond415) CFA_SP SP+-4
          CFI (cfiCond415) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function ZDP_GenericRsp
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_189, ??CrossCallReturnLabel_14
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-4
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker417 Using cfiCommon1
          CFI (cfiPicker417) NoFunction
          CFI (cfiPicker417) Picker
        MOVX    @DPTR,A
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     ?V3,A
        RET
          CFI (cfiCond412) CFA_SP SP+-2
          CFI (cfiCond413) CFA_SP SP+-2
          CFI (cfiCond414) CFA_SP SP+-2
          CFI (cfiCond415) CFA_SP SP+-2
          CFI (cfiCond416) CFA_SP SP+-2
          CFI (cfiPicker417) CFA_SP SP+0
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiPicker417

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond418 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_184
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_185
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-4
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function ZDP_IEEEAddrReq
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_183
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-4
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function ZDP_ServerDiscRsp
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_13
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+-4
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function ZDP_GenericRsp
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_14
          CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond422) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond422) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond422) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond422) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond422) CFA_SP SP+-4
          CFI (cfiCond422) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function ZDP_EndDeviceBindReq
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_21
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-4
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function ZDP_EndDeviceBindReq
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_22
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond424) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-4
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker425 Using cfiCommon1
          CFI (cfiPicker425) NoFunction
          CFI (cfiPicker425) Picker
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_192:
        RET
          CFI (cfiCond418) CFA_SP SP+-2
          CFI (cfiCond419) CFA_SP SP+-2
          CFI (cfiCond420) CFA_SP SP+-2
          CFI (cfiCond421) CFA_SP SP+-2
          CFI (cfiCond422) CFA_SP SP+-2
          CFI (cfiCond423) CFA_SP SP+-2
          CFI (cfiCond424) CFA_SP SP+-2
          CFI (cfiPicker425) CFA_SP SP+0
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiPicker425

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond426 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_133
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function ZDP_NodeDescMsg
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_9
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-6
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function ZDP_PowerDescMsg
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_10
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-6
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function ZDP_NwkAddrReq
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_184
          CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond429) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond429) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond429) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond429) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond429) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond429) CFA_SP SP+-6
          CFI (cfiCond429) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_185
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+-6
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDP_IEEEAddrReq
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_183
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-6
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function ZDP_ServerDiscRsp
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_13
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-6
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function ZDP_GenericRsp
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_14
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-6
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function ZDP_EndDeviceBindReq
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_21
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond434) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-6
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function ZDP_EndDeviceBindReq
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_22
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-6
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker436 Using cfiCommon1
          CFI (cfiPicker436) NoFunction
          CFI (cfiPicker436) Picker
        MOVX    A,@DPTR
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    @DPTR,A
        RET
          CFI (cfiCond426) CFA_SP SP+-2
          CFI (cfiCond427) CFA_SP SP+-4
          CFI (cfiCond428) CFA_SP SP+-4
          CFI (cfiCond429) CFA_SP SP+-4
          CFI (cfiCond430) CFA_SP SP+-4
          CFI (cfiCond431) CFA_SP SP+-4
          CFI (cfiCond432) CFA_SP SP+-4
          CFI (cfiCond433) CFA_SP SP+-4
          CFI (cfiCond434) CFA_SP SP+-4
          CFI (cfiCond435) CFA_SP SP+-4
          CFI (cfiPicker436) CFA_SP SP+0
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiPicker436
// 1086 
// 1087 /*********************************************************************
// 1088  * Binding
// 1089  */
// 1090 /*********************************************************************
// 1091  * @fn          ZDP_EndDeviceBindReq
// 1092  *
// 1093  * @brief       This builds and sends a End_Device_Bind_req message.
// 1094  *              This function sends a unicast message.
// 1095  *
// 1096  * @param       dstAddr - destination address
// 1097  * @param       LocalCoordinator - short address of local coordinator
// 1098  * @param       epIntf - Endpoint/Interface of Simple Desc
// 1099  * @param       ProfileID - Profile ID
// 1100  *
// 1101  *   The Input cluster list is the opposite of what you would think.
// 1102  *   This is the output cluster list of this device
// 1103  * @param       NumInClusters - number of input clusters
// 1104  * @param       InClusterList - input cluster ID list
// 1105  *
// 1106  *   The Output cluster list is the opposite of what you would think.
// 1107  *   This is the input cluster list of this device
// 1108  * @param       NumOutClusters - number of output clusters
// 1109  * @param       OutClusterList - output cluster ID list
// 1110  *
// 1111  * @param       SecurityEnable - Security Options
// 1112  *
// 1113  * @return      afStatus_t
// 1114  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1115 afStatus_t ZDP_EndDeviceBindReq( zAddrType_t *dstAddr,
ZDP_EndDeviceBindReq:
          CFI Block cfiBlock437 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
        CODE
// 1116                                  uint16 LocalCoordinator,
// 1117                                  byte endPoint,
// 1118                                  uint16 ProfileID,
// 1119                                  byte NumInClusters, cId_t *InClusterList,
// 1120                                  byte NumOutClusters, cId_t *OutClusterList,
// 1121                                  byte SecurityEnable )
// 1122 {
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V6,R2
        MOV     ?V7,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     ?V5,R1
// 1123   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V3,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V1,A
// 1124   uint8 i, len;
// 1125   uint8 *ieeeAddr;
// 1126 
// 1127   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1128 
// 1129   // LocalCoordinator + SrcExtAddr + ep + ProfileID +  NumInClusters + NumOutClusters.
// 1130   len = 2 + Z_EXTADDR_LEN + 1 + 2 + 1 + 1;
// 1131   len += (NumInClusters + NumOutClusters) * sizeof ( uint16 );
        MOV     A,?V4
        ADD     A,?V1
        CLR     C
        RLC     A
        ADD     A,#0xf
        MOV     ?V0,A
// 1132 
// 1133   if ( len >= ZDP_BUF_SZ-1 )
        CLR     C
        SUBB    A,#0x4f
        JC      ??ZDP_EndDeviceBindReq_0
// 1134   {
// 1135     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_EndDeviceBindReq_1 & 0xFFFF
// 1136   }
// 1137 
// 1138   if ( LocalCoordinator != NLME_GetShortAddr() )
??ZDP_EndDeviceBindReq_0:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     A,R2
        XRL     A,R6
        JNZ     ??ZDP_EndDeviceBindReq_2
        MOV     A,R3
        XRL     A,R7
??ZDP_EndDeviceBindReq_2:
        JZ      ??ZDP_EndDeviceBindReq_3
// 1139   {
// 1140     return afStatus_INVALID_PARAMETER;
        MOV     R1,#0x2
        LJMP    ??ZDP_EndDeviceBindReq_1 & 0xFFFF
// 1141   }
// 1142 
// 1143   *pBuf++ = LO_UINT16( LocalCoordinator );
??ZDP_EndDeviceBindReq_3:
        MOV     A,R6
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    @DPTR,A
// 1144   *pBuf++ = HI_UINT16( LocalCoordinator );
        MOV     A,R7
        INC     DPTR
        MOVX    @DPTR,A
// 1145 
// 1146   ieeeAddr = NLME_GetExtAddr();
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     R4,?V8
        MOV     R5,?V9
// 1147   pBuf = osal_cpyExtAddr( pBuf, ieeeAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,?V2
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        ADDC    A,?V3
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1148 
// 1149   *pBuf++ = endPoint;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V5
        MOVX    @DPTR,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
// 1150 
// 1151   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
// 1152   *pBuf++ = HI_UINT16( ProfileID );
// 1153 
// 1154   *pBuf++ = NumInClusters; // Input cluster list
??CrossCallReturnLabel_25:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V4
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x4
        MOV     ?V2,A
        CLR     A
        ADDC    A,R3
        MOV     ?V3,A
// 1155   for ( i = 0; i < NumInClusters; ++i )
        MOV     A,?V4
        JZ      ??ZDP_EndDeviceBindReq_4
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_316:
        MOV     R6,?V4
// 1156   {
// 1157     *pBuf++ = LO_UINT16(InClusterList[i]);
??ZDP_EndDeviceBindReq_5:
        LCALL   ?Subroutine19 & 0xFFFF
// 1158     *pBuf++ = HI_UINT16(InClusterList[i]);
// 1159   }
??CrossCallReturnLabel_21:
        JNC     ??ZDP_EndDeviceBindReq_6
        INC     ?V3
??ZDP_EndDeviceBindReq_6:
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        JNC     ??ZDP_EndDeviceBindReq_7
        INC     R1
??ZDP_EndDeviceBindReq_7:
        DEC     R6
        MOV     A,R6
        JNZ     ??ZDP_EndDeviceBindReq_5
// 1160 
// 1161   *pBuf++ = NumOutClusters; // Output cluster list
??ZDP_EndDeviceBindReq_4:
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOV     A,?V1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     ?V2,DPL
        MOV     ?V3,DPH
// 1162   for ( i = 0; i < NumOutClusters; ++i )
        JZ      ??ZDP_EndDeviceBindReq_8
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_317:
        MOV     R7,?V1
// 1163   {
// 1164     *pBuf++ = LO_UINT16(OutClusterList[i]);
??ZDP_EndDeviceBindReq_9:
        LCALL   ?Subroutine19 & 0xFFFF
// 1165     *pBuf++ = HI_UINT16(OutClusterList[i]);
// 1166   }
??CrossCallReturnLabel_22:
        JNC     ??ZDP_EndDeviceBindReq_10
        INC     ?V3
??ZDP_EndDeviceBindReq_10:
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        JNC     ??ZDP_EndDeviceBindReq_11
        INC     R1
??ZDP_EndDeviceBindReq_11:
        DEC     R7
        MOV     A,R7
        JNZ     ??ZDP_EndDeviceBindReq_9
// 1167 
// 1168   return fillAndSend( &ZDP_TransID, dstAddr, End_Device_Bind_req, len );
??ZDP_EndDeviceBindReq_8:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x20
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,?V0
        MOV     R4,?V6
        MOV     R5,?V7
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
??ZDP_EndDeviceBindReq_1:
        LJMP    ??Subroutine135_0 & 0xFFFF
// 1169 }
          CFI EndBlock cfiBlock437

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond438 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond439 Using cfiCommon0
          CFI (cfiCond439) Function ZDP_ServerDiscRsp
          CFI (cfiCond439) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond439) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond439) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond439) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond439) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond439) CFA_SP SP+-2
          CFI (cfiCond439) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond440 Using cfiCommon0
          CFI (cfiCond440) Function ZDP_EndDeviceBindReq
          CFI (cfiCond440) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond440) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond440) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond440) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond440) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond440) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond440) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond440) CFA_SP SP+-2
          CFI (cfiCond440) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function ZDP_BindUnbindReq
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond441) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond441) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond441) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-2
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker442 Using cfiCommon1
          CFI (cfiPicker442) NoFunction
          CFI (cfiPicker442) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_140:
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_166:
        MOVX    @DPTR,A
        RET
          CFI (cfiCond438) CFA_SP SP+0
          CFI (cfiCond439) CFA_SP SP+0
          CFI (cfiCond440) CFA_SP SP+0
          CFI (cfiCond441) CFA_SP SP+0
          CFI (cfiPicker442) CFA_SP SP+0
          CFI EndBlock cfiCond438
          CFI EndBlock cfiCond439
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiPicker442

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond443 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_21
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ZDP_EndDeviceBindReq
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-2
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker445 Using cfiCommon1
          CFI (cfiPicker445) NoFunction
          CFI (cfiPicker445) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_187:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,?V2
        ADD     A,#0x2
        MOV     ?V2,A
        RET
          CFI (cfiCond443) CFA_SP SP+0
          CFI (cfiCond444) CFA_SP SP+0
          CFI (cfiPicker445) CFA_SP SP+0
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiPicker445
// 1170 
// 1171 /*********************************************************************
// 1172  * @fn          ZDP_BindUnbindReq
// 1173  *
// 1174  * @brief       This builds and send a Bind_req or Unbind_req message
// 1175  *              Depending on the ClusterID. This function
// 1176  *              sends a unicast message to the local coordinator.
// 1177  *
// 1178  * @param       BindOrUnbind - either Bind_req or Unbind_req
// 1179  * @param       dstAddr - destination address of the message
// 1180  * @param       SourceAddr - source 64 bit address of the binding
// 1181  * @param       SrcEPIntf - Source endpoint/interface
// 1182  * @param       ClusterID - Binding cluster ID
// 1183  * @param       DestinationAddr - destination 64 bit addr of binding
// 1184  * @param       DstEPIntf - destination endpoint/interface
// 1185  * @param       SecurityEnable - Security Options
// 1186  *
// 1187  * @return      afStatus_t
// 1188  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1189 afStatus_t ZDP_BindUnbindReq( uint16 BindOrUnbind, zAddrType_t *dstAddr,
ZDP_BindUnbindReq:
          CFI Block cfiBlock446 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
        CODE
// 1190                               uint8 *SourceAddr, byte SrcEndPoint,
// 1191                               cId_t ClusterID,
// 1192                               zAddrType_t *destinationAddr, byte DstEndPoint,
// 1193                               byte SecurityEnable )
// 1194 {
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V6,R2
        MOV     ?V7,R3
        MOV     ?V4,R4
        MOV     ?V5,R5
        MOV     ?V3,R1
// 1195   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ??Subroutine129_0 & 0xFFFF
// 1196   byte len;
// 1197 
// 1198   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1199 
// 1200   // SourceAddr + SrcEPIntf + ClusterID +  addrMode.
// 1201   len = Z_EXTADDR_LEN + 1 + sizeof( cId_t ) + sizeof( uint8 );
??CrossCallReturnLabel_256:
        MOV     ?V2,#0xc
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine143_0 & 0xFFFF
// 1202   if ( destinationAddr->addrMode == Addr64Bit )
??CrossCallReturnLabel_284:
        MOV     A,R6
        ADD     A,#0x8
        MOV     ?V0,A
        CLR     A
        ADDC    A,R7
        MOV     ?V1,A
        MOV     DPL,?V0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDP_BindUnbindReq_0
// 1203     len += Z_EXTADDR_LEN + 1;     // +1 for DstEPIntf
        MOV     ?V2,#0x15
        SJMP    ??ZDP_BindUnbindReq_1
// 1204   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_0:
        MOV     A,#0x1
        XRL     A,R0
        JNZ     ??ZDP_BindUnbindReq_1
// 1205     len += sizeof ( uint16 );
        MOV     ?V2,#0xe
// 1206 
// 1207   pBuf = osal_cpyExtAddr( pBuf, SourceAddr );
??ZDP_BindUnbindReq_1:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1208   *pBuf++ = SrcEndPoint;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V3
        MOVX    @DPTR,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
// 1209 
// 1210   *pBuf++ = LO_UINT16( ClusterID );
// 1211 
// 1212   *pBuf++ = HI_UINT16( ClusterID );
// 1213   *pBuf++ = destinationAddr->addrMode;
??CrossCallReturnLabel_26:
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_292:
        JNC     ??ZDP_BindUnbindReq_2
        INC     R3
// 1214   if ( destinationAddr->addrMode == Addr64Bit )
??ZDP_BindUnbindReq_2:
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDP_BindUnbindReq_3
// 1215   {
// 1216     pBuf = osal_cpyExtAddr( pBuf, destinationAddr->addr.extAddr );
// 1217     *pBuf = DstEndPoint;
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,R2
        MOV     DPH,R3
        POP     A
          CFI CFA_SP SP+0
        SJMP    ??CrossCallReturnLabel_268
// 1218   }
// 1219   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_3:
        MOV     A,#0x1
        XRL     A,R0
        JNZ     ??ZDP_BindUnbindReq_4
// 1220   {
// 1221     *pBuf++ = LO_UINT16( destinationAddr->addr.shortAddr );
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine70 & 0xFFFF
// 1222     *pBuf++ = HI_UINT16( destinationAddr->addr.shortAddr );
??CrossCallReturnLabel_114:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ??Subroutine136_0 & 0xFFFF
// 1223   }
??CrossCallReturnLabel_268:
        MOVX    @DPTR,A
// 1224 
// 1225   FillAndSendTxOptions( &ZDP_TransID, dstAddr, BindOrUnbind, len, AF_MSG_ACK_REQUEST );
??ZDP_BindUnbindReq_4:
        MOV     DPTR,#ZDP_TxOptions
        MOV     A,#0x10
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,?V2
        MOV     R4,?V4
        MOV     R5,?V5
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R1
        MOV     R1,A
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        LJMP    ??Subroutine135_0 & 0xFFFF
// 1226 }
          CFI EndBlock cfiBlock446

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond447 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_269
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function ZDP_MgmtBindRsp
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond448) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond448) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond448) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond448) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond448) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-2
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker449 Using cfiCommon1
          CFI (cfiPicker449) NoFunction
          CFI (cfiPicker449) Picker
        MOV     DPL,R0
        MOV     DPH,R1
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiPicker449
        REQUIRE ??Subroutine136_0
        ; // Fall through to label ??Subroutine136_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine136_0:
          CFI Block cfiCond450 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_266
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function ZDP_SimpleDescMsg
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond451) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond451) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond451) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond451) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond451) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+-2
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function ZDP_BindUnbindReq
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond452) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond452) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond452) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond452) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond452) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond452) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+-2
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function ZDP_SimpleDescMsg
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-2
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function ZDP_MgmtBindRsp
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond454) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond454) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond454) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond454) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond454) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-2
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker455 Using cfiCommon1
          CFI (cfiPicker455) NoFunction
          CFI (cfiPicker455) Picker
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_273:
        RET
          CFI (cfiCond450) CFA_SP SP+0
          CFI (cfiCond451) CFA_SP SP+0
          CFI (cfiCond452) CFA_SP SP+0
          CFI (cfiCond453) CFA_SP SP+0
          CFI (cfiCond454) CFA_SP SP+0
          CFI (cfiPicker455) CFA_SP SP+0
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiPicker455
// 1227 
// 1228 /*********************************************************************
// 1229  * Network Management
// 1230  */
// 1231 
// 1232 /*********************************************************************
// 1233  * @fn          ZDP_MgmtNwkDiscReq
// 1234  *
// 1235  * @brief       This builds and send a Mgmt_NWK_Disc_req message. This
// 1236  *              function sends a unicast message.
// 1237  *
// 1238  * @param       dstAddr - destination address of the message
// 1239  * @param       ScanChannels - 32 bit address bit map
// 1240  * @param       StartIndex - Starting index within the reporting network
// 1241  *                           list
// 1242  * @param       SecurityEnable - Security Options
// 1243  *
// 1244  * @return      afStatus_t
// 1245  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1246 afStatus_t ZDP_MgmtNwkDiscReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscReq:
          CFI Block cfiBlock456 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscReq
        CODE
// 1247                                uint32 ScanChannels,
// 1248                                byte ScanDuration,
// 1249                                byte StartIndex,
// 1250                                byte SecurityEnable )
// 1251 {
        FUNCALL ZDP_MgmtNwkDiscReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R1
        MOV     ?V1,R4
// 1252   uint8 *pBuf = ZDP_TmpBuf;
// 1253   byte len = sizeof( uint32 )+1+1;  // ScanChannels + ScanDuration + StartIndex.
// 1254 
// 1255   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1256 
// 1257   pBuf = osal_buffer_uint32( pBuf, ScanChannels );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_257:
        LCALL   `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     DPL,R2
        MOV     DPH,R3
// 1258 
// 1259   *pBuf++ = ScanDuration;
        MOV     A,?V0
        MOVX    @DPTR,A
// 1260   *pBuf = StartIndex;
        INC     DPTR
        MOV     A,?V1
        MOVX    @DPTR,A
// 1261 
// 1262   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Disc_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x30
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R1,#0x6
        SJMP    ??Subroutine139_0
// 1263 }
          CFI EndBlock cfiBlock456

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock457 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 31)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_197:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
          CFI EndBlock cfiBlock457
        REQUIRE ??Subroutine137_0
        ; // Fall through to label ??Subroutine137_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine137_0:
          CFI Block cfiBlock458 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0xc
          CFI EndBlock cfiBlock458
        REQUIRE ??Subroutine138_0
        ; // Fall through to label ??Subroutine138_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine138_0:
          CFI Block cfiBlock459 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Valid
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock459
// 1264 
// 1265 /*********************************************************************
// 1266  * @fn          ZDP_MgmtDirectJoinReq
// 1267  *
// 1268  * @brief       This builds and send a Mgmt_Direct_Join_req message. This
// 1269  *              function sends a unicast message.
// 1270  *
// 1271  * @param       dstAddr - destination address of the message
// 1272  * @param       deviceAddr - 64 bit IEEE Address
// 1273  * @param       SecurityEnable - Security Options
// 1274  *
// 1275  * @return      afStatus_t
// 1276  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1277 afStatus_t ZDP_MgmtDirectJoinReq( zAddrType_t *dstAddr,
ZDP_MgmtDirectJoinReq:
          CFI Block cfiBlock460 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
        CODE
// 1278                                uint8 *deviceAddr,
// 1279                                byte capInfo,
// 1280                                byte SecurityEnable )
// 1281 {
        FUNCALL ZDP_MgmtDirectJoinReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtDirectJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL   ?Subroutine69 & 0xFFFF
// 1282   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1283 
// 1284   osal_cpyExtAddr( ZDP_TmpBuf, deviceAddr );
??CrossCallReturnLabel_246:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1285   ZDP_TmpBuf[Z_EXTADDR_LEN] = capInfo;
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_335:
        XCH     A,R0
        ADD     A,#0x8
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOV     A,?V0
        MOVX    @DPTR,A
// 1286 
// 1287   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Direct_Join_req, (Z_EXTADDR_LEN + 1) );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x35
          CFI EndBlock cfiBlock460
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
// 1288 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock461 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R1,#0x9
          CFI EndBlock cfiBlock461
        REQUIRE ??Subroutine139_0
        ; // Fall through to label ??Subroutine139_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine139_0:
          CFI Block cfiBlock462 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        SJMP    ??Subroutine138_0
          CFI EndBlock cfiBlock462
// 1289 
// 1290 /*********************************************************************
// 1291  * @fn          ZDP_MgmtPermitJoinReq
// 1292  *
// 1293  * @brief       This builds and send a Mgmt_Permit_Join_req message.
// 1294  *
// 1295  * @param       dstAddr - destination address of the message
// 1296  * @param       duration - Permit duration
// 1297  * @param       TcSignificance - Trust Center Significance
// 1298  *
// 1299  * @return      afStatus_t
// 1300  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1301 afStatus_t ZDP_MgmtPermitJoinReq( zAddrType_t *dstAddr, byte duration,
ZDP_MgmtPermitJoinReq:
          CFI Block cfiBlock463 Using cfiCommon0
          CFI Function ZDP_MgmtPermitJoinReq
        CODE
// 1302                                   byte TcSignificance, byte SecurityEnable )
// 1303 {
        FUNCALL ZDP_MgmtPermitJoinReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtPermitJoinReq, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        LCALL   ?Subroutine60 & 0xFFFF
// 1304   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1305 
// 1306   // Build buffer
// 1307   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION] = duration;
??CrossCallReturnLabel_275:
        MOV     A,R1
        MOVX    @DPTR,A
// 1308   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG]   = TcSignificance;
        LCALL   ??Subroutine140_0 & 0xFFFF
??CrossCallReturnLabel_278:
        LCALL   ?Subroutine12 & 0xFFFF
// 1309 
// 1310   // Send the message
// 1311   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Permit_Join_req,
// 1312                       ZDP_MGMT_PERMIT_JOIN_REQ_SIZE );
??CrossCallReturnLabel_217:
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_8:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_181:
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_101:
        LCALL   ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_185:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V4,#ZDP_TransID & 0xff
        MOV     ?V5,#(ZDP_TransID >> 8) & 0xff
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V2,#0x3
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     ?V2,#0x36
        LJMP    ?Subroutine6 & 0xFFFF
// 1313 }
          CFI EndBlock cfiBlock463

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond464 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond465) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-2
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker466 Using cfiCommon1
          CFI (cfiPicker466) NoFunction
          CFI (cfiPicker466) Picker
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_328:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
          CFI (cfiCond464) CFA_SP SP+0
          CFI (cfiCond465) CFA_SP SP+0
          CFI (cfiPicker466) CFA_SP SP+0
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiPicker466

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond467 Using cfiCommon0
          CFI Function ZDP_GenericRsp
          CFI Conditional ??CrossCallReturnLabel_274
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-2
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker469 Using cfiCommon1
          CFI (cfiPicker469) NoFunction
          CFI (cfiPicker469) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiPicker469
        REQUIRE ??Subroutine140_0
        ; // Fall through to label ??Subroutine140_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine140_0:
          CFI Block cfiCond470 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_277
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond471) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond471) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+-2
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDP_MgmtLqiRsp
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-2
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ZDP_GenericRsp
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-2
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+-2
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker475 Using cfiCommon1
          CFI (cfiPicker475) NoFunction
          CFI (cfiPicker475) Picker
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiPicker475
        REQUIRE ??Subroutine141_0
        ; // Fall through to label ??Subroutine141_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine141_0:
          CFI Block cfiCond476 Using cfiCommon0
          CFI Function ZDP_IncomingData
          CFI Conditional ??CrossCallReturnLabel_276
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function ZDP_DeviceAnnce
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-2
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-2
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function ZDP_MgmtLqiRsp
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond479) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond479) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond479) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond479) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond479) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-2
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function ZDP_GenericRsp
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-2
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-2
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker482 Using cfiCommon1
          CFI (cfiPicker482) NoFunction
          CFI (cfiPicker482) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI (cfiCond476) CFA_SP SP+0
          CFI (cfiCond477) CFA_SP SP+0
          CFI (cfiCond478) CFA_SP SP+0
          CFI (cfiCond479) CFA_SP SP+0
          CFI (cfiCond480) CFA_SP SP+0
          CFI (cfiCond481) CFA_SP SP+0
          CFI (cfiPicker482) CFA_SP SP+0
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiPicker482
// 1314 
// 1315 /*********************************************************************
// 1316  * @fn          ZDP_MgmtLeaveReq
// 1317  *
// 1318  * @brief       This builds and send a Mgmt_Leave_req message.
// 1319  *
// 1320  * @param       dstAddr - destination address of the message
// 1321  *              IEEEAddr - IEEE adddress of device that is removed
// 1322  *              RemoveChildren - set to 1 to remove the children of the
// 1323  *                                device as well. 0 otherwise.
// 1324  *              Rejoin - set to 1 if the removed device should rejoin
// 1325                          afterwards. 0 otherwise.
// 1326  *
// 1327  * @return      afStatus_t
// 1328  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1329 afStatus_t ZDP_MgmtLeaveReq( zAddrType_t *dstAddr, uint8 *IEEEAddr, uint8 RemoveChildren,
ZDP_MgmtLeaveReq:
          CFI Block cfiBlock483 Using cfiCommon0
          CFI Function ZDP_MgmtLeaveReq
        CODE
// 1330                  uint8 Rejoin, uint8 SecurityEnable )
// 1331 
// 1332 {
        FUNCALL ZDP_MgmtLeaveReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLeaveReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL   ?Subroutine69 & 0xFFFF
// 1333   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1334 
// 1335   osal_cpyExtAddr( ZDP_TmpBuf, IEEEAddr );
??CrossCallReturnLabel_247:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1336   ZDP_TmpBuf[Z_EXTADDR_LEN] = 0;
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        ADD     A,#0x8
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
// 1337 
// 1338   if ( RemoveChildren == TRUE )
        INC     A
        XRL     A,?V0
        JNZ     ??ZDP_MgmtLeaveReq_0
// 1339   {
// 1340     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_RC;
        MOV     A,#0x40
        MOVX    @DPTR,A
// 1341   }
// 1342   if ( Rejoin == TRUE )
??ZDP_MgmtLeaveReq_0:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??ZDP_MgmtLeaveReq_1
// 1343   {
// 1344     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_REJOIN;
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.7
        MOVX    @DPTR,A
// 1345   }
// 1346 
// 1347   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Leave_req, (Z_EXTADDR_LEN + 1) );
??ZDP_MgmtLeaveReq_1:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x34
        LJMP    ?Subroutine8 & 0xFFFF
// 1348 }
          CFI EndBlock cfiBlock483
// 1349 
// 1350 /*********************************************************************
// 1351  * @fn          ZDP_MgmtNwkUpdateReq
// 1352  *
// 1353  * @brief       This builds and send a Mgmt_NWK_Update_req message. This
// 1354  *              function sends a unicast or broadcast message.
// 1355  *
// 1356  * @param       dstAddr - destination address of the message
// 1357  * @param       ChannelMask - 32 bit address bit map
// 1358  * @param       ScanDuration - length of time to spend scanning each channel
// 1359  * @param       ScanCount - number of energy scans to be conducted
// 1360  * @param       NwkUpdateId - NWk Update Id value
// 1361  * @param       NwkManagerAddr - NWK address for device with Network Manager
// 1362  *                               bit set in its Node Descriptor
// 1363  *
// 1364  * @return      afStatus_t
// 1365  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1366 afStatus_t ZDP_MgmtNwkUpdateReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateReq:
          CFI Block cfiBlock484 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateReq
        CODE
// 1367                                  uint32 ChannelMask,
// 1368                                  uint8 ScanDuration,
// 1369                                  uint8 ScanCount,
// 1370                                  uint8 NwkUpdateId,
// 1371                                  uint16 NwkManagerAddr )
// 1372 {
        FUNCALL ZDP_MgmtNwkUpdateReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     A,R1
        MOV     R7,A
        MOV     ?V2,R4
        MOV     ?V3,R5
// 1373   uint8 *pBuf = ZDP_TmpBuf;
// 1374   byte len = sizeof( uint32 ) + 1;  // ChannelMask + ScanDuration
        MOV     R6,#0x5
// 1375 
// 1376   pBuf = osal_buffer_uint32( pBuf, ChannelMask );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_258:
        LCALL   `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
// 1377 
// 1378   *pBuf++ = ScanDuration;
        MOV     A,R7
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
// 1379 
// 1380   if ( ScanDuration <= 0x05 )
        CLR     C
        SUBB    A,#0x6
        JNC     ??ZDP_MgmtNwkUpdateReq_0
// 1381   {
// 1382     // Request is to scan over channelMask
// 1383     len += sizeof( uint8 );
        MOV     R6,#0x6
// 1384 
// 1385     *pBuf++ = ScanCount;
        INC     DPTR
        MOV     A,?V2
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x2
        JNC     ??ZDP_MgmtNwkUpdateReq_1
        SJMP    ??ZDP_MgmtNwkUpdateReq_1
// 1386   }
// 1387   else if ( ( ScanDuration == 0xFE ) || ( ScanDuration == 0xFF ) )
??ZDP_MgmtNwkUpdateReq_0:
        MOV     A,#-0x2
        XRL     A,R7
        JZ      ??ZDP_MgmtNwkUpdateReq_2
        MOV     A,#-0x1
        XRL     A,R7
        JNZ     ??ZDP_MgmtNwkUpdateReq_1
// 1388   {
// 1389     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 1390     len += sizeof( uint8 );
??ZDP_MgmtNwkUpdateReq_2:
        MOV     R6,#0x6
// 1391 
// 1392     *pBuf++ = NwkUpdateId;
        INC     DPTR
        MOV     A,?V3
        MOVX    @DPTR,A
// 1393 
// 1394     if ( ScanDuration == 0xFF )
        MOV     A,#-0x1
        XRL     A,R7
        JNZ     ??ZDP_MgmtNwkUpdateReq_1
// 1395     {
// 1396       len += sizeof( uint16 );
        MOV     R6,#0x8
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
// 1397 
// 1398       *pBuf++  = LO_UINT16( NwkManagerAddr );
// 1399       *pBuf++  = HI_UINT16( NwkManagerAddr );
// 1400     }
// 1401   }
??CrossCallReturnLabel_75:
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x4
// 1402 
// 1403   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Update_req, len );
??ZDP_MgmtNwkUpdateReq_1:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V4,#0x38
        MOV     ?V5,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R6
        MOV     R1,A
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LJMP    ??Subroutine119_0 & 0xFFFF
// 1404 }
          CFI EndBlock cfiBlock484
// 1405 
// 1406 
// 1407 /*********************************************************************
// 1408  * Network Management Responses
// 1409  */
// 1410 
// 1411 /*********************************************************************
// 1412  * @fn          ZDP_MgmtNwkDiscRsp
// 1413  *
// 1414  * @brief       This builds and send a Mgmt_NWK_Disc_rsp message. This
// 1415  *              function sends a unicast message.
// 1416  *
// 1417  * @param       dstAddr - destination address of the message
// 1418  * @param       Status - message status (ZDP_SUCCESS or other)
// 1419  * @param       NetworkCount - Total number of networks found
// 1420  * @param       StartIndex - Starting index within the reporting network
// 1421  *                           list
// 1422  * @param       NetworkListCount - number of network lists included
// 1423  *                                 in this message
// 1424  * @param       NetworkList - List of network descriptors
// 1425  * @param       SecurityEnable - Security Options
// 1426  *
// 1427  * @return      afStatus_t
// 1428  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1429 afStatus_t ZDP_MgmtNwkDiscRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscRsp:
          CFI Block cfiBlock485 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
        CODE
// 1430                             byte Status,
// 1431                             byte NetworkCount,
// 1432                             byte StartIndex,
// 1433                             byte NetworkListCount,
// 1434                             networkDesc_t *NetworkList,
// 1435                             byte SecurityEnable )
// 1436 {
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V10,R2
        MOV     ?V11,R3
        MOV     ?V9,R4
        MOV     ?V8,R5
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0,A
// 1437   uint8 *buf;
// 1438   uint8 *pBuf;
// 1439   byte len = 1+1+1+1;  // Status + NetworkCount + StartIndex + NetworkCountList.
// 1440   byte idx;
// 1441 
// 1442   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1443 
// 1444   len += (NetworkListCount * ( ZDP_NETWORK_EXTENDED_DISCRIPTOR_SIZE - 2 ));
        MOV     B,#0xc
        LCALL   ?Subroutine76 & 0xFFFF
// 1445 
// 1446   buf = osal_mem_alloc( len+1 );
??CrossCallReturnLabel_300:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
// 1447   if ( buf == NULL )
        MOV     A,R2
        ORL     A,?V5
        JNZ     ??ZDP_MgmtNwkDiscRsp_0
// 1448   {
// 1449     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??CrossCallReturnLabel_59 & 0xFFFF
// 1450   }
// 1451 
// 1452   pBuf = buf+1;
??ZDP_MgmtNwkDiscRsp_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     ?V6,DPL
        MOV     ?V7,DPH
        MOV     R6,?V6
        MOV     R7,?V7
// 1453 
// 1454   *pBuf++ = Status;
        MOV     A,?V9
        MOVX    @DPTR,A
// 1455   *pBuf++ = NetworkCount;
        INC     DPTR
        MOV     A,?V8
        MOVX    @DPTR,A
// 1456   *pBuf++ = StartIndex;
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_121:
        INC     DPTR
        LCALL   ?Subroutine50 & 0xFFFF
// 1457   *pBuf++ = NetworkListCount;
??CrossCallReturnLabel_79:
        MOV     A,?V0
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDP_MgmtNwkDiscRsp_1
        INC     R7
// 1458 
// 1459   for ( idx = 0; idx < NetworkListCount; idx++ )
??ZDP_MgmtNwkDiscRsp_1:
        MOV     A,?V0
        JNZ     $+5
        LJMP    ??ZDP_MgmtNwkDiscRsp_2 & 0xFFFF
        MOV     ?V2,A
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine65 & 0xFFFF
// 1460   {
// 1461     osal_cpyExtAddr( pBuf, NetworkList->extendedPANID);
??CrossCallReturnLabel_102:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,?V0
        ADD     A,#0xb
        MOV     R4,A
        CLR     A
        ADDC    A,?V1
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1462     pBuf += Z_EXTADDR_LEN;
// 1463 
// 1464     *pBuf++  = NetworkList->logicalChannel;                // LogicalChannel
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_118:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine49 & 0xFFFF
// 1465     *pBuf    = NetworkList->stackProfile;                  // Stack profile
??CrossCallReturnLabel_77:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_282:
        LCALL   ?Subroutine36 & 0xFFFF
// 1466     *pBuf++ |= (byte)(NetworkList->version << 4);          // ZigBee Version
??CrossCallReturnLabel_55:
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ORL     A,R2
        LCALL   ?Subroutine50 & 0xFFFF
// 1467     *pBuf    = BEACON_ORDER_NO_BEACONS;                    // Beacon Order
// 1468     *pBuf++ |= (uint8)(BEACON_ORDER_NO_BEACONS << 4);      // Superframe Order
??CrossCallReturnLabel_80:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
// 1469 
// 1470     if ( NetworkList->chosenRouter != INVALID_NODE_ADDR )
        MOV     A,R6
        ADD     A,#0xc
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     A,R6
        ADD     A,#0xb
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xfe
        JNZ     ??ZDP_MgmtNwkDiscRsp_3
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
??ZDP_MgmtNwkDiscRsp_3:
        MOV     DPL,R2
        MOV     DPH,R3
        JZ      ??ZDP_MgmtNwkDiscRsp_4
// 1471     {
// 1472       *pBuf++ = TRUE;                         // Permit Joining
        MOV     A,#0x1
        SJMP    ??ZDP_MgmtNwkDiscRsp_5
// 1473     }
// 1474     else
// 1475     {
// 1476       *pBuf++ = FALSE;
??ZDP_MgmtNwkDiscRsp_4:
        CLR     A
??ZDP_MgmtNwkDiscRsp_5:
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 1477     }
// 1478 
// 1479     NetworkList = NetworkList->nextDesc;    // Move to next list entry
        MOV     A,?V0
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        MOV     DPH,A
        LCALL   ?Subroutine65 & 0xFFFF
// 1480   }
??CrossCallReturnLabel_103:
        DEC     ?V2
        MOV     A,?V2
        JZ      $+5
        LJMP    ??CrossCallReturnLabel_102 & 0xFFFF
// 1481 
// 1482   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_NWK_Disc_rsp, len, buf );
??ZDP_MgmtNwkDiscRsp_2:
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,?V6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V7
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x30
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R1,?V3
        MOV     R4,?V10
        MOV     R5,?V11
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R1
        MOV     R6,A
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V4
        MOV     R3,?V5
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_59:
          CFI EndBlock cfiBlock485
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 1483 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock486 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
          CFI VB SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndBlock cfiBlock486

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond487 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_119
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function ZDP_NodeDescMsg
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-2
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond489) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond489) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond489) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond489) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond489) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-2
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker490 Using cfiCommon1
          CFI (cfiPicker490) NoFunction
          CFI (cfiPicker490) Picker
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_172:
        INC     DPTR
        RET
          CFI (cfiCond487) CFA_SP SP+0
          CFI (cfiCond488) CFA_SP SP+0
          CFI (cfiCond489) CFA_SP SP+0
          CFI (cfiPicker490) CFA_SP SP+0
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiPicker490

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond491 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_170
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function ZDP_NodeDescMsg
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+-2
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function ZDP_NodeDescMsg
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_172, ??CrossCallReturnLabel_119
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+-4
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function ZDP_NodeDescMsg
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_172, ??CrossCallReturnLabel_120
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-4
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_172, ??CrossCallReturnLabel_121
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-4
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function ZDP_NodeDescMsg
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_88
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-6
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function ZDP_NodeDescMsg
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_89
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-6
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function ZDP_NodeDescMsg
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_117
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+-6
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_118
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-6
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker500 Using cfiCommon1
          CFI (cfiPicker500) NoFunction
          CFI (cfiPicker500) Picker
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI (cfiCond491) CFA_SP SP+0
          CFI (cfiCond492) CFA_SP SP+0
          CFI (cfiCond493) CFA_SP SP+-2
          CFI (cfiCond494) CFA_SP SP+-2
          CFI (cfiCond495) CFA_SP SP+-2
          CFI (cfiCond496) CFA_SP SP+-4
          CFI (cfiCond497) CFA_SP SP+-4
          CFI (cfiCond498) CFA_SP SP+-4
          CFI (cfiCond499) CFA_SP SP+-4
          CFI (cfiPicker500) CFA_SP SP+0
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiPicker500

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond501 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_117
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-2
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker503 Using cfiCommon1
          CFI (cfiPicker503) NoFunction
          CFI (cfiPicker503) Picker
        INC     DPTR
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_155:
        RET
          CFI (cfiCond501) CFA_SP SP+0
          CFI (cfiCond502) CFA_SP SP+0
          CFI (cfiPicker503) CFA_SP SP+0
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiPicker503

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond504 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_88
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function ZDP_NodeDescMsg
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_89
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-4
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function ZDP_NodeDescMsg
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_117
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+-4
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_118
          CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond507) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond507) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond507) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond507) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond507) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond507) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond507) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond507) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond507) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond507) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond507) CFA_SP SP+-4
          CFI (cfiCond507) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker508 Using cfiCommon1
          CFI (cfiPicker508) NoFunction
          CFI (cfiPicker508) Picker
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_173:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond504) CFA_SP SP+-2
          CFI (cfiCond505) CFA_SP SP+-2
          CFI (cfiCond506) CFA_SP SP+-2
          CFI (cfiCond507) CFA_SP SP+-2
          CFI (cfiPicker508) CFA_SP SP+0
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiPicker508

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond509 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_79
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond510) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-2
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker511 Using cfiCommon1
          CFI (cfiPicker511) NoFunction
          CFI (cfiPicker511) Picker
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_163:
        RET
          CFI (cfiCond509) CFA_SP SP+0
          CFI (cfiCond510) CFA_SP SP+0
          CFI (cfiPicker511) CFA_SP SP+0
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiPicker511

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond512 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond513 Using cfiCommon0
          CFI (cfiCond513) Function ZDP_SendData
          CFI (cfiCond513) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_1
          CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond513) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond513) CFA_SP SP+-4
          CFI (cfiCond513) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_3
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+-4
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDP_SimpleDescReq
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_4
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-4
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function ZDP_NodeDescMsg
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_5
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+-4
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function ZDP_PowerDescMsg
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_6
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-4
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDP_ServerDiscRsp
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_2
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-4
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function ZDP_GenericRsp
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_7
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-4
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_8
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-4
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_79
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-4
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_80
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-4
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker523 Using cfiCommon1
          CFI (cfiPicker523) NoFunction
          CFI (cfiPicker523) Picker
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_180:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond512) CFA_SP SP+-2
          CFI (cfiCond513) CFA_SP SP+-2
          CFI (cfiCond514) CFA_SP SP+-2
          CFI (cfiCond515) CFA_SP SP+-2
          CFI (cfiCond516) CFA_SP SP+-2
          CFI (cfiCond517) CFA_SP SP+-2
          CFI (cfiCond518) CFA_SP SP+-2
          CFI (cfiCond519) CFA_SP SP+-2
          CFI (cfiCond520) CFA_SP SP+-2
          CFI (cfiCond521) CFA_SP SP+-2
          CFI (cfiCond522) CFA_SP SP+-2
          CFI (cfiPicker523) CFA_SP SP+0
          CFI EndBlock cfiCond512
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiPicker523

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond524 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_56
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-2
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker526 Using cfiCommon1
          CFI (cfiPicker526) NoFunction
          CFI (cfiPicker526) Picker
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_160:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond524) CFA_SP SP+0
          CFI (cfiCond525) CFA_SP SP+0
          CFI (cfiPicker526) CFA_SP SP+0
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiPicker526
// 1484 
// 1485 /*********************************************************************
// 1486  * @fn          ZDP_MgmtLqiRsp
// 1487  *
// 1488  * @brief       This builds and send a Mgmt_Lqi_rsp message. This
// 1489  *              function sends a unicast message.
// 1490  *
// 1491  * @param       dstAddr - destination address of the message
// 1492  * @param       Status - message status (ZDP_SUCCESS or other)
// 1493  * @param       NeighborLqiEntries - Total number of entries found
// 1494  * @param       StartIndex - Starting index within the reporting list
// 1495  * @param       NeighborLqiCount - number of lists included
// 1496  *                                 in this message
// 1497  * @param       NeighborLqiList - List of NeighborLqiItems.  This list
// 1498  *                is the list to be sent, not the entire list
// 1499  * @param       SecurityEnable - true if secure
// 1500  *
// 1501  * @return      ZStatus_t
// 1502  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1503 ZStatus_t ZDP_MgmtLqiRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtLqiRsp:
          CFI Block cfiBlock527 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
        CODE
// 1504                           byte Status,
// 1505                           byte NeighborLqiEntries,
// 1506                           byte StartIndex,
// 1507                           byte NeighborLqiCount,
// 1508                           ZDP_MgmtLqiItem_t* NeighborList,
// 1509                           byte SecurityEnable )
// 1510 {
        FUNCALL ZDP_MgmtLqiRsp, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        MOV     A,#-0x15
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
        ; Saved register size: 21
        ; Auto size: 13
        MOV     A,#-0xd
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V12,R5
// 1511   ZDP_MgmtLqiItem_t* list = NeighborList;
        MOV     A,#0x24
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine143_0 & 0xFFFF
// 1512   uint8 *buf, *pBuf;
// 1513   byte len, x;
// 1514 
// 1515   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1516 
// 1517   if ( ZSuccess != Status )
??CrossCallReturnLabel_285:
        MOV     A,R4
        JNZ     $+5
        LJMP    ??ZDP_MgmtLqiRsp_0 & 0xFFFF
// 1518   {
// 1519     ZDP_TmpBuf[0] = Status;
        LCALL   ??Subroutine140_0 & 0xFFFF
// 1520     return fillAndSend( &TransSeq, dstAddr, Mgmt_Lqi_rsp, 1 );
// 1521   }
??CrossCallReturnLabel_279:
        MOV     A,R4
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_72:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     DPL,?V4
        MOV     DPH,?V5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_46:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_64:
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_212:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_211:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     ?V0,#0x2
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     ?V0,#0x31
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 43)
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_92:
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 34)
        LJMP    ??CrossCallReturnLabel_60 & 0xFFFF
??ZDP_MgmtLqiRsp_0:
        MOV     A,#0x23
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V11,A
// 1522 
// 1523   // (Status + NeighborLqiEntries + StartIndex + NeighborLqiCount) +
// 1524   //  neighbor LQI data.
// 1525   len = (1 + 1 + 1 + 1) + (NeighborLqiCount * ZDP_MGMTLQI_EXTENDED_SIZE);
        MOV     B,#0x16
        MUL     AB
        ADD     A,#0x4
        MOV     ?V9,A
// 1526 
// 1527   buf = osal_mem_alloc( len+1 );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine147_0 & 0xFFFF
??CrossCallReturnLabel_302:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 1528   if ( buf == NULL )
        MOV     A,R2
        ORL     A,?V3
        JNZ     ??ZDP_MgmtLqiRsp_1
// 1529   {
// 1530     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??CrossCallReturnLabel_60 & 0xFFFF
// 1531   }
// 1532 
// 1533   pBuf = buf+1;
??ZDP_MgmtLqiRsp_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     ?V6,DPL
        MOV     ?V7,DPH
        MOV     ?V0,?V6
        MOV     ?V1,?V7
// 1534 
// 1535   *pBuf++ = Status;
        CLR     A
        MOVX    @DPTR,A
// 1536   *pBuf++ = NeighborLqiEntries;
        INC     DPTR
        MOV     A,?V12
        MOVX    @DPTR,A
// 1537   *pBuf++ = StartIndex;
        MOV     A,#0x22
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        LCALL   ?Subroutine45 & 0xFFFF
// 1538   *pBuf++ = NeighborLqiCount;
??CrossCallReturnLabel_74:
        INC     DPTR
        MOV     A,?V11
        MOVX    @DPTR,A
        MOV     A,?V0
        ADD     A,#0x4
        MOV     ?V0,A
        JNC     ??ZDP_MgmtLqiRsp_2
        INC     ?V1
// 1539 
// 1540   for ( x = 0; x < NeighborLqiCount; x++ )
??ZDP_MgmtLqiRsp_2:
        MOV     A,?V11
        JNZ     $+5
        LJMP    ??ZDP_MgmtLqiRsp_3 & 0xFFFF
        MOV     ?V8,A
// 1541   {
// 1542     osal_cpyExtAddr( pBuf, list->extPanID);         // Extended PanID
??ZDP_MgmtLqiRsp_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1543     pBuf += Z_EXTADDR_LEN;
// 1544 
// 1545     // EXTADDR
// 1546     pBuf = osal_cpyExtAddr( pBuf, list->extAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        ADD     A,#0xa
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     A,?V0
        ADD     A,#0x8
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1547 
// 1548     // NWKADDR
// 1549     *pBuf++ = LO_UINT16( list->nwkAddr );
        MOV     A,R6
        ADD     A,#0x12
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_295:
        LCALL   ?Subroutine34 & 0xFFFF
// 1550     *pBuf++ = HI_UINT16( list->nwkAddr );
??CrossCallReturnLabel_53:
        LCALL   ?Subroutine105 & 0xFFFF
// 1551 
// 1552     // DEVICETYPE
// 1553     *pBuf = list->devType;
??CrossCallReturnLabel_165:
        MOV     A,R6
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        LCALL   ??Subroutine142_0 & 0xFFFF
??CrossCallReturnLabel_280:
        MOVX    @DPTR,A
// 1554 
// 1555     // RXONIDLE
// 1556     *pBuf |= (uint8)(list->rxOnIdle << 2);
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        RLC     A
        RLC     A
        ANL     A,#0xfc
        MOV     R4,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ORL     A,R4
        MOVX    @DPTR,A
// 1557 
// 1558     // RELATIONSHIP
// 1559     *pBuf++ |= (uint8)(list->relation << 4);
        MOV     A,R6
        ADD     A,#0x16
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        MOV     R4,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ORL     A,R4
        MOVX    @DPTR,A
// 1560 
// 1561     // PERMITJOINING
// 1562     *pBuf++ = (uint8)(list->permit);
        MOV     A,R6
        ADD     A,#0x17
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        LCALL   ?Subroutine71 & 0xFFFF
// 1563 
// 1564     // DEPTH
// 1565     *pBuf++ = list->depth;
??CrossCallReturnLabel_115:
        MOV     A,R6
        ADD     A,#0x18
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        LCALL   ?Subroutine67 & 0xFFFF
// 1566 
// 1567     // LQI
// 1568     *pBuf++ = list->lqi;
??CrossCallReturnLabel_107:
        MOV     A,R6
        ADD     A,#0x19
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_106:
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x6
        MOV     ?V0,A
        CLR     A
        ADDC    A,R3
        MOV     ?V1,A
// 1569 
// 1570     list++; // next list entry
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        JNC     ??ZDP_MgmtLqiRsp_5
        INC     R7
// 1571   }
??ZDP_MgmtLqiRsp_5:
        DEC     ?V8
        MOV     A,?V8
        JZ      $+5
        LJMP    ??ZDP_MgmtLqiRsp_4 & 0xFFFF
// 1572 
// 1573   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Lqi_rsp, len, buf );
??ZDP_MgmtLqiRsp_3:
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,?V6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V7
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x31
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     R1,?V9
        MOV     R4,?V4
        MOV     R5,?V5
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     A,R1
        MOV     R6,A
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V2
        MOV     R3,?V3
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_60:
        MOV     A,#0xd
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R7,#0xd
        LJMP    ?BANKED_LEAVE_XDATA
          CFI R6 SameValue
          CFI VB SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI R7 SameValue
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
// 1574 }
          CFI EndBlock cfiBlock527

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond528 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_17
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function ZDP_PowerDescMsg
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_18
          CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond529) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond529) CFA_SP SP+-4
          CFI (cfiCond529) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ZDP_MgmtLqiRsp
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-2
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker531 Using cfiCommon1
          CFI (cfiPicker531) NoFunction
          CFI (cfiPicker531) Picker
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x2
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
        RET
          CFI (cfiCond528) CFA_SP SP+-2
          CFI (cfiCond529) CFA_SP SP+-2
          CFI (cfiCond530) CFA_SP SP+0
          CFI (cfiPicker531) CFA_SP SP+0
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiPicker531

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond532 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function ZDP_MatchDescReq
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_32
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-4
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-2
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker535 Using cfiCommon1
          CFI (cfiPicker535) NoFunction
          CFI (cfiPicker535) Picker
        INC     DPTR
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiPicker535
        REQUIRE ??Subroutine142_0
        ; // Fall through to label ??Subroutine142_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine142_0:
          CFI Block cfiCond536 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function ZDP_MatchDescReq
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_32
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-4
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function ZDP_MgmtLqiRsp
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-2
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ZDP_MatchDescReq
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_31
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-4
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ZDP_MatchDescReq
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_32
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-4
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond541) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond541) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond541) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond541) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-2
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker542 Using cfiCommon1
          CFI (cfiPicker542) NoFunction
          CFI (cfiPicker542) Picker
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI (cfiCond536) CFA_SP SP+-2
          CFI (cfiCond537) CFA_SP SP+-2
          CFI (cfiCond538) CFA_SP SP+0
          CFI (cfiCond539) CFA_SP SP+-2
          CFI (cfiCond540) CFA_SP SP+-2
          CFI (cfiCond541) CFA_SP SP+0
          CFI (cfiPicker542) CFA_SP SP+0
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiPicker542

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond543 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_207
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function ZDP_DeviceAnnce
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_209
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+-4
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function ZDP_EndDeviceTimeoutReq
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_208
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-4
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDP_MgmtLqiRsp
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-2
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker547 Using cfiCommon1
          CFI (cfiPicker547) NoFunction
          CFI (cfiPicker547) Picker
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     ?V1,A
        RET
          CFI (cfiCond543) CFA_SP SP+-2
          CFI (cfiCond544) CFA_SP SP+-2
          CFI (cfiCond545) CFA_SP SP+-2
          CFI (cfiCond546) CFA_SP SP+0
          CFI (cfiPicker547) CFA_SP SP+0
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiPicker547

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond548 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_105
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function ZDP_MgmtLqiRsp
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-2
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker550 Using cfiCommon1
          CFI (cfiPicker550) NoFunction
          CFI (cfiPicker550) Picker
        MOV     DPH,A
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_148:
        RET
          CFI (cfiCond548) CFA_SP SP+0
          CFI (cfiCond549) CFA_SP SP+0
          CFI (cfiPicker550) CFA_SP SP+0
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiPicker550

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond551 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_29
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ZDP_SimpleDescMsg
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_30
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-4
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ZDP_SimpleDescMsg
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_105
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-4
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function ZDP_MgmtLqiRsp
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_106
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-4
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker555 Using cfiCommon1
          CFI (cfiPicker555) NoFunction
          CFI (cfiPicker555) Picker
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_176:
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond551) CFA_SP SP+-2
          CFI (cfiCond552) CFA_SP SP+-2
          CFI (cfiCond553) CFA_SP SP+-2
          CFI (cfiCond554) CFA_SP SP+-2
          CFI (cfiPicker555) CFA_SP SP+0
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiPicker555

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond556 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_73
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ZDP_MgmtLqiRsp
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond557) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond557) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-2
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker558 Using cfiCommon1
          CFI (cfiPicker558) NoFunction
          CFI (cfiPicker558) Picker
        INC     DPTR
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_161:
        RET
          CFI (cfiCond556) CFA_SP SP+0
          CFI (cfiCond557) CFA_SP SP+0
          CFI (cfiPicker558) CFA_SP SP+0
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiPicker558

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond559 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_160, ??CrossCallReturnLabel_56
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_160, ??CrossCallReturnLabel_55
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond560) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond560) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond560) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-4
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDP_UserDescSet
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_73
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-4
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDP_MgmtLqiRsp
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_161, ??CrossCallReturnLabel_74
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-4
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker563 Using cfiCommon1
          CFI (cfiPicker563) NoFunction
          CFI (cfiPicker563) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond559) CFA_SP SP+-2
          CFI (cfiCond560) CFA_SP SP+-2
          CFI (cfiCond561) CFA_SP SP+-2
          CFI (cfiCond562) CFA_SP SP+-2
          CFI (cfiPicker563) CFA_SP SP+0
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiPicker563

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond564 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_71
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDP_MgmtLqiRsp
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-2
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker566 Using cfiCommon1
          CFI (cfiPicker566) NoFunction
          CFI (cfiPicker566) Picker
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_226:
        MOV     A,#0x1
        RET
          CFI (cfiCond564) CFA_SP SP+0
          CFI (cfiCond565) CFA_SP SP+0
          CFI (cfiPicker566) CFA_SP SP+0
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiPicker566

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond567 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_59
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDP_MgmtLqiRsp
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-2
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function ZDP_MgmtBindRsp
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond569) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-2
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker570 Using cfiCommon1
          CFI (cfiPicker570) NoFunction
          CFI (cfiPicker570) Picker
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,#(ZDP_Buf + 1) & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((ZDP_Buf + 1) >> 8) & 0xff
        MOVX    @DPTR,A
        MOV     A,R6
        MOV     R1,A
        RET
          CFI (cfiCond567) CFA_SP SP+0
          CFI (cfiCond568) CFA_SP SP+0
          CFI (cfiCond569) CFA_SP SP+0
          CFI (cfiPicker570) CFA_SP SP+0
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiPicker570
// 1575 
// 1576 /*********************************************************************
// 1577  * @fn          ZDP_MgmtRtgRsp
// 1578  *
// 1579  * @brief       This builds and send a Mgmt_Rtg_rsp message. This
// 1580  *              function sends a unicast message.
// 1581  *
// 1582  * @param       dstAddr - destination address of the message
// 1583  * @param       Status - message status (ZDP_SUCCESS or other)
// 1584  * @param       RoutingTableEntries - Total number of entries
// 1585  * @param       StartIndex - Starting index within the reporting list
// 1586  * @param       RoutingTableListCount - number of entries included
// 1587  *                                      in this message
// 1588  * @param       RoutingTableList - List of Routing Table entries
// 1589  * @param       SecurityEnable - true to enable security for this message
// 1590  *
// 1591  * @return      ZStatus_t
// 1592  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1593 ZStatus_t ZDP_MgmtRtgRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtRtgRsp:
          CFI Block cfiBlock571 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
        CODE
// 1594                             byte Status,
// 1595                             byte RoutingTableEntries,
// 1596                             byte StartIndex,
// 1597                             byte RoutingListCount,
// 1598                             rtgItem_t *RoutingTableList,
// 1599                             byte SecurityEnable )
// 1600 {
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V2,R4
        MOV     ?V0,R5
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V6,A
// 1601   uint8 *buf;
// 1602   uint8 *pBuf;
// 1603   // Status + RoutingTableEntries + StartIndex + RoutingListCount.
// 1604   byte len = 1 + 1 + 1 + 1;
// 1605   byte x;
// 1606 
// 1607   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1608 
// 1609   // Add an array for Routing List data
// 1610   len += (RoutingListCount * ZDP_ROUTINGENTRY_SIZE);
        MOV     B,#0x5
        LCALL   ?Subroutine76 & 0xFFFF
// 1611 
// 1612   buf = osal_mem_alloc( (short)(len+1) );
??CrossCallReturnLabel_301:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     R6,?V8
        MOV     R7,?V9
// 1613   if ( buf == NULL )
        MOV     A,R6
        ORL     A,R7
        JNZ     ??ZDP_MgmtRtgRsp_0
// 1614   {
// 1615     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_MgmtRtgRsp_1 & 0xFFFF
// 1616   }
// 1617 
// 1618   pBuf = buf+1;
??ZDP_MgmtRtgRsp_0:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
// 1619 
// 1620   *pBuf++ = Status;
        MOV     A,?V2
        MOVX    @DPTR,A
// 1621   *pBuf++ = RoutingTableEntries;
        INC     DPTR
        MOV     A,?V0
        MOVX    @DPTR,A
// 1622   *pBuf++ = StartIndex;
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine58 & 0xFFFF
// 1623   *pBuf++ = RoutingListCount;
??CrossCallReturnLabel_94:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V6
        LCALL   ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_290:
        JNC     ??ZDP_MgmtRtgRsp_2
        INC     R3
// 1624 
// 1625   for ( x = 0; x < RoutingListCount; x++ )
??ZDP_MgmtRtgRsp_2:
        MOV     A,?V6
        JNZ     $+5
        LJMP    ??ZDP_MgmtRtgRsp_3 & 0xFFFF
        MOV     ?V1,A
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
// 1626   {
// 1627     *pBuf++ = LO_UINT16( RoutingTableList->dstAddress );  // Destination Address
??ZDP_MgmtRtgRsp_4:
        LCALL   ?Subroutine24 & 0xFFFF
// 1628     *pBuf++ = HI_UINT16( RoutingTableList->dstAddress );
// 1629 
// 1630     *pBuf = (RoutingTableList->status & 0x07);
??CrossCallReturnLabel_33:
        MOV     ?V6,A
        CLR     A
        ADDC    A,R3
        MOV     ?V7,A
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x7
        MOV     DPL,?V6
        MOV     DPH,?V7
        MOVX    @DPTR,A
// 1631     if ( RoutingTableList->options & (ZP_MTO_ROUTE_RC | ZP_MTO_ROUTE_NRC) )
        MOV     A,R4
        ADD     A,#0x6
        MOV     DPL,A
        CLR     A
        ADDC    A,R5
        MOV     DPH,A
        MOVX    A,@DPTR
        ANL     A,#0x18
        JZ      ??ZDP_MgmtRtgRsp_5
// 1632     {
// 1633       uint8 options = 0;
// 1634       options |= ZDO_MGMT_RTG_ENTRY_MANYTOONE;
        MOV     ?V8,#0x2
// 1635 
// 1636       if ( RoutingTableList->options & ZP_RTG_RECORD )
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.2
        JNC     ??ZDP_MgmtRtgRsp_6
// 1637       {
// 1638         options |= ZDO_MGMT_RTG_ENTRY_ROUTE_RECORD_REQUIRED;
        MOV     ?V8,#0x6
// 1639       }
// 1640 
// 1641       if ( RoutingTableList->options & ZP_MTO_ROUTE_NRC )
??ZDP_MgmtRtgRsp_6:
        MOV     C,0xE0 /* A   */.4
        JNC     ??ZDP_MgmtRtgRsp_7
// 1642       {
// 1643         options |= ZDO_MGMT_RTG_ENTRY_MEMORY_CONSTRAINED;
        SETB    C
        MOV     A,?V8
        SETB    0xE0 /* A   */.0
        MOV     ?V8,A
// 1644       }
// 1645 
// 1646       *pBuf |= (options << 3);
??ZDP_MgmtRtgRsp_7:
        MOV     A,?V8
        RLC     A
        RLC     A
        RLC     A
        ANL     A,#0xf8
        MOV     ?V8,A
        MOV     DPL,?V6
        MOV     DPH,?V7
        MOVX    A,@DPTR
        ORL     A,?V8
        MOVX    @DPTR,A
// 1647     }
// 1648     pBuf++;
// 1649 
// 1650     *pBuf++ = LO_UINT16( RoutingTableList->nextHopAddress );  // Next hop
??ZDP_MgmtRtgRsp_5:
        MOV     A,R4
        ADD     A,#0x2
        MOV     ?V6,A
        CLR     A
        ADDC    A,R5
        MOV     ?V7,A
        MOV     DPL,?V6
        LCALL   ?Subroutine71 & 0xFFFF
// 1651     *pBuf++ = HI_UINT16( RoutingTableList->nextHopAddress );
??CrossCallReturnLabel_116:
        MOV     DPL,?V6
        MOV     DPH,?V7
        INC     DPTR
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_108:
        MOV     A,R2
        ADD     A,#0x5
        MOV     R2,A
        JNC     ??ZDP_MgmtRtgRsp_8
        INC     R3
// 1652     RoutingTableList++;    // Move to next list entry
??ZDP_MgmtRtgRsp_8:
        MOV     A,R4
        ADD     A,#0x7
        MOV     R4,A
        JNC     ??ZDP_MgmtRtgRsp_9
        INC     R5
// 1653   }
??ZDP_MgmtRtgRsp_9:
        DEC     ?V1
        MOV     A,?V1
        JNZ     ??ZDP_MgmtRtgRsp_4
// 1654 
// 1655   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Rtg_rsp, len, buf );
??ZDP_MgmtRtgRsp_3:
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_65:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V6,#0x32
        MOV     ?V7,#-0x80
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,?V3
        MOV     R4,?V4
        MOV     R5,?V5
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     ?V3,A
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,#(ZDP_Buf + 1) & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((ZDP_Buf + 1) >> 8) & 0xff
        MOVX    @DPTR,A
        MOV     R1,?V3
??ZDP_MgmtRtgRsp_1:
        LJMP    ?Subroutine4 & 0xFFFF
// 1656 }
          CFI EndBlock cfiBlock571

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond572 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDP_MgmtRtgRsp
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-2
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker574 Using cfiCommon1
          CFI (cfiPicker574) NoFunction
          CFI (cfiPicker574) Picker
        MOV     DPH,A
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_157:
        MOVX    @DPTR,A
        RET
          CFI (cfiCond572) CFA_SP SP+0
          CFI (cfiCond573) CFA_SP SP+0
          CFI (cfiPicker574) CFA_SP SP+0
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiPicker574

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond575 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_107
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDP_MgmtRtgRsp
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_108
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-2
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker577 Using cfiCommon1
          CFI (cfiPicker577) NoFunction
          CFI (cfiPicker577) Picker
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_156:
        INC     DPTR
        MOVX    @DPTR,A
        RET
          CFI (cfiCond575) CFA_SP SP+0
          CFI (cfiCond576) CFA_SP SP+0
          CFI (cfiPicker577) CFA_SP SP+0
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiPicker577

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond578 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ZDP_MgmtRtgRsp
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_116
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-4
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDP_MgmtLqiRsp
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_107
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-4
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDP_MgmtRtgRsp
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_108
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-4
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker582 Using cfiCommon1
          CFI (cfiPicker582) NoFunction
          CFI (cfiPicker582) Picker
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_177:
        RET
          CFI (cfiCond578) CFA_SP SP+-2
          CFI (cfiCond579) CFA_SP SP+-2
          CFI (cfiCond580) CFA_SP SP+-2
          CFI (cfiCond581) CFA_SP SP+-2
          CFI (cfiPicker582) CFA_SP SP+0
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiPicker582

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond583 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_29
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ZDP_SimpleDescMsg
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_30
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-6
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function ZDP_SimpleDescMsg
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_105
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-6
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond586 Using cfiCommon0
          CFI (cfiCond586) Function ZDP_MgmtLqiRsp
          CFI (cfiCond586) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_106
          CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond586) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond586) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond586) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond586) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond586) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond586) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond586) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond586) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond586) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond586) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond586) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond586) CFA_SP SP+-6
          CFI (cfiCond586) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function ZDP_MgmtLqiRsp
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_115
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond587) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond587) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond587) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond587) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond587) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond587) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-6
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function ZDP_MgmtRtgRsp
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_116
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-6
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function ZDP_MgmtLqiRsp
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_107
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond589) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond589) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond589) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond589) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond589) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-6
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDP_MgmtRtgRsp
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_108
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-6
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker591 Using cfiCommon1
          CFI (cfiPicker591) NoFunction
          CFI (cfiPicker591) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond583) CFA_SP SP+-4
          CFI (cfiCond584) CFA_SP SP+-4
          CFI (cfiCond585) CFA_SP SP+-4
          CFI (cfiCond586) CFA_SP SP+-4
          CFI (cfiCond587) CFA_SP SP+-4
          CFI (cfiCond588) CFA_SP SP+-4
          CFI (cfiCond589) CFA_SP SP+-4
          CFI (cfiCond590) CFA_SP SP+-4
          CFI (cfiPicker591) CFA_SP SP+0
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiPicker591

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond592 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDP_MgmtRtgRsp
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-2
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ZDP_MgmtBindRsp
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-2
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker595 Using cfiCommon1
          CFI (cfiPicker595) NoFunction
          CFI (cfiPicker595) Picker
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_272:
        INC     DPTR
        MOVX    @DPTR,A
        RET
          CFI (cfiCond592) CFA_SP SP+0
          CFI (cfiCond593) CFA_SP SP+0
          CFI (cfiCond594) CFA_SP SP+0
          CFI (cfiPicker595) CFA_SP SP+0
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiPicker595
// 1657 
// 1658 /*********************************************************************
// 1659  * @fn          ZDP_MgmtBindRsp
// 1660  *
// 1661  * @brief       This builds and send a Mgmt_Bind_rsp message. This
// 1662  *              function sends a unicast message.
// 1663  *
// 1664  * @param       dstAddr - destination address of the message
// 1665  * @param       Status - message status (ZDP_SUCCESS or other)
// 1666  * @param       BindingTableEntries - Total number of entries
// 1667  * @param       StartIndex - Starting index within the reporting list
// 1668  * @param       BindingTableListCount - number of entries included
// 1669  *                                 in this message
// 1670  * @param       BindingTableList - List of Binding Table entries
// 1671  * @param       SecurityEnable - Security Options
// 1672  *
// 1673  * @return      ZStatus_t
// 1674  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1675 ZStatus_t ZDP_MgmtBindRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtBindRsp:
          CFI Block cfiBlock596 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
        CODE
// 1676                             byte Status,
// 1677                             byte BindingTableEntries,
// 1678                             byte StartIndex,
// 1679                             byte BindingTableListCount,
// 1680                             apsBindingItem_t *BindingTableList,
// 1681                             byte SecurityEnable )
// 1682 {
        FUNCALL ZDP_MgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V10,R2
        MOV     ?V11,R3
        MOV     ?V7,R4
        MOV     ?V6,R5
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
// 1683   uint8 *buf;
// 1684   uint8 *pBuf;
// 1685   uint8 maxLen; // maxLen is the maximum packet length to allocate enough memory space
// 1686   uint8 len;    // Actual length varies due to different addrMode
// 1687   uint8 x;
// 1688   byte extZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1; // One more byte for cluserID and DstAddrMode
// 1689   byte shortZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1 + 2 - 8 - 1; // clusterID + DstAddrMode + shortAddr - ExtAddr - DstEndpoint
// 1690 
// 1691   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1692 
// 1693   // Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1694   maxLen = 1 + 1 + 1 + 1;
// 1695   maxLen += (BindingTableListCount * extZdpBindEntrySize );  //max length
// 1696   buf = osal_mem_alloc( maxLen + 1 );  // +1 for transaction ID
        ; Setup parameters for call to function osal_mem_alloc
        MOV     B,#0x15
        MUL     AB
        ADD     A,#0x4
        LCALL   ??Subroutine147_0 & 0xFFFF
??CrossCallReturnLabel_303:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 1697 
// 1698   if ( buf == NULL )
        MOV     A,R2
        ORL     A,?V3
        JNZ     ??ZDP_MgmtBindRsp_0
// 1699   {
// 1700     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??CrossCallReturnLabel_61 & 0xFFFF
// 1701   }
// 1702 
// 1703   pBuf = buf+1;
??ZDP_MgmtBindRsp_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     ?V4,DPL
        MOV     ?V5,DPH
        MOV     R2,?V4
        MOV     R3,?V5
// 1704 
// 1705   *pBuf++ = Status;
        MOV     A,?V7
        MOVX    @DPTR,A
// 1706   *pBuf++ = BindingTableEntries;
        INC     DPTR
        MOV     A,?V6
        MOVX    @DPTR,A
// 1707   *pBuf++ = StartIndex;
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine58 & 0xFFFF
// 1708   *pBuf++ = BindingTableListCount;
??CrossCallReturnLabel_95:
        MOV     A,R6
        LCALL   ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_291:
        JNC     ??ZDP_MgmtBindRsp_1
        INC     R3
// 1709 
// 1710   // Initial length = Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1711   // length += ZDP_BINDINGENTRY_SIZE   -- Version 1.0
// 1712   //           extZdpBindEntrySize     -- Version 1.1 extended address mode
// 1713   //           shortZdpBindEntrySize   -- Version 1.1 group address mode
// 1714 
// 1715   len = 1 + 1 + 1 + 1;
??ZDP_MgmtBindRsp_1:
        MOV     ?V0,#0x4
// 1716   for ( x = 0; x < BindingTableListCount; x++ )
        MOV     A,R6
        JZ      ??ZDP_MgmtBindRsp_2
        MOV     ?V1,R6
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine143_0 & 0xFFFF
// 1717   {
// 1718     pBuf = osal_cpyExtAddr( pBuf, BindingTableList->srcAddr );
??CrossCallReturnLabel_286:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1719     *pBuf++ = BindingTableList->srcEP;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_297:
        LCALL   ?Subroutine49 & 0xFFFF
// 1720 
// 1721     // Cluster ID
// 1722     *pBuf++ = LO_UINT16( BindingTableList->clusterID );
??CrossCallReturnLabel_78:
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_270:
        LCALL   ?Subroutine34 & 0xFFFF
// 1723     *pBuf++ = HI_UINT16( BindingTableList->clusterID );
??CrossCallReturnLabel_54:
        INC     DPTR
        MOVX    @DPTR,A
// 1724 
// 1725     *pBuf++ = BindingTableList->dstAddr.addrMode;
        MOV     A,R6
        ADD     A,#0x13
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_293:
        JNC     ??ZDP_MgmtBindRsp_3
        INC     R3
// 1726     if ( BindingTableList->dstAddr.addrMode == Addr64Bit )
??ZDP_MgmtBindRsp_3:
        MOV     A,R6
        ADD     A,#0xb
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        XRL     A,#0x3
        JNZ     ??ZDP_MgmtBindRsp_4
// 1727     {
// 1728       len += extZdpBindEntrySize;
        MOV     A,#0x15
        ADD     A,?V0
        MOV     ?V0,A
// 1729       pBuf = osal_cpyExtAddr( pBuf, BindingTableList->dstAddr.addr.extAddr );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1730       *pBuf++ = BindingTableList->dstEP;
        MOV     A,R6
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        LCALL   ?Subroutine35 & 0xFFFF
// 1731     }
??CrossCallReturnLabel_265:
        SJMP    ??ZDP_MgmtBindRsp_5
// 1732     else
// 1733     {
// 1734       len += shortZdpBindEntrySize;
??ZDP_MgmtBindRsp_4:
        MOV     A,#0xe
        ADD     A,?V0
        MOV     ?V0,A
// 1735       *pBuf++ = LO_UINT16( BindingTableList->dstAddr.addr.shortAddr );
        LCALL   ?Subroutine24 & 0xFFFF
// 1736       *pBuf++ = HI_UINT16( BindingTableList->dstAddr.addr.shortAddr );
// 1737     }
??CrossCallReturnLabel_34:
        MOV     R2,A
        JNC     ??ZDP_MgmtBindRsp_5
        INC     R3
// 1738     BindingTableList++;    // Move to next list entry
??ZDP_MgmtBindRsp_5:
        MOV     A,R6
        ADD     A,#0x15
        MOV     R6,A
        JNC     ??ZDP_MgmtBindRsp_6
        INC     R7
// 1739   }
??ZDP_MgmtBindRsp_6:
        DEC     ?V1
        MOV     A,?V1
        JNZ     ??CrossCallReturnLabel_286
// 1740 
// 1741   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Bind_rsp, len, buf );
??ZDP_MgmtBindRsp_2:
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,?V4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V5
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     ?V4,#0x33
        MOV     ?V5,#-0x80
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R1,?V0
        MOV     R4,?V10
        MOV     R5,?V11
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R1
        MOV     R6,A
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V2
        MOV     R3,?V3
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_61:
        LJMP    ?Subroutine5 & 0xFFFF
// 1742 }
          CFI EndBlock cfiBlock596

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond597 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_288
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function zdpProcessAddrReq
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-2
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker599 Using cfiCommon1
          CFI (cfiPicker599) NoFunction
          CFI (cfiPicker599) Picker
        MOV     DPTR,#ZDAppNwkAddr
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiPicker599
        REQUIRE ??Subroutine143_0
        ; // Fall through to label ??Subroutine143_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine143_0:
          CFI Block cfiCond600 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_284
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function ZDP_MgmtLqiRsp
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_285
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond601) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond601) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-2
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function ZDP_MgmtBindRsp
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond602) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond602) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond602) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond602) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond602) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond602) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond602) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond602) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+-2
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_287
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-2
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function zdpProcessAddrReq
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-2
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function zdpProcessAddrReq
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-2
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker606 Using cfiCommon1
          CFI (cfiPicker606) NoFunction
          CFI (cfiPicker606) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        RET
          CFI (cfiCond600) CFA_SP SP+0
          CFI (cfiCond601) CFA_SP SP+0
          CFI (cfiCond602) CFA_SP SP+0
          CFI (cfiCond603) CFA_SP SP+0
          CFI (cfiCond604) CFA_SP SP+0
          CFI (cfiCond605) CFA_SP SP+0
          CFI (cfiPicker606) CFA_SP SP+0
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiPicker606

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond607 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ZDP_MgmtBindRsp
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond608) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-2
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker609 Using cfiCommon1
          CFI (cfiPicker609) NoFunction
          CFI (cfiPicker609) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x9
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        RET
          CFI (cfiCond607) CFA_SP SP+0
          CFI (cfiCond608) CFA_SP SP+0
          CFI (cfiPicker609) CFA_SP SP+0
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiPicker609

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond610 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_292
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDP_MgmtBindRsp
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-2
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker612 Using cfiCommon1
          CFI (cfiPicker612) NoFunction
          CFI (cfiPicker612) Picker
        MOVX    A,@DPTR
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiPicker612
        REQUIRE ??Subroutine144_0
        ; // Fall through to label ??Subroutine144_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine144_0:
          CFI Block cfiCond613 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_291
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function ZDP_BindUnbindReq
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond614) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond614) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-2
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ZDP_MgmtBindRsp
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond615) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-2
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker616 Using cfiCommon1
          CFI (cfiPicker616) NoFunction
          CFI (cfiPicker616) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiPicker616
        REQUIRE ??Subroutine145_0
        ; // Fall through to label ??Subroutine145_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine145_0:
          CFI Block cfiCond617 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_290
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function ZDP_MgmtBindRsp
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond618) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+-2
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ZDP_BindUnbindReq
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-2
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function ZDP_MgmtBindRsp
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond620) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond620) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond620) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond620) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond620) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+-2
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker621 Using cfiCommon1
          CFI (cfiPicker621) NoFunction
          CFI (cfiPicker621) Picker
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x4
        MOV     R2,A
        RET
          CFI (cfiCond617) CFA_SP SP+0
          CFI (cfiCond618) CFA_SP SP+0
          CFI (cfiCond619) CFA_SP SP+0
          CFI (cfiCond620) CFA_SP SP+0
          CFI (cfiPicker621) CFA_SP SP+0
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiPicker621

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond622 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_53
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond623 Using cfiCommon0
          CFI (cfiCond623) Function ZDP_MgmtBindRsp
          CFI (cfiCond623) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond623) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond623) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond623) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond623) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond623) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond623) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond623) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond623) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond623) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond623) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond623) CFA_SP SP+-2
          CFI (cfiCond623) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker624 Using cfiCommon1
          CFI (cfiPicker624) NoFunction
          CFI (cfiPicker624) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_237:
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_271:
        RET
          CFI (cfiCond622) CFA_SP SP+0
          CFI (cfiCond623) CFA_SP SP+0
          CFI (cfiPicker624) CFA_SP SP+0
          CFI EndBlock cfiCond622
          CFI EndBlock cfiCond623
          CFI EndBlock cfiPicker624

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond625 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_269
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function ZDP_MgmtBindRsp
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_270
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond626) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond626) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond626) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond626) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond626) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+-4
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function ZDP_SimpleDescMsg
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_266
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond627) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond627) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond627) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond627) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-4
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function ZDP_SimpleDescMsg
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_267
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond628) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond628) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond628) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond628) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond628) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-4
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function ZDP_BindUnbindReq
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_268
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond629) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond629) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond629) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond629) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+-4
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function ZDP_SimpleDescMsg
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_93
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond630) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond630) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-4
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function ZDP_MgmtRtgRsp
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_94
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-4
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function ZDP_MgmtBindRsp
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_95
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond632) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond632) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond632) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond632) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-4
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function ZDP_MgmtLqiRsp
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_53
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond633) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond633) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-4
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ZDP_MgmtBindRsp
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_54
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond634) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond634) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond634) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-4
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker635 Using cfiCommon1
          CFI (cfiPicker635) NoFunction
          CFI (cfiPicker635) Picker
        LCALL   ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_299:
        INC     DPTR
        RET
          CFI (cfiCond625) CFA_SP SP+-2
          CFI (cfiCond626) CFA_SP SP+-2
          CFI (cfiCond627) CFA_SP SP+-2
          CFI (cfiCond628) CFA_SP SP+-2
          CFI (cfiCond629) CFA_SP SP+-2
          CFI (cfiCond630) CFA_SP SP+-2
          CFI (cfiCond631) CFA_SP SP+-2
          CFI (cfiCond632) CFA_SP SP+-2
          CFI (cfiCond633) CFA_SP SP+-2
          CFI (cfiCond634) CFA_SP SP+-2
          CFI (cfiPicker635) CFA_SP SP+0
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiPicker635

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond636 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_297
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function ZDP_SimpleDescMsg
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_81
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-6
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function ZDP_SimpleDescMsg
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_82
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond638) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond638) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond638) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+-6
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function ZDP_MgmtRtgRsp
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_33
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond639) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond639) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond639) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+-6
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function ZDP_MgmtBindRsp
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_34
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond640) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond640) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+-6
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker641 Using cfiCommon1
          CFI (cfiPicker641) NoFunction
          CFI (cfiPicker641) Picker
        INC     DPTR
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiPicker641
        REQUIRE ??Subroutine146_0
        ; // Fall through to label ??Subroutine146_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine146_0:
          CFI Block cfiCond642 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_294
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function ZDP_SimpleDescMsg
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_83
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond643) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond643) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond643) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond643) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+-6
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function ZDP_SimpleDescMsg
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_84
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond644) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond644) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-6
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function ZDP_SendData
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_112
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond645) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+-6
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function ZDP_EPRsp
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_113
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_SP SP+-6
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function ZDP_BindUnbindReq
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_114
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-6
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ZDP_MgmtRtgRsp
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_33
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-6
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function ZDP_MgmtBindRsp
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_34
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond649) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond649) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond649) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond649) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond649) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-6
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function ZDP_MgmtLqiRsp
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond650) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond650) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond650) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond650) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond650) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond650) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond650) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond650) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond650) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond650) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond650) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond650) CFA_SP SP+-2
          CFI (cfiCond650) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function ZDP_SimpleDescMsg
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_269
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+-6
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function ZDP_MgmtBindRsp
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_270
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond652) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-6
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function ZDP_SimpleDescMsg
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_266
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond653) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+-6
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function ZDP_SimpleDescMsg
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_267
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-6
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function ZDP_BindUnbindReq
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_268
          CFI (cfiCond655) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond655) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond655) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond655) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond655) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond655) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond655) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond655) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond655) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond655) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond655) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond655) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond655) CFA_SP SP+-6
          CFI (cfiCond655) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function ZDP_SimpleDescMsg
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_93
          CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond656) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond656) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond656) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond656) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond656) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond656) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond656) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond656) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond656) CFA_SP SP+-6
          CFI (cfiCond656) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function ZDP_MgmtRtgRsp
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_94
          CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond657) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond657) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond657) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond657) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond657) CFA_SP SP+-6
          CFI (cfiCond657) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond658 Using cfiCommon0
          CFI (cfiCond658) Function ZDP_MgmtBindRsp
          CFI (cfiCond658) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_95
          CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond658) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond658) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond658) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond658) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond658) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond658) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond658) CFA_SP SP+-6
          CFI (cfiCond658) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function ZDP_MgmtLqiRsp
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_53
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond659) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond659) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond659) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+-6
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function ZDP_MgmtBindRsp
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_54
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond660) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond660) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond660) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond660) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond660) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-6
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function ZDP_MgmtBindRsp
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond661) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond661) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+-2
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function ZDP_SimpleDescMsg
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_81
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond662) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond662) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+-6
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function ZDP_SimpleDescMsg
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_82
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond663) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond663) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond663) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+-6
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function ZDP_MgmtRtgRsp
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_33
          CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond664) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond664) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond664) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond664) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond664) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond664) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond664) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond664) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond664) CFA_SP SP+-6
          CFI (cfiCond664) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function ZDP_MgmtBindRsp
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_34
          CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond665) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond665) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond665) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond665) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond665) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond665) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond665) CFA_SP SP+-6
          CFI (cfiCond665) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker666 Using cfiCommon1
          CFI (cfiPicker666) NoFunction
          CFI (cfiPicker666) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI (cfiCond642) CFA_SP SP+0
          CFI (cfiCond643) CFA_SP SP+-4
          CFI (cfiCond644) CFA_SP SP+-4
          CFI (cfiCond645) CFA_SP SP+-4
          CFI (cfiCond646) CFA_SP SP+-4
          CFI (cfiCond647) CFA_SP SP+-4
          CFI (cfiCond648) CFA_SP SP+-4
          CFI (cfiCond649) CFA_SP SP+-4
          CFI (cfiCond650) CFA_SP SP+0
          CFI (cfiCond651) CFA_SP SP+-4
          CFI (cfiCond652) CFA_SP SP+-4
          CFI (cfiCond653) CFA_SP SP+-4
          CFI (cfiCond654) CFA_SP SP+-4
          CFI (cfiCond655) CFA_SP SP+-4
          CFI (cfiCond656) CFA_SP SP+-4
          CFI (cfiCond657) CFA_SP SP+-4
          CFI (cfiCond658) CFA_SP SP+-4
          CFI (cfiCond659) CFA_SP SP+-4
          CFI (cfiCond660) CFA_SP SP+-4
          CFI (cfiCond661) CFA_SP SP+0
          CFI (cfiCond662) CFA_SP SP+-4
          CFI (cfiCond663) CFA_SP SP+-4
          CFI (cfiCond664) CFA_SP SP+-4
          CFI (cfiCond665) CFA_SP SP+-4
          CFI (cfiPicker666) CFA_SP SP+0
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiPicker666

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond667 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function ZDP_MgmtBindRsp
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond668) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond668) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+-2
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker669 Using cfiCommon1
          CFI (cfiPicker669) NoFunction
          CFI (cfiPicker669) Picker
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_149:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_145:
        RET
          CFI (cfiCond667) CFA_SP SP+0
          CFI (cfiCond668) CFA_SP SP+0
          CFI (cfiPicker669) CFA_SP SP+0
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiPicker669

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond670 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond671 Using cfiCommon0
          CFI (cfiCond671) Function ZDP_SimpleDescMsg
          CFI (cfiCond671) Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_82
          CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond671) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond671) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond671) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond671) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond671) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond671) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond671) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond671) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond671) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond671) CFA_SP SP+-4
          CFI (cfiCond671) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond672 Using cfiCommon0
          CFI (cfiCond672) Function ZDP_MgmtRtgRsp
          CFI (cfiCond672) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_33
          CFI (cfiCond672) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond672) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond672) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond672) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond672) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond672) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond672) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond672) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond672) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond672) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond672) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond672) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond672) CFA_SP SP+-4
          CFI (cfiCond672) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function ZDP_MgmtBindRsp
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_34
          CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond673) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond673) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond673) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond673) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond673) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond673) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond673) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond673) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond673) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond673) CFA_SP SP+-4
          CFI (cfiCond673) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker674 Using cfiCommon1
          CFI (cfiPicker674) NoFunction
          CFI (cfiPicker674) Picker
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_298:
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x2
        RET
          CFI (cfiCond670) CFA_SP SP+-2
          CFI (cfiCond671) CFA_SP SP+-2
          CFI (cfiCond672) CFA_SP SP+-2
          CFI (cfiCond673) CFA_SP SP+-2
          CFI (cfiPicker674) CFA_SP SP+0
          CFI EndBlock cfiCond670
          CFI EndBlock cfiCond671
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiPicker674
// 1743 
// 1744 /*********************************************************************
// 1745  * @fn          ZDP_MgmtNwkUpdateNotify
// 1746  *
// 1747  * @brief       This builds and send a Mgmt_NWK_Update_notify message. This
// 1748  *              function sends a unicast message.
// 1749  *
// 1750  * @param       dstAddr - destination address of the message
// 1751  * @param       status - message status (ZDP_SUCCESS or other)
// 1752  * @param       scannedChannels - List of channels scanned by the request
// 1753  * @param       totalTransmissions - Total transmissions
// 1754  * @param       transmissionFailures - Sum of transmission failures
// 1755  * @param       listCount - Number of records contained in the energyValues list
// 1756  * @param       energyValues - List of descriptors, one for each of ListCount,
// 1757  *                             of the enegry detect descriptors
// 1758  * @param       txOptions - Transmit options
// 1759  * @param       securityEnable - Security options
// 1760  *
// 1761  * @return      afStatus_t
// 1762  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1763 afStatus_t ZDP_MgmtNwkUpdateNotify( uint8 TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateNotify:
          CFI Block cfiBlock675 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
        CODE
// 1764                                     uint8 status, uint32 scannedChannels,
// 1765                                     uint16 totalTransmissions, uint16 transmissionFailures,
// 1766                                     uint8 listCount, uint8 *energyValues, uint8 txOptions,
// 1767                                     uint8 securityEnable )
// 1768 {
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     ?V7,R4
        MOV     ?V0,R5
// 1769   uint8 *buf;
// 1770   uint8 *pBuf;
// 1771   uint8 len;
// 1772 
// 1773   (void)securityEnable;  // Intentionally unreferenced parameter
// 1774 
// 1775   // Status + ScannedChannels + totalTransmissions + transmissionFailures + ListCount + energyValues
// 1776   len = 1 + 4 + 2 + 2 + 1 + listCount;
        MOV     A,#0xa
        ADD     A,R5
        MOV     ?V1,A
// 1777 
// 1778   buf = osal_mem_alloc( len+1 ); // +1 for transaction ID
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine147_0 & 0xFFFF
??CrossCallReturnLabel_304:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R6,?V2
        MOV     R7,?V3
// 1779   if ( buf == NULL )
        MOV     A,R6
        ORL     A,R7
        JNZ     ??ZDP_MgmtNwkUpdateNotify_0
// 1780   {
// 1781     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_MgmtNwkUpdateNotify_1 & 0xFFFF
// 1782   }
// 1783 
// 1784   pBuf = buf+1;
??ZDP_MgmtNwkUpdateNotify_0:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     ?V2,DPL
        MOV     ?V3,DPH
// 1785 
// 1786   *pBuf++ = status;
        MOV     A,?V7
        LCALL   ??Subroutine133_0 & 0xFFFF
// 1787 
// 1788   pBuf = osal_buffer_uint32( pBuf, scannedChannels );
??CrossCallReturnLabel_262:
        ; Setup parameters for call to function osal_buffer_uint32
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL   `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine148_0 & 0xFFFF
// 1789 
// 1790   *pBuf++ = LO_UINT16( totalTransmissions );
??CrossCallReturnLabel_305:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
// 1791   *pBuf++ = HI_UINT16( totalTransmissions );
        MOV     A,R1
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
// 1792 
// 1793   *pBuf++ = LO_UINT16( transmissionFailures );
// 1794   *pBuf++ = HI_UINT16( transmissionFailures );
??CrossCallReturnLabel_76:
        LCALL   ?Subroutine27 & 0xFFFF
// 1795 
// 1796   *pBuf++ = listCount;
??CrossCallReturnLabel_37:
        MOV     A,?V0
        MOVX    @DPTR,A
// 1797 
// 1798   if ( listCount > 0 )
        JZ      ??ZDP_MgmtNwkUpdateNotify_2
// 1799     osal_memcpy( pBuf, energyValues, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_99:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,?V0
        MOV     R5,#0x0
        MOV     A,R2
        ADD     A,#0x5
        MOV     R2,A
        JNC     ??ZDP_MgmtNwkUpdateNotify_3
        INC     R3
??ZDP_MgmtNwkUpdateNotify_3:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1800 
// 1801   FillAndSendBufferTxOptions( &TransSeq, dstAddr, Mgmt_NWK_Update_notify, len, buf, txOptions );
??ZDP_MgmtNwkUpdateNotify_2:
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,?V2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V3
        MOVX    @DPTR,A
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPTR,#ZDP_TxOptions
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x38
        MOV     ?V3,#-0x80
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,?V1
        MOV     R4,?V8
        MOV     R5,?V9
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     ?V1,A
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,#(ZDP_Buf + 1) & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((ZDP_Buf + 1) >> 8) & 0xff
        MOVX    @DPTR,A
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        MOV     R1,?V1
??ZDP_MgmtNwkUpdateNotify_1:
        LJMP    ?Subroutine4 & 0xFFFF
// 1802 }
          CFI EndBlock cfiBlock675

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond676 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_300
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function ZDP_MgmtRtgRsp
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+-2
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker678 Using cfiCommon1
          CFI (cfiPicker678) NoFunction
          CFI (cfiPicker678) Picker
        MUL     AB
        ADD     A,#0x4
        MOV     ?V3,A
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiPicker678
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        REQUIRE ??Subroutine147_0
        ; // Fall through to label ??Subroutine147_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine147_0:
          CFI Block cfiCond679 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_302
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function ZDP_MgmtBindRsp
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond680) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond680) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond680) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond680) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond680) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond680) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+-2
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond681 Using cfiCommon0
          CFI (cfiCond681) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond681) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond681) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond681) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond681) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond681) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond681) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond681) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond681) CFA_SP SP+-2
          CFI (cfiCond681) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_300
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond682) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond682) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond682) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond682) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond682) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+-2
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function ZDP_MgmtRtgRsp
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond683) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+-2
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker684 Using cfiCommon1
          CFI (cfiPicker684) NoFunction
          CFI (cfiPicker684) Picker
        ADD     A,#0x1
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI (cfiCond679) CFA_SP SP+0
          CFI (cfiCond680) CFA_SP SP+0
          CFI (cfiCond681) CFA_SP SP+0
          CFI (cfiCond682) CFA_SP SP+0
          CFI (cfiCond683) CFA_SP SP+0
          CFI (cfiPicker684) CFA_SP SP+0
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiPicker684

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond685 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond686) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond686) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond686) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond686) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+-2
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker687 Using cfiCommon1
          CFI (cfiPicker687) NoFunction
          CFI (cfiPicker687) Picker
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_144:
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        RET
          CFI (cfiCond685) CFA_SP SP+0
          CFI (cfiCond686) CFA_SP SP+0
          CFI (cfiPicker687) CFA_SP SP+0
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiPicker687

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond688 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_75
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond689) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond689) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond689) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond689) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-2
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker690 Using cfiCommon1
          CFI (cfiPicker690) NoFunction
          CFI (cfiPicker690) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_141:
        INC     DPTR
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_167:
        INC     DPTR
        RET
          CFI (cfiCond688) CFA_SP SP+0
          CFI (cfiCond689) CFA_SP SP+0
          CFI (cfiPicker690) CFA_SP SP+0
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiPicker690

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond691 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_166, ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond692 Using cfiCommon0
          CFI (cfiCond692) Function ZDP_ServerDiscRsp
          CFI (cfiCond692) Conditional ??CrossCallReturnLabel_166, ??CrossCallReturnLabel_24
          CFI (cfiCond692) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond692) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond692) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond692) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond692) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond692) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond692) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond692) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond692) CFA_SP SP+-4
          CFI (cfiCond692) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond693 Using cfiCommon0
          CFI (cfiCond693) Function ZDP_EndDeviceBindReq
          CFI (cfiCond693) Conditional ??CrossCallReturnLabel_166, ??CrossCallReturnLabel_25
          CFI (cfiCond693) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond693) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond693) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond693) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond693) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond693) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond693) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond693) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond693) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond693) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond693) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond693) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond693) CFA_SP SP+-4
          CFI (cfiCond693) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond694 Using cfiCommon0
          CFI (cfiCond694) Function ZDP_BindUnbindReq
          CFI (cfiCond694) Conditional ??CrossCallReturnLabel_166, ??CrossCallReturnLabel_26
          CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond694) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond694) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond694) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond694) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond694) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond694) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond694) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond694) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond694) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond694) CFA_SP SP+-4
          CFI (cfiCond694) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_167, ??CrossCallReturnLabel_75
          CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond695) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond695) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond695) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond695) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond695) CFA_SP SP+-4
          CFI (cfiCond695) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_167, ??CrossCallReturnLabel_76
          CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond696) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond696) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond696) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond696) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond696) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond696) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond696) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond696) CFA_SP SP+-4
          CFI (cfiCond696) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker697 Using cfiCommon1
          CFI (cfiPicker697) NoFunction
          CFI (cfiPicker697) Picker
        MOVX    @DPTR,A
        MOV     A,R1
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond691) CFA_SP SP+-2
          CFI (cfiCond692) CFA_SP SP+-2
          CFI (cfiCond693) CFA_SP SP+-2
          CFI (cfiCond694) CFA_SP SP+-2
          CFI (cfiCond695) CFA_SP SP+-2
          CFI (cfiCond696) CFA_SP SP+-2
          CFI (cfiPicker697) CFA_SP SP+0
          CFI EndBlock cfiCond691
          CFI EndBlock cfiCond692
          CFI EndBlock cfiCond693
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiPicker697

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond698 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ZDP_ServerDiscRsp
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_24
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-4
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function ZDP_EndDeviceBindReq
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_25
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond700) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond700) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond700) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+-4
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function ZDP_BindUnbindReq
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_26
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond701) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond701) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond701) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond701) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond701) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+-4
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_75
          CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond702) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond702) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond702) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond702) CFA_SP SP+-4
          CFI (cfiCond702) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_76
          CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond703) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond703) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond703) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond703) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond703) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond703) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond703) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond703) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond703) CFA_SP SP+-4
          CFI (cfiCond703) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker704 Using cfiCommon1
          CFI (cfiPicker704) NoFunction
          CFI (cfiPicker704) Picker
        LCALL   ??Subroutine151_0 & 0xFFFF
??CrossCallReturnLabel_332:
        MOV     R1,A
        MOV     A,R0
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        RET
          CFI (cfiCond698) CFA_SP SP+-2
          CFI (cfiCond699) CFA_SP SP+-2
          CFI (cfiCond700) CFA_SP SP+-2
          CFI (cfiCond701) CFA_SP SP+-2
          CFI (cfiCond702) CFA_SP SP+-2
          CFI (cfiCond703) CFA_SP SP+-2
          CFI (cfiPicker704) CFA_SP SP+0
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiPicker704
// 1803 
// 1804 /*********************************************************************
// 1805  * Functions to register for ZDO Over-the-air messages
// 1806  */
// 1807 
// 1808 /*********************************************************************
// 1809  * @fn          ZDO_RegisterForZDOMsg
// 1810  *
// 1811  * @brief       Call this function to register of an incoming over
// 1812  *              the air ZDO message - probably a response message
// 1813  *              but requests can also be received.
// 1814  *              Messages are delivered to the task with ZDO_CB_MSG
// 1815  *              as the message ID.
// 1816  *
// 1817  * @param       taskID - Where you would like the message delivered
// 1818  * @param       clusterID - What message?
// 1819  *                          ZDO_ALL_MSGS_CLUSTERID - all responses
// 1820  *                          and device announce
// 1821  *
// 1822  * @return      ZSuccess - successful, ZMemError if not
// 1823  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1824 ZStatus_t ZDO_RegisterForZDOMsg( uint8 taskID, uint16 clusterID )
ZDO_RegisterForZDOMsg:
          CFI Block cfiBlock705 Using cfiCommon0
          CFI Function ZDO_RegisterForZDOMsg
        CODE
// 1825 {
        FUNCALL ZDO_RegisterForZDOMsg, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V2,R1
        MOV     ?V0,R2
        MOV     ?V1,R3
// 1826   ZDO_MsgCB_t *pList;
// 1827   ZDO_MsgCB_t *pLast;
// 1828   ZDO_MsgCB_t *pNew;
// 1829 
// 1830   // Look for duplicate
// 1831   pList = pLast = zdoMsgCBs;
        MOV     DPTR,#zdoMsgCBs
        LCALL   ??Subroutine143_0 & 0xFFFF
??CrossCallReturnLabel_287:
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        SJMP    ??CrossCallReturnLabel_331
// 1832   while ( pList )
// 1833   {
// 1834     if ( pList->taskID == taskID && pList->clusterID == clusterID )
??ZDO_RegisterForZDOMsg_0:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V2
        JNZ     ??ZDO_RegisterForZDOMsg_1
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_RegisterForZDOMsg_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_RegisterForZDOMsg_2:
        JZ      ??CrossCallReturnLabel_66
// 1835       return ( ZSuccess );
// 1836     pLast = pList;
??ZDO_RegisterForZDOMsg_1:
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 1837     pList = (ZDO_MsgCB_t *)pList->next;
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine151_0 & 0xFFFF
// 1838   }
??CrossCallReturnLabel_331:
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JNZ     ??ZDO_RegisterForZDOMsg_0
// 1839 
// 1840   // Add to the list
// 1841   pNew = (ZDO_MsgCB_t *)osal_mem_alloc( sizeof ( ZDO_MsgCB_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x5
        MOV     R3,#0x0
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R0,?V4
        MOV     R1,?V5
// 1842   if ( pNew )
        MOV     A,R0
        ORL     A,R1
        JZ      ??ZDO_RegisterForZDOMsg_3
// 1843   {
// 1844     pNew->taskID = taskID;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOV     A,?V2
        LCALL   ??Subroutine127_0 & 0xFFFF
// 1845     pNew->clusterID = clusterID;
??CrossCallReturnLabel_232:
        MOV     A,?V0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V1
        LCALL   ?Subroutine115 & 0xFFFF
// 1846     pNew->next = NULL;
??CrossCallReturnLabel_245:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1847     if ( zdoMsgCBs )
        MOV     DPTR,#zdoMsgCBs
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_111:
        ORL     A,R3
        JZ      ??ZDO_RegisterForZDOMsg_4
// 1848     {
// 1849       pLast->next = pNew;
        MOV     DPL,R6
        MOV     DPH,R7
        SJMP    ??ZDO_RegisterForZDOMsg_5
// 1850     }
// 1851     else
// 1852       zdoMsgCBs = pNew;
??ZDO_RegisterForZDOMsg_4:
        MOV     DPTR,#zdoMsgCBs
??ZDO_RegisterForZDOMsg_5:
        LCALL   ?Subroutine43 & 0xFFFF
// 1853     return ( ZSuccess );
??CrossCallReturnLabel_66:
        MOV     R1,#0x0
        SJMP    ??ZDO_RegisterForZDOMsg_6
// 1854   }
// 1855   else
// 1856     return ( ZMemError );
??ZDO_RegisterForZDOMsg_3:
        MOV     R1,#0x10
??ZDO_RegisterForZDOMsg_6:
        LJMP    ??Subroutine120_0 & 0xFFFF
// 1857 }
          CFI EndBlock cfiBlock705

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond706 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function ZDP_MgmtRtgRsp
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond707) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond707) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond707) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond707) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-2
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+-2
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond709 Using cfiCommon0
          CFI (cfiCond709) Function ZDP_IncomingData
          CFI (cfiCond709) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond709) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond709) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond709) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond709) CFA_SP SP+-2
          CFI (cfiCond709) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond710 Using cfiCommon0
          CFI (cfiCond710) Function ZDP_IncomingData
          CFI (cfiCond710) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond710) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond710) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond710) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond710) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond710) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond710) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond710) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond710) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond710) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond710) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond710) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond710) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond710) CFA_SP SP+-2
          CFI (cfiCond710) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function ZDP_IncomingData
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-2
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function ZDP_IncomingData
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+-2
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker713 Using cfiCommon1
          CFI (cfiPicker713) NoFunction
          CFI (cfiPicker713) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI (cfiCond706) CFA_SP SP+0
          CFI (cfiCond707) CFA_SP SP+0
          CFI (cfiCond708) CFA_SP SP+0
          CFI (cfiCond709) CFA_SP SP+0
          CFI (cfiCond710) CFA_SP SP+0
          CFI (cfiCond711) CFA_SP SP+0
          CFI (cfiCond712) CFA_SP SP+0
          CFI (cfiPicker713) CFA_SP SP+0
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiCond709
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiPicker713
// 1858 
// 1859 /*********************************************************************
// 1860  * @fn          ZDO_RemoveRegisteredCB
// 1861  *
// 1862  * @brief       Call this function if you don't want to receive the
// 1863  *              incoming message.
// 1864  *
// 1865  * @param       taskID - Where the messages are being delivered.
// 1866  * @param       clusterID - What message?
// 1867  *
// 1868  * @return      ZSuccess - successful, ZFailure if not found
// 1869  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1870 ZStatus_t ZDO_RemoveRegisteredCB( uint8 taskID, uint16 clusterID )
ZDO_RemoveRegisteredCB:
          CFI Block cfiBlock714 Using cfiCommon0
          CFI Function ZDO_RemoveRegisteredCB
        CODE
// 1871 {
        FUNCALL ZDO_RemoveRegisteredCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
// 1872   ZDO_MsgCB_t *pList;
// 1873   ZDO_MsgCB_t *pLast = NULL;
        MOV     R4,#0x0
        MOV     R5,#0x0
// 1874 
// 1875   pList = zdoMsgCBs;
        MOV     DPTR,#zdoMsgCBs
        SJMP    ??ZDO_RemoveRegisteredCB_0
// 1876   while ( pList )
// 1877   {
// 1878     if ( pList->taskID == taskID && pList->clusterID == clusterID )
// 1879     {
// 1880       if ( pLast )
// 1881       {
// 1882         // remove this one from the linked list
// 1883         pLast->next = pList->next;
// 1884       }
// 1885       else if ( pList->next )
// 1886       {
// 1887         // remove the first one from the linked list
// 1888         zdoMsgCBs = pList->next;
// 1889       }
// 1890       else
// 1891       {
// 1892         // remove the only item from the list
// 1893         zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
// 1894       }
// 1895       osal_mem_free( pList );
// 1896       return ( ZSuccess );
// 1897     }
// 1898     pLast = pList;
??ZDO_RemoveRegisteredCB_1:
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
// 1899     pList = pList->next;
        MOV     DPL,R0
        MOV     DPH,R1
??ZDO_RemoveRegisteredCB_0:
        LCALL   ??Subroutine148_0 & 0xFFFF
??CrossCallReturnLabel_306:
        ORL     A,R1
        JZ      ??ZDO_RemoveRegisteredCB_2
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_RemoveRegisteredCB_1
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??ZDO_RemoveRegisteredCB_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??ZDO_RemoveRegisteredCB_3:
        JNZ     ??ZDO_RemoveRegisteredCB_1
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_250:
        MOV     A,R4
        ORL     A,R5
        JZ      ??ZDO_RemoveRegisteredCB_4
        MOV     DPL,R4
        MOV     DPH,R5
        SJMP    ??ZDO_RemoveRegisteredCB_5
??ZDO_RemoveRegisteredCB_4:
        MOV     A,R2
        ORL     A,R3
        MOV     DPTR,#zdoMsgCBs
        JZ      ??ZDO_RemoveRegisteredCB_6
??ZDO_RemoveRegisteredCB_5:
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        SJMP    ??ZDO_RemoveRegisteredCB_7
??ZDO_RemoveRegisteredCB_6:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
??ZDO_RemoveRegisteredCB_7:
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV     R1,#0x0
        SJMP    ??ZDO_RemoveRegisteredCB_8
// 1900   }
// 1901 
// 1902   return ( ZFailure );
??ZDO_RemoveRegisteredCB_2:
        MOV     R1,#0x1
??ZDO_RemoveRegisteredCB_8:
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI R6 SameValue
          CFI VB SameValue
          CFI V0 SameValue
          CFI R7 SameValue
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
// 1903 }
          CFI EndBlock cfiBlock714

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond715 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
          CFI Conditional ??CrossCallReturnLabel_308
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function ZDP_EPRsp
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond716) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond716) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+-2
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker717 Using cfiCommon1
          CFI (cfiPicker717) NoFunction
          CFI (cfiPicker717) Picker
        MOV     DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiPicker717
        REQUIRE ??Subroutine148_0
        ; // Fall through to label ??Subroutine148_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine148_0:
          CFI Block cfiCond718 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_307
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond719 Using cfiCommon0
          CFI (cfiCond719) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond719) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond719) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond719) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond719) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond719) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond719) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond719) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond719) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond719) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond719) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond719) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond719) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond719) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond719) CFA_SP SP+-2
          CFI (cfiCond719) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond720 Using cfiCommon0
          CFI (cfiCond720) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond720) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond720) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond720) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond720) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond720) CFA_SP SP+-2
          CFI (cfiCond720) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond721 Using cfiCommon0
          CFI (cfiCond721) Function ZDP_PowerDescMsg
          CFI (cfiCond721) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond721) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond721) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond721) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond721) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond721) CFA_SP SP+-2
          CFI (cfiCond721) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond722 Using cfiCommon0
          CFI (cfiCond722) Function ZDP_EPRsp
          CFI (cfiCond722) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond722) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond722) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond722) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond722) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond722) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond722) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond722) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond722) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond722) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond722) CFA_SP SP+-2
          CFI (cfiCond722) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker723 Using cfiCommon1
          CFI (cfiPicker723) NoFunction
          CFI (cfiPicker723) Picker
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_329:
        MOV     A,R0
        RET
          CFI (cfiCond718) CFA_SP SP+0
          CFI (cfiCond719) CFA_SP SP+0
          CFI (cfiCond720) CFA_SP SP+0
          CFI (cfiCond721) CFA_SP SP+0
          CFI (cfiCond722) CFA_SP SP+0
          CFI (cfiPicker723) CFA_SP SP+0
          CFI EndBlock cfiCond718
          CFI EndBlock cfiCond719
          CFI EndBlock cfiCond720
          CFI EndBlock cfiCond721
          CFI EndBlock cfiCond722
          CFI EndBlock cfiPicker723
// 1904 
// 1905 /*********************************************************************
// 1906  * @fn          ZDO_SendMsgCBs
// 1907  *
// 1908  * @brief       This function sends messages to registered tasks.
// 1909  *              Local to ZDO and shouldn't be called outside of ZDO.
// 1910  *
// 1911  * @param       inMsg - incoming message
// 1912  *
// 1913  * @return      TRUE if sent to at least 1 task, FALSE if not
// 1914  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1915 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg )
ZDO_SendMsgCBs:
          CFI Block cfiBlock724 Using cfiCommon0
          CFI Function ZDO_SendMsgCBs
        CODE
// 1916 {
        FUNCALL ZDO_SendMsgCBs, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
        MOV     ?V6,R2
        MOV     ?V7,R3
// 1917   uint8 ret = FALSE;
        MOV     ?V3,#0x0
// 1918   ZDO_MsgCB_t *pList = zdoMsgCBs;
        MOV     DPTR,#zdoMsgCBs
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_142:
        MOV     A,R2
        ADD     A,#0x13
        MOV     ?V14,A
        CLR     A
        ADDC    A,?V7
        MOV     ?V15,A
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V2,#0x0
        MOV     A,R2
        ADD     A,#0x10
        MOV     ?V12,A
        CLR     A
        ADDC    A,?V7
        MOV     ?V13,A
        LJMP    ??CrossCallReturnLabel_143 & 0xFFFF
// 1919   while ( pList )
// 1920   {
// 1921     if ( (pList->clusterID == inMsg->clusterID)
// 1922        || ((pList->clusterID == ZDO_ALL_MSGS_CLUSTERID)
// 1923            && ((inMsg->clusterID & ZDO_RESPONSE_BIT) || (inMsg->clusterID == Device_annce))) )
??ZDO_SendMsgCBs_0:
        MOV     A,?V6
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,?V7
        MOV     DPH,A
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_318:
        MOV     DPL,?V4
        MOV     DPH,?V5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_251:
        MOV     A,R0
        XRL     A,R2
        JNZ     ??ZDO_SendMsgCBs_1
        MOV     A,R1
        XRL     A,R3
??ZDO_SendMsgCBs_1:
        JZ      ??ZDO_SendMsgCBs_2
        MOV     A,#-0x1
        XRL     A,R2
        JNZ     ??ZDO_SendMsgCBs_3
        MOV     A,#-0x1
        XRL     A,R3
??ZDO_SendMsgCBs_3:
        JZ      $+5
        LJMP    ??ZDO_SendMsgCBs_4 & 0xFFFF
        MOV     A,R1
        ANL     A,#0x80
        JNZ     ??ZDO_SendMsgCBs_2
        MOV     A,#0x13
        XRL     A,R0
        ORL     A,R1
        JZ      $+5
        LJMP    ??ZDO_SendMsgCBs_4 & 0xFFFF
// 1924     {
// 1925       zdoIncomingMsg_t *msgPtr;
// 1926 
// 1927       // Send the address to the task
// 1928       msgPtr = (zdoIncomingMsg_t *)osal_msg_allocate( sizeof( zdoIncomingMsg_t ) + inMsg->asduLen );
??ZDO_SendMsgCBs_2:
        ; Setup parameters for call to function osal_msg_allocate
        MOV     DPL,?V12
        MOV     DPH,?V13
        MOVX    A,@DPTR
        ADD     A,#0x17
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     R6,?V8
        MOV     R7,?V9
// 1929       if ( msgPtr )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_SendMsgCBs_4
// 1930       {
// 1931         // copy struct
// 1932         osal_memcpy( msgPtr, inMsg, sizeof( zdoIncomingMsg_t ));
        ; Setup parameters for call to function osal_memcpy
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,#0x17
        MOV     R5,#0x0
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 1933 
// 1934         if ( inMsg->asduLen )
        MOV     DPL,?V12
        MOV     DPH,?V13
        MOVX    A,@DPTR
        JZ      ??ZDO_SendMsgCBs_5
// 1935         {
// 1936           msgPtr->asdu = (byte*)(((byte*)msgPtr) + sizeof( zdoIncomingMsg_t ));
        MOV     A,R6
        ADD     A,#0x17
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     A,R6
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
// 1937           osal_memcpy( msgPtr->asdu, inMsg->asdu, inMsg->asduLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?V14
        MOV     DPH,?V15
        MOVX    A,@DPTR
        MOV     ?V8,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V9,A
        MOV     ?V10,#0x0
        MOV     R0,#?V8
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     DPL,?V12
        MOV     DPH,?V13
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 1938         }
// 1939 
// 1940         msgPtr->hdr.event = ZDO_CB_MSG;
??ZDO_SendMsgCBs_5:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#-0x2d
        MOVX    @DPTR,A
// 1941         osal_msg_send( pList->taskID, (uint8 *)msgPtr );
        ; Setup parameters for call to function osal_msg_send
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     DPL,?V4
        MOV     DPH,?V5
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_msg_send::?relay`; Banked call to: osal_msg_send
// 1942         ret = TRUE;
        MOV     ?V3,#0x1
// 1943       }
// 1944     }
// 1945     pList = (ZDO_MsgCB_t *)pList->next;
??ZDO_SendMsgCBs_4:
        MOV     DPL,?V4
        MOV     DPH,?V5
        LCALL   ?Subroutine90 & 0xFFFF
// 1946   }
??CrossCallReturnLabel_143:
        MOV     A,?V4
        ORL     A,?V5
        JZ      $+5
        LJMP    ??ZDO_SendMsgCBs_0 & 0xFFFF
// 1947   return ( ret );
        MOV     R1,?V3
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
          CFI R6 SameValue
          CFI VB SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI R7 SameValue
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI CFA_SP SP+-3
          CFI CFA_XSP16 XSP16+0
// 1948 }
          CFI EndBlock cfiBlock724

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond725 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_99
          CFI (cfiCond726) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond726) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond726) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond726) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond726) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond726) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond726) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond726) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond726) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond726) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond726) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond726) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond726) CFA_SP SP+-4
          CFI (cfiCond726) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function ZDO_SendMsgCBs
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond727) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond727) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond727) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond727) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond727) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond727) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond727) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond727) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond727) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond727) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond727) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond727) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond727) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond727) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond727) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond727) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond727) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond727) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond727) CFA_SP SP+-2
          CFI (cfiCond727) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function ZDO_SendMsgCBs
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond728) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond728) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond728) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond728) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond728) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond728) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond728) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond728) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond728) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond728) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond728) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond728) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond728) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond728) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond728) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond728) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond728) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond728) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond728) CFA_SP SP+-2
          CFI (cfiCond728) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker729 Using cfiCommon1
          CFI (cfiPicker729) NoFunction
          CFI (cfiPicker729) Picker
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        RET
          CFI (cfiCond725) CFA_SP SP+-2
          CFI (cfiCond726) CFA_SP SP+-2
          CFI (cfiCond727) CFA_SP SP+0
          CFI (cfiCond728) CFA_SP SP+0
          CFI (cfiPicker729) CFA_SP SP+0
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiPicker729

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond730 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_310
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function ZDP_ServerDiscReq
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond731) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond731) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond731) CFA_SP SP+-2
          CFI (cfiCond731) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker732 Using cfiCommon1
          CFI (cfiPicker732) NoFunction
          CFI (cfiPicker732) Picker
        MOV     A,R1
        MOV     R6,A
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiPicker732
        REQUIRE ??Subroutine149_0
        ; // Fall through to label ??Subroutine149_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine149_0:
          CFI Block cfiCond733 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_323
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond734 Using cfiCommon0
          CFI (cfiCond734) Function ZDP_UserDescSet
          CFI (cfiCond734) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond734) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond734) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond734) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond734) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond734) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond734) CFA_SP SP+-2
          CFI (cfiCond734) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond735 Using cfiCommon0
          CFI (cfiCond735) Function ZDP_MatchDescReq
          CFI (cfiCond735) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond735) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond735) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond735) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond735) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond735) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond735) CFA_SP SP+-2
          CFI (cfiCond735) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function ZDP_ServerDiscReq
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+-2
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker737 Using cfiCommon1
          CFI (cfiPicker737) NoFunction
          CFI (cfiPicker737) Picker
        MOV     DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond733
          CFI EndBlock cfiCond734
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiPicker737
        REQUIRE ??Subroutine150_0
        ; // Fall through to label ??Subroutine150_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine150_0:
          CFI Block cfiCond738 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_312
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function ZDP_NwkAddrReq
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+-2
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function ZDP_UserDescRsp
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond740) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+-2
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function ZDP_GenericRsp
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+-2
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function ZDP_EndDeviceBindReq
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond742) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond742) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond742) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond742) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+-2
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function ZDP_EndDeviceBindReq
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+-2
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function ZDO_SendMsgCBs
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond744) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond744) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond744) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond744) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond744) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond744) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond744) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond744) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond744) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond744) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond744) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond744) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_SP SP+-2
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function ZDP_IncomingData
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_319
          CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond745) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond745) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond745) CFA_SP SP+-2
          CFI (cfiCond745) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ZDP_IncomingData
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+-2
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ZDP_IncomingData
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+-2
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ZDP_IncomingData
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+-2
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ZDP_IEEEAddrReq
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+-2
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function ZDP_UserDescSet
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+-2
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function ZDP_MatchDescReq
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond751) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond751) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond751) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond751) CFA_SP SP+-2
          CFI (cfiCond751) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function ZDP_ServerDiscReq
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+-2
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker753 Using cfiCommon1
          CFI (cfiPicker753) NoFunction
          CFI (cfiPicker753) Picker
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_330:
        RET
          CFI (cfiCond738) CFA_SP SP+0
          CFI (cfiCond739) CFA_SP SP+0
          CFI (cfiCond740) CFA_SP SP+0
          CFI (cfiCond741) CFA_SP SP+0
          CFI (cfiCond742) CFA_SP SP+0
          CFI (cfiCond743) CFA_SP SP+0
          CFI (cfiCond744) CFA_SP SP+0
          CFI (cfiCond745) CFA_SP SP+0
          CFI (cfiCond746) CFA_SP SP+0
          CFI (cfiCond747) CFA_SP SP+0
          CFI (cfiCond748) CFA_SP SP+0
          CFI (cfiCond749) CFA_SP SP+0
          CFI (cfiCond750) CFA_SP SP+0
          CFI (cfiCond751) CFA_SP SP+0
          CFI (cfiCond752) CFA_SP SP+0
          CFI (cfiPicker753) CFA_SP SP+0
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiPicker753

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond754 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function ZDP_NodeDescMsg
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_86
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+-4
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function ZDP_PowerDescMsg
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_87
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+-4
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function ZDP_UserDescRsp
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_49
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond757) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond757) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond757) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond757) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+-4
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond758 Using cfiCommon0
          CFI (cfiCond758) Function ZDP_ServerDiscRsp
          CFI (cfiCond758) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_50
          CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond758) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond758) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond758) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond758) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond758) CFA_SP SP+-4
          CFI (cfiCond758) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function ZDP_ServerDiscRsp
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_57
          CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond759) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond759) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond759) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond759) CFA_SP SP+-4
          CFI (cfiCond759) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function ZDP_GenericRsp
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_58
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-4
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function ZDP_NwkAddrReq
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_100
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+-4
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_101
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond762) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+-4
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function ZDP_PowerDescMsg
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_308
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+-4
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond764 Using cfiCommon0
          CFI (cfiCond764) Function ZDP_EPRsp
          CFI (cfiCond764) Conditional ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_309
          CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond764) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond764) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond764) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond764) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond764) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond764) CFA_SP SP+-4
          CFI (cfiCond764) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function zdpProcessAddrReq
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_307
          CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond765) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond765) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond765) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond765) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond765) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond765) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond765) CFA_SP SP+-4
          CFI (cfiCond765) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_305
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond766) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+-4
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_306
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+-4
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function ZDP_MatchDescReq
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_310
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond768) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond768) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+-4
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function ZDP_ServerDiscReq
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_311
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+-4
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function ZDP_IEEEAddrReq
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_323
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+-4
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond771 Using cfiCommon0
          CFI (cfiCond771) Function ZDP_UserDescSet
          CFI (cfiCond771) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_324
          CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond771) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond771) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond771) CFA_SP SP+-4
          CFI (cfiCond771) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond772 Using cfiCommon0
          CFI (cfiCond772) Function ZDP_SendData
          CFI (cfiCond772) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_312
          CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond772) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond772) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond772) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond772) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond772) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond772) CFA_SP SP+-4
          CFI (cfiCond772) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function ZDP_NwkAddrReq
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_313
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond773) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+-4
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function ZDP_UserDescRsp
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_314
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond774) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond774) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond774) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond774) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond774) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond774) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+-4
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function ZDP_GenericRsp
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_315
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_SP SP+-4
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function ZDP_EndDeviceBindReq
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_316
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+-4
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function ZDP_EndDeviceBindReq
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_317
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond777) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+-4
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function ZDO_SendMsgCBs
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_318
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond778) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond778) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond778) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond778) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond778) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond778) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond778) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_SP SP+-4
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond779 Using cfiCommon0
          CFI (cfiCond779) Function ZDP_IncomingData
          CFI (cfiCond779) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_319
          CFI (cfiCond779) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond779) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond779) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond779) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond779) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond779) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond779) CFA_SP SP+-4
          CFI (cfiCond779) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond780 Using cfiCommon0
          CFI (cfiCond780) Function ZDP_IncomingData
          CFI (cfiCond780) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_320
          CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond780) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond780) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond780) CFA_SP SP+-4
          CFI (cfiCond780) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function ZDP_IncomingData
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_321
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+-4
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function ZDP_IncomingData
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_322
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+-4
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker783 Using cfiCommon1
          CFI (cfiPicker783) NoFunction
          CFI (cfiPicker783) Picker
        LCALL   ??Subroutine151_0 & 0xFFFF
??CrossCallReturnLabel_337:
        MOV     R1,A
        RET
          CFI (cfiCond754) CFA_SP SP+-2
          CFI (cfiCond755) CFA_SP SP+-2
          CFI (cfiCond756) CFA_SP SP+-2
          CFI (cfiCond757) CFA_SP SP+-2
          CFI (cfiCond758) CFA_SP SP+-2
          CFI (cfiCond759) CFA_SP SP+-2
          CFI (cfiCond760) CFA_SP SP+-2
          CFI (cfiCond761) CFA_SP SP+-2
          CFI (cfiCond762) CFA_SP SP+-2
          CFI (cfiCond763) CFA_SP SP+-2
          CFI (cfiCond764) CFA_SP SP+-2
          CFI (cfiCond765) CFA_SP SP+-2
          CFI (cfiCond766) CFA_SP SP+-2
          CFI (cfiCond767) CFA_SP SP+-2
          CFI (cfiCond768) CFA_SP SP+-2
          CFI (cfiCond769) CFA_SP SP+-2
          CFI (cfiCond770) CFA_SP SP+-2
          CFI (cfiCond771) CFA_SP SP+-2
          CFI (cfiCond772) CFA_SP SP+-2
          CFI (cfiCond773) CFA_SP SP+-2
          CFI (cfiCond774) CFA_SP SP+-2
          CFI (cfiCond775) CFA_SP SP+-2
          CFI (cfiCond776) CFA_SP SP+-2
          CFI (cfiCond777) CFA_SP SP+-2
          CFI (cfiCond778) CFA_SP SP+-2
          CFI (cfiCond779) CFA_SP SP+-2
          CFI (cfiCond780) CFA_SP SP+-2
          CFI (cfiCond781) CFA_SP SP+-2
          CFI (cfiCond782) CFA_SP SP+-2
          CFI (cfiPicker783) CFA_SP SP+0
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiCond771
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiCond779
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiPicker783

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond784 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_334
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_174, ??CrossCallReturnLabel_40
          CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond785) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond785) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond785) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond785) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond785) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond785) CFA_SP SP+-6
          CFI (cfiCond785) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function ZDP_SimpleDescReq
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_174, ??CrossCallReturnLabel_41
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+-6
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_40
          CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond787) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond787) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond787) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond787) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond787) CFA_SP SP+-8
          CFI (cfiCond787) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function ZDP_SimpleDescReq
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_41
          CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond788) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond788) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond788) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond788) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond788) CFA_SP SP+-8
          CFI (cfiCond788) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function ZDP_DeviceAnnce
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_47
          CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond789) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond789) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond789) CFA_SP SP+-8
          CFI (cfiCond789) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function ZDP_GenericRsp
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_48
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond790) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+-8
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function ZDP_SimpleDescReq
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_35
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond791) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+-8
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function ZDP_GenericRsp
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_36
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond792) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+-8
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+-2
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker794 Using cfiCommon1
          CFI (cfiPicker794) NoFunction
          CFI (cfiPicker794) Picker
        MOV     DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiPicker794
        REQUIRE ??Subroutine151_0
        ; // Fall through to label ??Subroutine151_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine151_0:
          CFI Block cfiCond795 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-8
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function ZDP_SendData
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_20
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_SP SP+-8
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ZDP_NodeDescMsg
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_9
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+-8
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function ZDP_PowerDescMsg
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_168, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_10
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+-8
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond799 Using cfiCommon0
          CFI (cfiCond799) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond799) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_11
          CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond799) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond799) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond799) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond799) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond799) CFA_SP SP+-8
          CFI (cfiCond799) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond800 Using cfiCommon0
          CFI (cfiCond800) Function ZDP_SimpleDescReq
          CFI (cfiCond800) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_12
          CFI (cfiCond800) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond800) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond800) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond800) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond800) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond800) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond800) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond800) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond800) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond800) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond800) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond800) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond800) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond800) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond800) CFA_SP SP+-8
          CFI (cfiCond800) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond801 Using cfiCommon0
          CFI (cfiCond801) Function ZDP_MatchDescReq
          CFI (cfiCond801) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_15
          CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond801) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond801) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond801) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond801) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond801) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond801) CFA_SP SP+-8
          CFI (cfiCond801) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond802 Using cfiCommon0
          CFI (cfiCond802) Function ZDP_SimpleDescMsg
          CFI (cfiCond802) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_169, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_16
          CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond802) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond802) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond802) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond802) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond802) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond802) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond802) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond802) CFA_SP SP+-8
          CFI (cfiCond802) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond803 Using cfiCommon0
          CFI (cfiCond803) Function ZDP_EPRsp
          CFI (cfiCond803) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_23
          CFI (cfiCond803) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond803) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond803) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond803) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond803) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond803) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond803) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond803) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond803) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond803) CFA_SP SP+-6
          CFI (cfiCond803) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond804 Using cfiCommon0
          CFI (cfiCond804) Function ZDP_ServerDiscRsp
          CFI (cfiCond804) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_24
          CFI (cfiCond804) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond804) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond804) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond804) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond804) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond804) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond804) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond804) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond804) CFA_SP SP+-6
          CFI (cfiCond804) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function ZDP_EndDeviceBindReq
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_25
          CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond805) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond805) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond805) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond805) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond805) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond805) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond805) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond805) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond805) CFA_SP SP+-6
          CFI (cfiCond805) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond806 Using cfiCommon0
          CFI (cfiCond806) Function ZDP_BindUnbindReq
          CFI (cfiCond806) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_26
          CFI (cfiCond806) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond806) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond806) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond806) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond806) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond806) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond806) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond806) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond806) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond806) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond806) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond806) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond806) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond806) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond806) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond806) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond806) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond806) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond806) CFA_SP SP+-6
          CFI (cfiCond806) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond807 Using cfiCommon0
          CFI (cfiCond807) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond807) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_75
          CFI (cfiCond807) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond807) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond807) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond807) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond807) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond807) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond807) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond807) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond807) CFA_SP SP+-6
          CFI (cfiCond807) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_76
          CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond808) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond808) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond808) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond808) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond808) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond808) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond808) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond808) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond808) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond808) CFA_SP SP+-6
          CFI (cfiCond808) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond809 Using cfiCommon0
          CFI (cfiCond809) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond809) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond809) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond809) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond809) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond809) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond809) CFA_SP SP+-2
          CFI (cfiCond809) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond810 Using cfiCommon0
          CFI (cfiCond810) Function ZDP_UserDescSet
          CFI (cfiCond810) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_85
          CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond810) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond810) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond810) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond810) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond810) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond810) CFA_SP SP+-6
          CFI (cfiCond810) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond811 Using cfiCommon0
          CFI (cfiCond811) Function ZDP_NodeDescMsg
          CFI (cfiCond811) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_86
          CFI (cfiCond811) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond811) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond811) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond811) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond811) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond811) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond811) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond811) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond811) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond811) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond811) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond811) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond811) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond811) CFA_SP SP+-6
          CFI (cfiCond811) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond812 Using cfiCommon0
          CFI (cfiCond812) Function ZDP_PowerDescMsg
          CFI (cfiCond812) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_87
          CFI (cfiCond812) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond812) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond812) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond812) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond812) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond812) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond812) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond812) CFA_SP SP+-6
          CFI (cfiCond812) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function ZDP_UserDescRsp
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_49
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond813) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond813) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond813) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond813) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_SP SP+-6
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond814 Using cfiCommon0
          CFI (cfiCond814) Function ZDP_ServerDiscRsp
          CFI (cfiCond814) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_50
          CFI (cfiCond814) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond814) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond814) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond814) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond814) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond814) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond814) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond814) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond814) CFA_SP SP+-6
          CFI (cfiCond814) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond815 Using cfiCommon0
          CFI (cfiCond815) Function ZDP_ServerDiscRsp
          CFI (cfiCond815) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_57
          CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond815) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond815) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond815) CFA_SP SP+-6
          CFI (cfiCond815) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function ZDP_GenericRsp
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_58
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+-6
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond817 Using cfiCommon0
          CFI (cfiCond817) Function ZDP_NwkAddrReq
          CFI (cfiCond817) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_100
          CFI (cfiCond817) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond817) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond817) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond817) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond817) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond817) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond817) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond817) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond817) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond817) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond817) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond817) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond817) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond817) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond817) CFA_SP SP+-6
          CFI (cfiCond817) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond818 Using cfiCommon0
          CFI (cfiCond818) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond818) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_101
          CFI (cfiCond818) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond818) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond818) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond818) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond818) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond818) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond818) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond818) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond818) CFA_SP SP+-6
          CFI (cfiCond818) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond819 Using cfiCommon0
          CFI (cfiCond819) Function ZDP_PowerDescMsg
          CFI (cfiCond819) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_308
          CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond819) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond819) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond819) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond819) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond819) CFA_SP SP+-6
          CFI (cfiCond819) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond820 Using cfiCommon0
          CFI (cfiCond820) Function ZDP_EPRsp
          CFI (cfiCond820) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_309
          CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond820) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond820) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond820) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond820) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond820) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond820) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond820) CFA_SP SP+-6
          CFI (cfiCond820) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond821 Using cfiCommon0
          CFI (cfiCond821) Function zdpProcessAddrReq
          CFI (cfiCond821) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_307
          CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond821) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond821) CFA_SP SP+-6
          CFI (cfiCond821) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_305
          CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond822) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond822) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond822) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond822) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond822) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond822) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond822) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond822) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond822) CFA_SP SP+-6
          CFI (cfiCond822) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond823 Using cfiCommon0
          CFI (cfiCond823) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond823) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_306
          CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond823) CFA_SP SP+-6
          CFI (cfiCond823) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond824 Using cfiCommon0
          CFI (cfiCond824) Function ZDP_MatchDescReq
          CFI (cfiCond824) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_310
          CFI (cfiCond824) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond824) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond824) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond824) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond824) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond824) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond824) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond824) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond824) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond824) CFA_SP SP+-6
          CFI (cfiCond824) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond825 Using cfiCommon0
          CFI (cfiCond825) Function ZDP_ServerDiscReq
          CFI (cfiCond825) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_311
          CFI (cfiCond825) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond825) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond825) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond825) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond825) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond825) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond825) CFA_SP SP+-6
          CFI (cfiCond825) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond826 Using cfiCommon0
          CFI (cfiCond826) Function ZDP_IEEEAddrReq
          CFI (cfiCond826) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_323
          CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond826) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond826) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond826) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond826) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond826) CFA_SP SP+-6
          CFI (cfiCond826) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond827 Using cfiCommon0
          CFI (cfiCond827) Function ZDP_UserDescSet
          CFI (cfiCond827) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_324
          CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond827) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond827) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond827) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond827) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond827) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond827) CFA_SP SP+-6
          CFI (cfiCond827) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond828 Using cfiCommon0
          CFI (cfiCond828) Function ZDP_SendData
          CFI (cfiCond828) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_312
          CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond828) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond828) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond828) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond828) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond828) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond828) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond828) CFA_SP SP+-6
          CFI (cfiCond828) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond829 Using cfiCommon0
          CFI (cfiCond829) Function ZDP_NwkAddrReq
          CFI (cfiCond829) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_313
          CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond829) CFA_SP SP+-6
          CFI (cfiCond829) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond830 Using cfiCommon0
          CFI (cfiCond830) Function ZDP_UserDescRsp
          CFI (cfiCond830) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_314
          CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond830) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond830) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond830) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond830) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond830) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond830) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond830) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond830) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond830) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond830) CFA_SP SP+-6
          CFI (cfiCond830) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond831 Using cfiCommon0
          CFI (cfiCond831) Function ZDP_GenericRsp
          CFI (cfiCond831) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_315
          CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond831) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond831) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond831) CFA_SP SP+-6
          CFI (cfiCond831) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond832 Using cfiCommon0
          CFI (cfiCond832) Function ZDP_EndDeviceBindReq
          CFI (cfiCond832) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_316
          CFI (cfiCond832) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond832) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond832) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond832) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond832) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond832) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond832) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond832) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond832) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond832) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond832) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond832) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond832) CFA_SP SP+-6
          CFI (cfiCond832) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond833 Using cfiCommon0
          CFI (cfiCond833) Function ZDP_EndDeviceBindReq
          CFI (cfiCond833) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_317
          CFI (cfiCond833) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond833) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond833) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond833) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond833) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond833) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond833) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond833) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond833) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond833) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond833) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond833) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond833) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond833) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond833) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond833) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond833) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond833) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond833) CFA_SP SP+-6
          CFI (cfiCond833) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond834 Using cfiCommon0
          CFI (cfiCond834) Function ZDO_SendMsgCBs
          CFI (cfiCond834) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_318
          CFI (cfiCond834) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond834) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond834) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond834) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond834) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond834) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond834) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond834) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond834) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond834) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond834) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond834) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond834) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond834) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond834) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond834) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond834) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond834) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond834) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond834) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond834) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond834) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond834) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond834) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond834) CFA_SP SP+-6
          CFI (cfiCond834) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function ZDP_IncomingData
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_319
          CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond835) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond835) CFA_SP SP+-6
          CFI (cfiCond835) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond836 Using cfiCommon0
          CFI (cfiCond836) Function ZDP_IncomingData
          CFI (cfiCond836) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_320
          CFI (cfiCond836) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond836) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond836) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond836) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond836) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond836) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond836) CFA_SP SP+-6
          CFI (cfiCond836) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond837 Using cfiCommon0
          CFI (cfiCond837) Function ZDP_IncomingData
          CFI (cfiCond837) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_321
          CFI (cfiCond837) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond837) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond837) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond837) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond837) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond837) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond837) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond837) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond837) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond837) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond837) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond837) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond837) CFA_SP SP+-6
          CFI (cfiCond837) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond838 Using cfiCommon0
          CFI (cfiCond838) Function ZDP_IncomingData
          CFI (cfiCond838) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_322
          CFI (cfiCond838) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond838) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond838) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond838) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond838) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond838) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond838) CFA_SP SP+-6
          CFI (cfiCond838) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond839 Using cfiCommon0
          CFI (cfiCond839) Function ZDP_DeviceAnnce
          CFI (cfiCond839) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond839) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond839) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond839) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond839) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond839) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond839) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond839) CFA_SP SP+-2
          CFI (cfiCond839) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond840 Using cfiCommon0
          CFI (cfiCond840) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond840) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_174, ??CrossCallReturnLabel_40
          CFI (cfiCond840) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond840) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond840) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond840) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond840) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond840) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond840) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond840) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond840) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond840) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond840) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond840) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond840) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond840) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond840) CFA_SP SP+-6
          CFI (cfiCond840) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond841 Using cfiCommon0
          CFI (cfiCond841) Function ZDP_SimpleDescReq
          CFI (cfiCond841) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_174, ??CrossCallReturnLabel_41
          CFI (cfiCond841) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond841) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond841) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond841) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond841) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond841) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond841) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond841) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond841) CFA_SP SP+-6
          CFI (cfiCond841) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_40
          CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond842) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond842) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond842) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond842) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond842) CFA_SP SP+-8
          CFI (cfiCond842) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond843 Using cfiCommon0
          CFI (cfiCond843) Function ZDP_SimpleDescReq
          CFI (cfiCond843) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_41
          CFI (cfiCond843) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond843) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond843) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond843) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond843) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond843) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond843) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond843) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond843) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond843) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond843) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond843) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond843) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond843) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond843) CFA_SP SP+-8
          CFI (cfiCond843) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function ZDP_DeviceAnnce
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_47
          CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond844) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond844) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond844) CFA_SP SP+-8
          CFI (cfiCond844) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function ZDP_GenericRsp
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_48
          CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond845) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond845) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond845) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond845) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond845) CFA_SP SP+-8
          CFI (cfiCond845) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond846 Using cfiCommon0
          CFI (cfiCond846) Function ZDP_SimpleDescReq
          CFI (cfiCond846) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_35
          CFI (cfiCond846) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond846) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond846) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond846) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond846) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond846) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond846) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond846) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond846) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond846) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond846) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond846) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond846) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond846) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond846) CFA_SP SP+-8
          CFI (cfiCond846) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond847 Using cfiCommon0
          CFI (cfiCond847) Function ZDP_GenericRsp
          CFI (cfiCond847) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_36
          CFI (cfiCond847) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond847) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond847) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond847) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond847) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond847) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond847) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond847) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond847) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond847) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond847) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond847) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond847) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond847) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond847) CFA_SP SP+-8
          CFI (cfiCond847) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+-2
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker849 Using cfiCommon1
          CFI (cfiPicker849) NoFunction
          CFI (cfiPicker849) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI (cfiCond795) CFA_SP SP+-6
          CFI (cfiCond796) CFA_SP SP+-6
          CFI (cfiCond797) CFA_SP SP+-6
          CFI (cfiCond798) CFA_SP SP+-6
          CFI (cfiCond799) CFA_SP SP+-6
          CFI (cfiCond800) CFA_SP SP+-6
          CFI (cfiCond801) CFA_SP SP+-6
          CFI (cfiCond802) CFA_SP SP+-6
          CFI (cfiCond803) CFA_SP SP+-4
          CFI (cfiCond804) CFA_SP SP+-4
          CFI (cfiCond805) CFA_SP SP+-4
          CFI (cfiCond806) CFA_SP SP+-4
          CFI (cfiCond807) CFA_SP SP+-4
          CFI (cfiCond808) CFA_SP SP+-4
          CFI (cfiCond809) CFA_SP SP+0
          CFI (cfiCond810) CFA_SP SP+-4
          CFI (cfiCond811) CFA_SP SP+-4
          CFI (cfiCond812) CFA_SP SP+-4
          CFI (cfiCond813) CFA_SP SP+-4
          CFI (cfiCond814) CFA_SP SP+-4
          CFI (cfiCond815) CFA_SP SP+-4
          CFI (cfiCond816) CFA_SP SP+-4
          CFI (cfiCond817) CFA_SP SP+-4
          CFI (cfiCond818) CFA_SP SP+-4
          CFI (cfiCond819) CFA_SP SP+-4
          CFI (cfiCond820) CFA_SP SP+-4
          CFI (cfiCond821) CFA_SP SP+-4
          CFI (cfiCond822) CFA_SP SP+-4
          CFI (cfiCond823) CFA_SP SP+-4
          CFI (cfiCond824) CFA_SP SP+-4
          CFI (cfiCond825) CFA_SP SP+-4
          CFI (cfiCond826) CFA_SP SP+-4
          CFI (cfiCond827) CFA_SP SP+-4
          CFI (cfiCond828) CFA_SP SP+-4
          CFI (cfiCond829) CFA_SP SP+-4
          CFI (cfiCond830) CFA_SP SP+-4
          CFI (cfiCond831) CFA_SP SP+-4
          CFI (cfiCond832) CFA_SP SP+-4
          CFI (cfiCond833) CFA_SP SP+-4
          CFI (cfiCond834) CFA_SP SP+-4
          CFI (cfiCond835) CFA_SP SP+-4
          CFI (cfiCond836) CFA_SP SP+-4
          CFI (cfiCond837) CFA_SP SP+-4
          CFI (cfiCond838) CFA_SP SP+-4
          CFI (cfiCond839) CFA_SP SP+0
          CFI (cfiCond840) CFA_SP SP+-4
          CFI (cfiCond841) CFA_SP SP+-4
          CFI (cfiCond842) CFA_SP SP+-6
          CFI (cfiCond843) CFA_SP SP+-6
          CFI (cfiCond844) CFA_SP SP+-6
          CFI (cfiCond845) CFA_SP SP+-6
          CFI (cfiCond846) CFA_SP SP+-6
          CFI (cfiCond847) CFA_SP SP+-6
          CFI (cfiCond848) CFA_SP SP+0
          CFI (cfiPicker849) CFA_SP SP+0
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiCond799
          CFI EndBlock cfiCond800
          CFI EndBlock cfiCond801
          CFI EndBlock cfiCond802
          CFI EndBlock cfiCond803
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiCond806
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiCond809
          CFI EndBlock cfiCond810
          CFI EndBlock cfiCond811
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiCond814
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiCond817
          CFI EndBlock cfiCond818
          CFI EndBlock cfiCond819
          CFI EndBlock cfiCond820
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiCond823
          CFI EndBlock cfiCond824
          CFI EndBlock cfiCond825
          CFI EndBlock cfiCond826
          CFI EndBlock cfiCond827
          CFI EndBlock cfiCond828
          CFI EndBlock cfiCond829
          CFI EndBlock cfiCond830
          CFI EndBlock cfiCond831
          CFI EndBlock cfiCond832
          CFI EndBlock cfiCond833
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiCond836
          CFI EndBlock cfiCond837
          CFI EndBlock cfiCond838
          CFI EndBlock cfiCond839
          CFI EndBlock cfiCond840
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiCond846
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiPicker849
// 1949 
// 1950 /*********************************************************************
// 1951  * Incoming message processor
// 1952  */
// 1953 
// 1954 /*********************************************************************
// 1955  * @fn          ZDP_IncomingData
// 1956  *
// 1957  * @brief       This function indicates the transfer of a data PDU (ASDU)
// 1958  *              from the APS sub-layer to the ZDO.
// 1959  *
// 1960  * @param       pData - Incoming Message
// 1961  *
// 1962  * @return      none
// 1963  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1964 void ZDP_IncomingData( afIncomingMSGPacket_t *pData )
ZDP_IncomingData:
          CFI Block cfiBlock850 Using cfiCommon0
          CFI Function ZDP_IncomingData
        CODE
// 1965 {
        FUNCALL ZDP_IncomingData, ZDO_SendMsgCBs
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_IncomingData, ZDApp_InMsgCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 23
        MOV     A,#-0x17
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
// 1966   uint8 x = 0;
        MOV     R6,#0x0
// 1967   uint8 handled;
// 1968   zdoIncomingMsg_t inMsg;
// 1969 
// 1970   inMsg.srcAddr.addrMode = Addr16Bit;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        LCALL   ?Subroutine27 & 0xFFFF
// 1971   inMsg.srcAddr.addr.shortAddr = pData->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_38:
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_319:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
// 1972   inMsg.wasBroadcast = pData->wasBroadcast;
??CrossCallReturnLabel_67:
        MOV     A,R2
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine27 & 0xFFFF
// 1973   inMsg.clusterID = pData->clusterId;
??CrossCallReturnLabel_39:
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_320:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
// 1974   inMsg.SecurityUse = pData->SecurityUse;
??CrossCallReturnLabel_68:
        MOV     A,R2
        ADD     A,#0x19
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1975 
// 1976   inMsg.asduLen = pData->cmd.DataLength-1;
        MOV     A,R2
        ADD     A,#0x20
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        DEC     A
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1977   inMsg.asdu = pData->cmd.Data+1;
        MOV     A,R2
        ADD     A,#0x22
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ??Subroutine128_0 & 0xFFFF
// 1978   inMsg.TransSeq = pData->cmd.Data[0];
??CrossCallReturnLabel_240:
        LCALL   ??Subroutine141_0 & 0xFFFF
??CrossCallReturnLabel_276:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1979   inMsg.macDestAddr = pData->macDestAddr;
        MOV     A,R2
        ADD     A,#0x12
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_321:
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
// 1980   inMsg.macSrcAddr = pData->macSrcAddr;
??CrossCallReturnLabel_69:
        MOV     A,R2
        ADD     A,#0x24
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_322:
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine43 & 0xFFFF
// 1981 
// 1982   handled = ZDO_SendMsgCBs( &inMsg );
??CrossCallReturnLabel_70:
        ; Setup parameters for call to function ZDO_SendMsgCBs
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??ZDO_SendMsgCBs::?relay`; Banked call to: ZDO_SendMsgCBs
        MOV     A,R1
        MOV     R4,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_104:
        SJMP    ??ZDP_IncomingData_0
// 1983 
// 1984 #if (defined MT_ZDO_CB_FUNC)
// 1985 #if !defined MT_TASK
// 1986   if (zgZdoDirectCB)
// 1987 #endif
// 1988   {
// 1989     MT_ZdoDirectCB( pData, &inMsg );
// 1990   }
// 1991 #endif
// 1992 
// 1993   while ( zdpMsgProcs[x].clusterID != 0xFFFF )
// 1994   {
// 1995     if ( zdpMsgProcs[x].clusterID == inMsg.clusterID )
// 1996     {
// 1997       zdpMsgProcs[x].pFn( &inMsg );
// 1998       return;
// 1999     }
// 2000     x++;
??ZDP_IncomingData_1:
        INC     R6
??ZDP_IncomingData_0:
        MOV     ?V2,R6
        MOV     ?V3,#0x0
        MOV     A,#0x2
        MOV     R0,#?V2
        LCALL   ?S_SHL
        MOV     A,#zdpMsgProcs & 0xff
        ADD     A,?V2
        MOV     R0,A
        MOV     A,#(zdpMsgProcs >> 8) & 0xff
        ADDC    A,?V3
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVC    A,@A+DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        MOVC    A,@A+DPTR
        MOV     DPH,A
        POP     DPL
          CFI CFA_SP SP+0
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     A,#-0x1
        XRL     A,R2
        JNZ     ??ZDP_IncomingData_2
        MOV     A,#-0x1
        XRL     A,R3
??ZDP_IncomingData_2:
        JZ      ??ZDP_IncomingData_3
        MOV     A,?V0
        XRL     A,R2
        JNZ     ??ZDP_IncomingData_4
        MOV     A,?V1
        XRL     A,R3
??ZDP_IncomingData_4:
        JNZ     ??ZDP_IncomingData_1
        ; Setup parameters for indirect call
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVC    A,@A+DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        MOVC    A,@A+DPTR
        MOV     DPH,A
        POP     DPL
          CFI CFA_SP SP+0
        LCALL   ?CALL_IND
        SJMP    ??ZDP_IncomingData_5
// 2001   }
// 2002 
// 2003   // Handle unhandled messages
// 2004   if ( !handled )
??ZDP_IncomingData_3:
        MOV     A,R4
        JNZ     ??ZDP_IncomingData_5
// 2005     ZDApp_InMsgCB( &inMsg );
        ; Setup parameters for call to function ZDApp_InMsgCB
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??ZDApp_InMsgCB::?relay`; Banked call to: ZDApp_InMsgCB
// 2006 }
??ZDP_IncomingData_5:
        MOV     A,#0x17
        LJMP    ??Subroutine138_0 & 0xFFFF
          CFI EndBlock cfiBlock850

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond851 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond852) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond852) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond852) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond852) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+-2
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function ZDP_IncomingData
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond853) CFA_SP SP+-2
          CFI (cfiCond853) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker854 Using cfiCommon1
          CFI (cfiPicker854) NoFunction
          CFI (cfiPicker854) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        RET
          CFI (cfiCond851) CFA_SP SP+0
          CFI (cfiCond852) CFA_SP SP+0
          CFI (cfiCond853) CFA_SP SP+0
          CFI (cfiPicker854) CFA_SP SP+0
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiPicker854

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond855 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function ZDP_IncomingData
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+-2
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond857 Using cfiCommon0
          CFI (cfiCond857) Function ZDP_IncomingData
          CFI (cfiCond857) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond857) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond857) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond857) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond857) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond857) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond857) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond857) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond857) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond857) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond857) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond857) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond857) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond857) CFA_SP SP+-2
          CFI (cfiCond857) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker858 Using cfiCommon1
          CFI (cfiPicker858) NoFunction
          CFI (cfiPicker858) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI (cfiCond855) CFA_SP SP+0
          CFI (cfiCond856) CFA_SP SP+0
          CFI (cfiCond857) CFA_SP SP+0
          CFI (cfiPicker858) CFA_SP SP+0
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiCond857
          CFI EndBlock cfiPicker858

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for ZDP_TmpBuf>`:
        DATA16
        DW ZDP_Buf + 1H

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??fillAndSend::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    fillAndSend

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SendData::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SendData

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NWKAddrOfInterestReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NWKAddrOfInterestReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NwkAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NwkAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_IEEEAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_IEEEAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MatchDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SimpleDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_UserDescSet::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_UserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ServerDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_DeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_DeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_EndDeviceTimeoutReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_EndDeviceTimeoutReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zdpProcessAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zdpProcessAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NodeDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NodeDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_PowerDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_PowerDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SimpleDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SimpleDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_EPRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_EPRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_UserDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_UserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ServerDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_GenericRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_GenericRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_EndDeviceBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_EndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_BindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_BindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtDirectJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtPermitJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtLeaveReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkUpdateReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkUpdateReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtLqiRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtRtgRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtBindRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkUpdateNotify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RegisterForZDOMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RegisterForZDOMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RemoveRegisteredCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RemoveRegisteredCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_SendMsgCBs::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_SendMsgCBs

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_IncomingData::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_IncomingData

        END
// 2007 
// 2008 /*********************************************************************
// 2009 *********************************************************************/
// 2010 
// 
// 7 729 bytes in segment BANKED_CODE
//   210 bytes in segment BANK_RELAYS
//    29 bytes in segment CODE_C
//     2 bytes in segment XDATA_I
//     2 bytes in segment XDATA_ID
//    84 bytes in segment XDATA_Z
// 
// 7 970 bytes of CODE  memory
//    86 bytes of XDATA memory
//
//Errors: none
//Warnings: none
